2012-08-01 10:32:34,640 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 10:38:37,527 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 10:43:25,601 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 10:45:46,972 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 10:47:26,902 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 10:48:51,878 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 10:48:52,410 [DEBUG] django.db.backends: (0.095) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2012-08-01 10:48:52,490 [DEBUG] django.db.backends: (0.078) CREATE TABLE "api_business" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "lat" double precision NOT NULL,
    "lon" double precision NOT NULL,
    "address" varchar(250) NOT NULL,
    "city" varchar(100) NOT NULL,
    "state" varchar(2) NOT NULL
)
;; args=()
2012-08-01 10:48:52,564 [DEBUG] django.db.backends: (0.073) CREATE TABLE "api_photo" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "image" varchar(100) NOT NULL,
    "image_medium" varchar(100) NOT NULL,
    "image_thumb" varchar(100) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "title" varchar(300) NOT NULL,
    "caption" text NOT NULL
)
;; args=()
2012-08-01 10:48:52,640 [DEBUG] django.db.backends: (0.076) CREATE TABLE "api_tag" (
    "id" serial NOT NULL PRIMARY KEY,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "descr" text NOT NULL,
    "icon" text NOT NULL
)
;; args=()
2012-08-01 10:48:52,705 [DEBUG] django.db.backends: (0.064) CREATE TABLE "api_businesscategory" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:52,765 [DEBUG] django.db.backends: (0.060) CREATE TABLE "api_usersubscription" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:52,823 [DEBUG] django.db.backends: (0.058) CREATE TABLE "api_device" (
    "id" serial NOT NULL PRIMARY KEY,
    "os" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    "manufacturer" varchar(100) NOT NULL,
    "deviceID" integer NOT NULL
)
;; args=()
2012-08-01 10:48:52,893 [DEBUG] django.db.backends: (0.069) CREATE TABLE "api_allsortzuser" (
    "id" serial NOT NULL PRIMARY KEY,
    "distance_threshold" integer NOT NULL,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "metric" boolean NOT NULL,
    "device_id" integer NOT NULL REFERENCES "api_device" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:52,960 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_offer" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "restricitons" varchar(1000) NOT NULL,
    "created_on" timestamp with time zone NOT NULL,
    "valid_from" timestamp with time zone NOT NULL,
    "valid_until" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 10:48:53,016 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_businessdeal" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "cost" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 10:48:53,073 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_businessaction" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "reward_deal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "reward_value" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 10:48:53,132 [DEBUG] django.db.backends: (0.058) CREATE TABLE "api_asuserdeal" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businessdeal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "received_on" timestamp with time zone NOT NULL,
    "used_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 10:48:53,205 [DEBUG] django.db.backends: (0.072) CREATE TABLE "api_asuseraction" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "action_id" integer NOT NULL REFERENCES "api_businessaction" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "completed_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 10:48:53,274 [DEBUG] django.db.backends: (0.069) CREATE TABLE "api_discussion" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "reply_to_id" integer,
    "content" text NOT NULL
)
;; args=()
2012-08-01 10:48:53,319 [DEBUG] django.db.backends: (0.045) ALTER TABLE "api_discussion" ADD CONSTRAINT "reply_to_id_refs_id_7f5f35a5" FOREIGN KEY ("reply_to_id") REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 10:48:53,377 [DEBUG] django.db.backends: (0.057) CREATE TABLE "api_categorydiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businesstag_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,441 [DEBUG] django.db.backends: (0.064) CREATE TABLE "api_businessdiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,500 [DEBUG] django.db.backends: (0.059) CREATE TABLE "api_photodiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,558 [DEBUG] django.db.backends: (0.057) CREATE TABLE "api_rating" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "rating" integer NOT NULL
)
;; args=()
2012-08-01 10:48:53,612 [DEBUG] django.db.backends: (0.054) CREATE TABLE "api_discussionrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "discussion_id" integer NOT NULL REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,675 [DEBUG] django.db.backends: (0.062) CREATE TABLE "api_photorating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,733 [DEBUG] django.db.backends: (0.057) CREATE TABLE "api_categoryrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,789 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_businessrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 10:48:53,972 [DEBUG] django.db.backends: (0.087) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', 'auth')
2012-08-01 10:48:54,019 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', 'auth')
2012-08-01 10:48:54,064 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', 'auth')
2012-08-01 10:48:54,117 [DEBUG] django.db.backends: (0.049) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2012-08-01 10:48:54,161 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=('auth',)
2012-08-01 10:48:54,208 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', 'contenttypes')
2012-08-01 10:48:54,257 [DEBUG] django.db.backends: (0.045) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2012-08-01 10:48:54,303 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=('contenttypes',)
2012-08-01 10:48:54,349 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', 'sessions')
2012-08-01 10:48:54,397 [DEBUG] django.db.backends: (0.045) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2012-08-01 10:48:54,442 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=('sessions',)
2012-08-01 10:48:54,503 [DEBUG] django.db.backends: (0.057) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', 'sites')
2012-08-01 10:48:54,551 [DEBUG] django.db.backends: (0.046) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2012-08-01 10:48:54,597 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=('sites',)
2012-08-01 10:48:54,646 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'business'  AND "django_content_type"."app_label" = 'api' ); args=('business', 'api')
2012-08-01 10:48:54,688 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:54,730 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business', 'api', 'business') RETURNING "django_content_type"."id"; args=(u'business', 'api', 'business')
2012-08-01 10:48:54,867 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photo'  AND "django_content_type"."app_label" = 'api' ); args=('photo', 'api')
2012-08-01 10:48:54,910 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:54,952 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo', 'api', 'photo') RETURNING "django_content_type"."id"; args=(u'photo', 'api', 'photo')
2012-08-01 10:48:55,084 [DEBUG] django.db.backends: (0.087) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tag'  AND "django_content_type"."app_label" = 'api' ); args=('tag', 'api')
2012-08-01 10:48:55,127 [DEBUG] django.db.backends: (0.042) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:55,171 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tag', 'api', 'tag') RETURNING "django_content_type"."id"; args=(u'tag', 'api', 'tag')
2012-08-01 10:48:55,310 [DEBUG] django.db.backends: (0.086) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businesscategory'  AND "django_content_type"."app_label" = 'api' ); args=('businesscategory', 'api')
2012-08-01 10:48:55,360 [DEBUG] django.db.backends: (0.049) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:55,405 [DEBUG] django.db.backends: (0.044) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business category', 'api', 'businesscategory') RETURNING "django_content_type"."id"; args=(u'business category', 'api', 'businesscategory')
2012-08-01 10:48:55,550 [DEBUG] django.db.backends: (0.091) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'usersubscription'  AND "django_content_type"."app_label" = 'api' ); args=('usersubscription', 'api')
2012-08-01 10:48:55,592 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:55,635 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user subscription', 'api', 'usersubscription') RETURNING "django_content_type"."id"; args=(u'user subscription', 'api', 'usersubscription')
2012-08-01 10:48:55,783 [DEBUG] django.db.backends: (0.096) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'device'  AND "django_content_type"."app_label" = 'api' ); args=('device', 'api')
2012-08-01 10:48:55,831 [DEBUG] django.db.backends: (0.047) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:55,876 [DEBUG] django.db.backends: (0.044) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('device', 'api', 'device') RETURNING "django_content_type"."id"; args=(u'device', 'api', 'device')
2012-08-01 10:48:56,036 [DEBUG] django.db.backends: (0.097) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'allsortzuser'  AND "django_content_type"."app_label" = 'api' ); args=('allsortzuser', 'api')
2012-08-01 10:48:56,081 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:56,130 [DEBUG] django.db.backends: (0.049) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('allsortz user', 'api', 'allsortzuser') RETURNING "django_content_type"."id"; args=(u'allsortz user', 'api', 'allsortzuser')
2012-08-01 10:48:56,316 [DEBUG] django.db.backends: (0.111) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'offer'  AND "django_content_type"."app_label" = 'api' ); args=('offer', 'api')
2012-08-01 10:48:56,358 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:56,402 [DEBUG] django.db.backends: (0.044) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('offer', 'api', 'offer') RETURNING "django_content_type"."id"; args=(u'offer', 'api', 'offer')
2012-08-01 10:48:56,543 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdeal'  AND "django_content_type"."app_label" = 'api' ); args=('businessdeal', 'api')
2012-08-01 10:48:56,586 [DEBUG] django.db.backends: (0.043) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:56,630 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business deal', 'api', 'businessdeal') RETURNING "django_content_type"."id"; args=(u'business deal', 'api', 'businessdeal')
2012-08-01 10:48:56,783 [DEBUG] django.db.backends: (0.097) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessaction'  AND "django_content_type"."app_label" = 'api' ); args=('businessaction', 'api')
2012-08-01 10:48:56,826 [DEBUG] django.db.backends: (0.042) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:56,870 [DEBUG] django.db.backends: (0.044) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business action', 'api', 'businessaction') RETURNING "django_content_type"."id"; args=(u'business action', 'api', 'businessaction')
2012-08-01 10:48:57,007 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuserdeal'  AND "django_content_type"."app_label" = 'api' ); args=('asuserdeal', 'api')
2012-08-01 10:48:57,048 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:57,092 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user deal', 'api', 'asuserdeal') RETURNING "django_content_type"."id"; args=(u'as user deal', 'api', 'asuserdeal')
2012-08-01 10:48:57,228 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuseraction'  AND "django_content_type"."app_label" = 'api' ); args=('asuseraction', 'api')
2012-08-01 10:48:57,270 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:57,313 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user action', 'api', 'asuseraction') RETURNING "django_content_type"."id"; args=(u'as user action', 'api', 'asuseraction')
2012-08-01 10:48:57,444 [DEBUG] django.db.backends: (0.086) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussion'  AND "django_content_type"."app_label" = 'api' ); args=('discussion', 'api')
2012-08-01 10:48:57,487 [DEBUG] django.db.backends: (0.043) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:57,530 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion', 'api', 'discussion') RETURNING "django_content_type"."id"; args=(u'discussion', 'api', 'discussion')
2012-08-01 10:48:57,678 [DEBUG] django.db.backends: (0.095) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categorydiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('categorydiscussion', 'api')
2012-08-01 10:48:57,722 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:57,765 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category discussion', 'api', 'categorydiscussion') RETURNING "django_content_type"."id"; args=(u'category discussion', 'api', 'categorydiscussion')
2012-08-01 10:48:57,903 [DEBUG] django.db.backends: (0.089) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('businessdiscussion', 'api')
2012-08-01 10:48:57,945 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:57,988 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business discussion', 'api', 'businessdiscussion') RETURNING "django_content_type"."id"; args=(u'business discussion', 'api', 'businessdiscussion')
2012-08-01 10:48:58,130 [DEBUG] django.db.backends: (0.088) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photodiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('photodiscussion', 'api')
2012-08-01 10:48:58,172 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:58,219 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo discussion', 'api', 'photodiscussion') RETURNING "django_content_type"."id"; args=(u'photo discussion', 'api', 'photodiscussion')
2012-08-01 10:48:58,361 [DEBUG] django.db.backends: (0.087) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'rating'  AND "django_content_type"."app_label" = 'api' ); args=('rating', 'api')
2012-08-01 10:48:58,402 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:58,446 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('rating', 'api', 'rating') RETURNING "django_content_type"."id"; args=(u'rating', 'api', 'rating')
2012-08-01 10:48:58,950 [DEBUG] django.db.backends: (0.448) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussionrating'  AND "django_content_type"."app_label" = 'api' ); args=('discussionrating', 'api')
2012-08-01 10:48:58,991 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:59,034 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion rating', 'api', 'discussionrating') RETURNING "django_content_type"."id"; args=(u'discussion rating', 'api', 'discussionrating')
2012-08-01 10:48:59,226 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photorating'  AND "django_content_type"."app_label" = 'api' ); args=('photorating', 'api')
2012-08-01 10:48:59,268 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:59,311 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo rating', 'api', 'photorating') RETURNING "django_content_type"."id"; args=(u'photo rating', 'api', 'photorating')
2012-08-01 10:48:59,455 [DEBUG] django.db.backends: (0.088) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categoryrating'  AND "django_content_type"."app_label" = 'api' ); args=('categoryrating', 'api')
2012-08-01 10:48:59,498 [DEBUG] django.db.backends: (0.043) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:59,542 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category rating', 'api', 'categoryrating') RETURNING "django_content_type"."id"; args=(u'category rating', 'api', 'categoryrating')
2012-08-01 10:48:59,684 [DEBUG] django.db.backends: (0.089) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessrating'  AND "django_content_type"."app_label" = 'api' ); args=('businessrating', 'api')
2012-08-01 10:48:59,725 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 10:48:59,774 [DEBUG] django.db.backends: (0.048) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business rating', 'api', 'businessrating') RETURNING "django_content_type"."id"; args=(u'business rating', 'api', 'businessrating')
2012-08-01 10:48:59,917 [DEBUG] django.db.backends: (0.089) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 60, 61, 62, 63) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 60, 61, 62, 63)
2012-08-01 10:49:00,068 [DEBUG] django.db.backends: (0.144) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add business', 60, 'add_business'), ('Can change business', 60, 'change_business'), ('Can delete business', 60, 'delete_business'), ('Can add photo', 61, 'add_photo'), ('Can change photo', 61, 'change_photo'), ('Can delete photo', 61, 'delete_photo'), ('Can add tag', 62, 'add_tag'), ('Can change tag', 62, 'change_tag'), ('Can delete tag', 62, 'delete_tag'), ('Can add business category', 63, 'add_businesscategory'), ('Can change business category', 63, 'change_businesscategory'), ('Can delete business category', 63, 'delete_businesscategory'), ('Can add user subscription', 64, 'add_usersubscription'), ('Can change user subscription', 64, 'change_usersubscription'), ('Can delete user subscription', 64, 'delete_usersubscription'), ('Can add device', 65, 'add_device'), ('Can change device', 65, 'change_device'), ('Can delete device', 65, 'delete_device'), ('Can add allsortz user', 66, 'add_allsortzuser'), ('Can change allsortz user', 66, 'change_allsortzuser'), ('Can delete allsortz user', 66, 'delete_allsortzuser'), ('Can add offer', 67, 'add_offer'), ('Can change offer', 67, 'change_offer'), ('Can delete offer', 67, 'delete_offer'), ('Can add business deal', 68, 'add_businessdeal'), ('Can change business deal', 68, 'change_businessdeal'), ('Can delete business deal', 68, 'delete_businessdeal'), ('Can add business action', 69, 'add_businessaction'), ('Can change business action', 69, 'change_businessaction'), ('Can delete business action', 69, 'delete_businessaction'), ('Can add as user deal', 70, 'add_asuserdeal'), ('Can change as user deal', 70, 'change_asuserdeal'), ('Can delete as user deal', 70, 'delete_asuserdeal'), ('Can add as user action', 71, 'add_asuseraction'), ('Can change as user action', 71, 'change_asuseraction'), ('Can delete as user action', 71, 'delete_asuseraction'), ('Can add discussion', 72, 'add_discussion'), ('Can change discussion', 72, 'change_discussion'), ('Can delete discussion', 72, 'delete_discussion'), ('Can add category discussion', 73, 'add_categorydiscussion'), ('Can change category discussion', 73, 'change_categorydiscussion'), ('Can delete category discussion', 73, 'delete_categorydiscussion'), ('Can add business discussion', 74, 'add_businessdiscussion'), ('Can change business discussion', 74, 'change_businessdiscussion'), ('Can delete business discussion', 74, 'delete_businessdiscussion'), ('Can add photo discussion', 75, 'add_photodiscussion'), ('Can change photo discussion', 75, 'change_photodiscussion'), ('Can delete photo discussion', 75, 'delete_photodiscussion'), ('Can add rating', 76, 'add_rating'), ('Can change rating', 76, 'change_rating'), ('Can delete rating', 76, 'delete_rating'), ('Can add discussion rating', 77, 'add_discussionrating'), ('Can change discussion rating', 77, 'change_discussionrating'), ('Can delete discussion rating', 77, 'delete_discussionrating'), ('Can add photo rating', 78, 'add_photorating'), ('Can change photo rating', 78, 'change_photorating'), ('Can delete photo rating', 78, 'delete_photorating'), ('Can add category rating', 79, 'add_categoryrating'), ('Can change category rating', 79, 'change_categoryrating'), ('Can delete category rating', 79, 'delete_categoryrating'), ('Can add business rating', 80, 'add_businessrating'), ('Can change business rating', 80, 'change_businessrating'), ('Can delete business rating', 80, 'delete_businessrating'); args=(u'Can add business', 60, u'add_business', u'Can change business', 60, u'change_business', u'Can delete business', 60, u'delete_business', u'Can add photo', 61, u'add_photo', u'Can change photo', 61, u'change_photo', u'Can delete photo', 61, u'delete_photo', u'Can add tag', 62, u'add_tag', u'Can change tag', 62, u'change_tag', u'Can delete tag', 62, u'delete_tag', u'Can add business category', 63, u'add_businesscategory', u'Can change business category', 63, u'change_businesscategory', u'Can delete business category', 63, u'delete_businesscategory', u'Can add user subscription', 64, u'add_usersubscription', u'Can change user subscription', 64, u'change_usersubscription', u'Can delete user subscription', 64, u'delete_usersubscription', u'Can add device', 65, u'add_device', u'Can change device', 65, u'change_device', u'Can delete device', 65, u'delete_device', u'Can add allsortz user', 66, u'add_allsortzuser', u'Can change allsortz user', 66, u'change_allsortzuser', u'Can delete allsortz user', 66, u'delete_allsortzuser', u'Can add offer', 67, u'add_offer', u'Can change offer', 67, u'change_offer', u'Can delete offer', 67, u'delete_offer', u'Can add business deal', 68, u'add_businessdeal', u'Can change business deal', 68, u'change_businessdeal', u'Can delete business deal', 68, u'delete_businessdeal', u'Can add business action', 69, u'add_businessaction', u'Can change business action', 69, u'change_businessaction', u'Can delete business action', 69, u'delete_businessaction', u'Can add as user deal', 70, u'add_asuserdeal', u'Can change as user deal', 70, u'change_asuserdeal', u'Can delete as user deal', 70, u'delete_asuserdeal', u'Can add as user action', 71, u'add_asuseraction', u'Can change as user action', 71, u'change_asuseraction', u'Can delete as user action', 71, u'delete_asuseraction', u'Can add discussion', 72, u'add_discussion', u'Can change discussion', 72, u'change_discussion', u'Can delete discussion', 72, u'delete_discussion', u'Can add category discussion', 73, u'add_categorydiscussion', u'Can change category discussion', 73, u'change_categorydiscussion', u'Can delete category discussion', 73, u'delete_categorydiscussion', u'Can add business discussion', 74, u'add_businessdiscussion', u'Can change business discussion', 74, u'change_businessdiscussion', u'Can delete business discussion', 74, u'delete_businessdiscussion', u'Can add photo discussion', 75, u'add_photodiscussion', u'Can change photo discussion', 75, u'change_photodiscussion', u'Can delete photo discussion', 75, u'delete_photodiscussion', u'Can add rating', 76, u'add_rating', u'Can change rating', 76, u'change_rating', u'Can delete rating', 76, u'delete_rating', u'Can add discussion rating', 77, u'add_discussionrating', u'Can change discussion rating', 77, u'change_discussionrating', u'Can delete discussion rating', 77, u'delete_discussionrating', u'Can add photo rating', 78, u'add_photorating', u'Can change photo rating', 78, u'change_photorating', u'Can delete photo rating', 78, u'delete_photorating', u'Can add category rating', 79, u'add_categoryrating', u'Can change category rating', 79, u'change_categoryrating', u'Can delete category rating', 79, u'delete_categoryrating', u'Can add business rating', 80, u'add_businessrating', u'Can change business rating', 80, u'change_businessrating', u'Can delete business rating', 80, u'delete_businessrating')
2012-08-01 10:49:00,214 [DEBUG] django.db.backends: (0.089) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'api'  ORDER BY "django_content_type"."name" ASC; args=('api',)
2012-08-01 10:49:00,263 [DEBUG] django.db.backends: (0.046) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'recommendation'  AND "django_content_type"."app_label" = 'recommendation' ); args=('recommendation', 'recommendation')
2012-08-01 10:49:00,312 [DEBUG] django.db.backends: (0.046) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('businessfactor', 'recommendation')
2012-08-01 10:49:00,360 [DEBUG] django.db.backends: (0.045) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('userfactor', 'recommendation')
2012-08-01 10:49:00,410 [DEBUG] django.db.backends: (0.048) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (27, 28, 29) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(27, 28, 29)
2012-08-01 10:49:00,460 [DEBUG] django.db.backends: (0.048) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'recommendation'  ORDER BY "django_content_type"."name" ASC; args=('recommendation',)
2012-08-01 10:49:00,509 [DEBUG] django.db.backends: (0.046) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'registrationprofile'  AND "django_content_type"."app_label" = 'registration' ); args=('registrationprofile', 'registration')
2012-08-01 10:49:00,559 [DEBUG] django.db.backends: (0.048) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (30) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(30,)
2012-08-01 10:49:00,605 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'registration'  ORDER BY "django_content_type"."name" ASC; args=('registration',)
2012-08-01 10:49:00,654 [DEBUG] django.db.backends: (0.045) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'query'  AND "django_content_type"."app_label" = 'queries' ); args=('query', 'queries')
2012-08-01 10:49:00,701 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'querytag'  AND "django_content_type"."app_label" = 'queries' ); args=('querytag', 'queries')
2012-08-01 10:49:00,748 [DEBUG] django.db.backends: (0.045) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userqueryrelation'  AND "django_content_type"."app_label" = 'queries' ); args=('userqueryrelation', 'queries')
2012-08-01 10:49:00,798 [DEBUG] django.db.backends: (0.047) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (32, 33, 31) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(32, 33, 31)
2012-08-01 10:49:00,845 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'queries'  ORDER BY "django_content_type"."name" ASC; args=('queries',)
2012-08-01 10:49:00,893 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'page'  AND "django_content_type"."app_label" = 'wiki' ); args=('page', 'wiki')
2012-08-01 10:49:00,943 [DEBUG] django.db.backends: (0.047) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (58) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(58,)
2012-08-01 10:49:00,989 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'wiki'  ORDER BY "django_content_type"."name" ASC; args=('wiki',)
2012-08-01 10:49:01,035 [DEBUG] django.db.backends: (0.044) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', 'admin')
2012-08-01 10:49:01,098 [DEBUG] django.db.backends: (0.060) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (59) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(59,)
2012-08-01 10:49:01,145 [DEBUG] django.db.backends: (0.045) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=('admin',)
2012-08-01 10:49:01,214 [DEBUG] django.db.backends: (0.065) SELECT AddGeometryColumn('api_business', 'geom', 4326, 'POINT', 2);; args=()
2012-08-01 10:49:01,257 [DEBUG] django.db.backends: (0.042) ALTER TABLE "api_business" ALTER "geom" SET NOT NULL;; args=()
2012-08-01 10:49:01,305 [DEBUG] django.db.backends: (0.048) CREATE INDEX "api_business_geom_id" ON "api_business" USING GIST ( "geom" GIST_GEOMETRY_OPS );; args=()
2012-08-01 10:49:01,448 [DEBUG] django.db.backends: (0.096) CREATE INDEX "api_photo_user_id" ON "api_photo" ("user_id");; args=()
2012-08-01 10:49:01,500 [DEBUG] django.db.backends: (0.051) CREATE INDEX "api_photo_business_id" ON "api_photo" ("business_id");; args=()
2012-08-01 10:49:01,704 [DEBUG] django.db.backends: (0.160) CREATE INDEX "api_tag_creator_id" ON "api_tag" ("creator_id");; args=()
2012-08-01 10:49:01,881 [DEBUG] django.db.backends: (0.129) CREATE INDEX "api_businesscategory_business_id" ON "api_businesscategory" ("business_id");; args=()
2012-08-01 10:49:01,952 [DEBUG] django.db.backends: (0.071) CREATE INDEX "api_businesscategory_tag_id" ON "api_businesscategory" ("tag_id");; args=()
2012-08-01 10:49:02,124 [DEBUG] django.db.backends: (0.102) CREATE INDEX "api_usersubscription_user_id" ON "api_usersubscription" ("user_id");; args=()
2012-08-01 10:49:02,243 [DEBUG] django.db.backends: (0.118) CREATE INDEX "api_usersubscription_tag_id" ON "api_usersubscription" ("tag_id");; args=()
2012-08-01 10:49:02,389 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_allsortzuser_device_id" ON "api_allsortzuser" ("device_id");; args=()
2012-08-01 10:49:02,549 [DEBUG] django.db.backends: (0.117) CREATE INDEX "api_offer_business_id" ON "api_offer" ("business_id");; args=()
2012-08-01 10:49:02,707 [DEBUG] django.db.backends: (0.103) CREATE INDEX "api_businessaction_reward_deal_id" ON "api_businessaction" ("reward_deal_id");; args=()
2012-08-01 10:49:02,867 [DEBUG] django.db.backends: (0.114) CREATE INDEX "api_asuserdeal_ASuser_id" ON "api_asuserdeal" ("ASuser_id");; args=()
2012-08-01 10:49:02,928 [DEBUG] django.db.backends: (0.061) CREATE INDEX "api_asuserdeal_businessdeal_id" ON "api_asuserdeal" ("businessdeal_id");; args=()
2012-08-01 10:49:03,082 [DEBUG] django.db.backends: (0.109) CREATE INDEX "api_asuseraction_ASuser_id" ON "api_asuseraction" ("ASuser_id");; args=()
2012-08-01 10:49:03,144 [DEBUG] django.db.backends: (0.062) CREATE INDEX "api_asuseraction_action_id" ON "api_asuseraction" ("action_id");; args=()
2012-08-01 10:49:03,195 [DEBUG] django.db.backends: (0.050) SELECT AddGeometryColumn('api_asuseraction', 'location', 4326, 'POINT', 2);; args=()
2012-08-01 10:49:03,236 [DEBUG] django.db.backends: (0.041) ALTER TABLE "api_asuseraction" ALTER "location" SET NOT NULL;; args=()
2012-08-01 10:49:03,292 [DEBUG] django.db.backends: (0.055) CREATE INDEX "api_asuseraction_location_id" ON "api_asuseraction" USING GIST ( "location" GIST_GEOMETRY_OPS );; args=()
2012-08-01 10:49:03,444 [DEBUG] django.db.backends: (0.102) CREATE INDEX "api_discussion_user_id" ON "api_discussion" ("user_id");; args=()
2012-08-01 10:49:03,497 [DEBUG] django.db.backends: (0.053) CREATE INDEX "api_discussion_reply_to_id" ON "api_discussion" ("reply_to_id");; args=()
2012-08-01 10:49:03,632 [DEBUG] django.db.backends: (0.093) CREATE INDEX "api_categorydiscussion_businesstag_id" ON "api_categorydiscussion" ("businesstag_id");; args=()
2012-08-01 10:49:03,776 [DEBUG] django.db.backends: (0.098) CREATE INDEX "api_businessdiscussion_business_id" ON "api_businessdiscussion" ("business_id");; args=()
2012-08-01 10:49:03,923 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_photodiscussion_photo_id" ON "api_photodiscussion" ("photo_id");; args=()
2012-08-01 10:49:04,064 [DEBUG] django.db.backends: (0.096) CREATE INDEX "api_rating_user_id" ON "api_rating" ("user_id");; args=()
2012-08-01 10:49:04,208 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_discussionrating_discussion_id" ON "api_discussionrating" ("discussion_id");; args=()
2012-08-01 10:49:04,357 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_photorating_photo_id" ON "api_photorating" ("photo_id");; args=()
2012-08-01 10:49:04,504 [DEBUG] django.db.backends: (0.102) CREATE INDEX "api_categoryrating_category_id" ON "api_categoryrating" ("category_id");; args=()
2012-08-01 10:49:04,644 [DEBUG] django.db.backends: (0.095) CREATE INDEX "api_businessrating_business_id" ON "api_businessrating" ("business_id");; args=()
2012-08-01 10:49:04,989 [DEBUG] django.db.backends: (0.090) SET CONSTRAINTS ALL IMMEDIATE; args=()
2012-08-01 10:49:05,031 [DEBUG] django.db.backends: (0.041) SET CONSTRAINTS ALL DEFERRED; args=()
2012-08-01 11:40:46,423 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 11:53:07,622 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 11:57:14,057 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 11:58:17,941 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 11:58:58,092 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 11:59:55,662 [DEBUG] django.db.backends: (0.326) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 11:59:55,720 [DEBUG] django.db.backends: (0.056) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 15:59:55.663745+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 15:59:55.663745+00:00')
2012-08-01 11:59:55,850 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 11:59:55,915 [DEBUG] django.db.backends: (0.064) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 11:59:55,916 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 11:59:56,148 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 11:59:56,360 [DEBUG] django.db.backends: (0.044) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 11:59:56,450 [DEBUG] django.db.backends: (0.054) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f51a90>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f55790>, 4828.032)
2012-08-01 12:00:01,621 [DEBUG] django.db.backends: (0.121) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:00:01.144604+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:00:01.144604+00:00')
2012-08-01 12:00:01,672 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:00:10,699 [DEBUG] django.db.backends: (0.091) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:00:10.326745+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:00:10.326745+00:00')
2012-08-01 12:00:10,748 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:00:10,795 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:00:10,796 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:00:37,760 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:00:48,351 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:00:48,399 [DEBUG] django.db.backends: (0.044) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:00:48.352724+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:00:48.352724+00:00')
2012-08-01 12:00:48,447 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:00:48,494 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:00:48,494 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:01:07,973 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:01:12,444 [DEBUG] django.db.backends: (0.102) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:01:12,497 [DEBUG] django.db.backends: (0.049) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:01:12.446016+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:01:12.446016+00:00')
2012-08-01 12:01:12,548 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:01:12,600 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:01:12,699 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:01:12,902 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:01:13,465 [DEBUG] django.db.backends: (0.058) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Hoagie Haven', '2012-08-01 16:01:13.406871+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:01:13.406871+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x105f7cad0>, '242 Nassau St.', 'Princeton ', 'NJ')
2012-08-01 12:01:13,612 [DEBUG] django.db.backends: (0.094) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:01:13,663 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:01:13,710 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:01:13.664607+00:00', 'The Bottom Line', '') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:01:13.664607+00:00', 'The Bottom Line', '')
2012-08-01 12:01:13,862 [DEBUG] django.db.backends: (0.097) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:01:13,911 [DEBUG] django.db.backends: (0.047) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:01:14,079 [DEBUG] django.db.backends: (0.099) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:01:14,128 [DEBUG] django.db.backends: (0.048) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" LIMIT 21; args=()
2012-08-01 12:01:32,652 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:02:21,250 [DEBUG] django.db.backends: (0.097) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:02:21,302 [DEBUG] django.db.backends: (0.048) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:02:21.251931+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:02:21.251931+00:00')
2012-08-01 12:02:21,354 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:02:21,404 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:02:21,405 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:02:21,628 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:02:21,675 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:02:21,732 [DEBUG] django.db.backends: (0.056) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:02:21,779 [DEBUG] django.db.backends: (0.046) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:02:21,829 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:02:21,878 [DEBUG] django.db.backends: (0.047) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:02:21,925 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (1, 1) RETURNING "api_businesscategory"."id"; args=(1, 1)
2012-08-01 12:02:22,083 [DEBUG] django.db.backends: (0.104) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:02:22,328 [DEBUG] django.db.backends: (0.096) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:02:22,375 [DEBUG] django.db.backends: (0.046) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:02:22,423 [DEBUG] django.db.backends: (0.047) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:02:22,470 [DEBUG] django.db.backends: (0.047) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:02:22,520 [DEBUG] django.db.backends: (0.048) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:03:57,184 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:03:58,502 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:03:58,549 [DEBUG] django.db.backends: (0.044) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:03:58.503699+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:03:58.503699+00:00')
2012-08-01 12:03:58,595 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:03:58,647 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:03:58,647 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:03:58,850 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:03:58,893 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:00,210 [DEBUG] django.db.backends: (1.315) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:00,261 [DEBUG] django.db.backends: (0.049) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:04:00,312 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:04:00,370 [DEBUG] django.db.backends: (0.057) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:04:00,447 [DEBUG] django.db.backends: (0.076) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:04:00,611 [DEBUG] django.db.backends: (0.089) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:00,657 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:04:00,716 [DEBUG] django.db.backends: (0.058) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:04:00,770 [DEBUG] django.db.backends: (0.053) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:04:00,843 [DEBUG] django.db.backends: (0.071) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:04:24,231 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:04:29,993 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:04:30,044 [DEBUG] django.db.backends: (0.048) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:04:29.994081+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:04:29.994081+00:00')
2012-08-01 12:04:30,091 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 12:04:30,136 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:04:30,136 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:04:30,325 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:30,368 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:30,421 [DEBUG] django.db.backends: (0.052) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:30,467 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:04:30,516 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:04:30,614 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:04:30,659 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:04:30,815 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:04:30,862 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:04:30,905 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:04:30,968 [DEBUG] django.db.backends: (0.062) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:04:31,012 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1  LIMIT 21; args=(1,)
2012-08-01 12:05:56,490 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:05:56,987 [DEBUG] django.db.backends: (0.103) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2012-08-01 12:05:57,059 [DEBUG] django.db.backends: (0.069) CREATE TABLE "auth_permission" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
2012-08-01 12:05:57,135 [DEBUG] django.db.backends: (0.075) CREATE TABLE "auth_group_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("group_id", "permission_id")
)
;; args=()
2012-08-01 12:05:57,211 [DEBUG] django.db.backends: (0.076) CREATE TABLE "auth_group" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
2012-08-01 12:05:57,259 [DEBUG] django.db.backends: (0.047) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "group_id_refs_id_3cea63fe" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:05:57,330 [DEBUG] django.db.backends: (0.071) CREATE TABLE "auth_user_user_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "permission_id")
)
;; args=()
2012-08-01 12:05:57,417 [DEBUG] django.db.backends: (0.087) CREATE TABLE "auth_user_groups" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "group_id")
)
;; args=()
2012-08-01 12:05:57,500 [DEBUG] django.db.backends: (0.082) CREATE TABLE "auth_user" (
    "id" serial NOT NULL PRIMARY KEY,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "password" varchar(128) NOT NULL,
    "is_staff" boolean NOT NULL,
    "is_active" boolean NOT NULL,
    "is_superuser" boolean NOT NULL,
    "last_login" timestamp with time zone NOT NULL,
    "date_joined" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:05:57,550 [DEBUG] django.db.backends: (0.049) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "user_id_refs_id_f2045483" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:05:57,597 [DEBUG] django.db.backends: (0.047) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "user_id_refs_id_831107f1" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:05:57,670 [DEBUG] django.db.backends: (0.072) CREATE TABLE "django_content_type" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
2012-08-01 12:05:57,717 [DEBUG] django.db.backends: (0.047) ALTER TABLE "auth_permission" ADD CONSTRAINT "content_type_id_refs_id_728de91f" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:05:57,786 [DEBUG] django.db.backends: (0.068) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:05:57,846 [DEBUG] django.db.backends: (0.059) CREATE TABLE "django_site" (
    "id" serial NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
2012-08-01 12:05:57,914 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_business" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "lat" double precision NOT NULL,
    "lon" double precision NOT NULL,
    "address" varchar(250) NOT NULL,
    "city" varchar(100) NOT NULL,
    "state" varchar(2) NOT NULL
)
;; args=()
2012-08-01 12:05:57,995 [DEBUG] django.db.backends: (0.080) CREATE TABLE "api_photo" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "image" varchar(100) NOT NULL,
    "image_medium" varchar(100) NOT NULL,
    "image_thumb" varchar(100) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "title" varchar(300) NOT NULL,
    "caption" text NOT NULL
)
;; args=()
2012-08-01 12:05:58,070 [DEBUG] django.db.backends: (0.075) CREATE TABLE "api_tag" (
    "id" serial NOT NULL PRIMARY KEY,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "descr" text NOT NULL,
    "icon" text NOT NULL
)
;; args=()
2012-08-01 12:05:58,130 [DEBUG] django.db.backends: (0.059) CREATE TABLE "api_businesscategory" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:58,191 [DEBUG] django.db.backends: (0.060) CREATE TABLE "api_usersubscription" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:58,253 [DEBUG] django.db.backends: (0.062) CREATE TABLE "api_device" (
    "id" serial NOT NULL PRIMARY KEY,
    "os" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    "manufacturer" varchar(100) NOT NULL,
    "deviceID" integer NOT NULL
)
;; args=()
2012-08-01 12:05:58,327 [DEBUG] django.db.backends: (0.073) CREATE TABLE "api_allsortzuser" (
    "id" serial NOT NULL PRIMARY KEY,
    "distance_threshold" integer NOT NULL,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "metric" boolean NOT NULL,
    "device_id" integer NOT NULL REFERENCES "api_device" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:58,402 [DEBUG] django.db.backends: (0.075) CREATE TABLE "api_offer" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "restricitons" varchar(1000) NOT NULL,
    "created_on" timestamp with time zone NOT NULL,
    "valid_from" timestamp with time zone NOT NULL,
    "valid_until" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:05:58,463 [DEBUG] django.db.backends: (0.060) CREATE TABLE "api_businessdeal" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "cost" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 12:05:58,801 [DEBUG] django.db.backends: (0.337) CREATE TABLE "api_businessaction" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "reward_deal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "reward_value" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 12:05:58,904 [DEBUG] django.db.backends: (0.103) CREATE TABLE "api_asuserdeal" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businessdeal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "received_on" timestamp with time zone NOT NULL,
    "used_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:05:58,983 [DEBUG] django.db.backends: (0.078) CREATE TABLE "api_asuseraction" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "action_id" integer NOT NULL REFERENCES "api_businessaction" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "completed_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:05:59,055 [DEBUG] django.db.backends: (0.071) CREATE TABLE "api_discussion" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "reply_to_id" integer,
    "content" text NOT NULL
)
;; args=()
2012-08-01 12:05:59,118 [DEBUG] django.db.backends: (0.063) ALTER TABLE "api_discussion" ADD CONSTRAINT "reply_to_id_refs_id_7f5f35a5" FOREIGN KEY ("reply_to_id") REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:05:59,179 [DEBUG] django.db.backends: (0.061) CREATE TABLE "api_categorydiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businesstag_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:59,245 [DEBUG] django.db.backends: (0.065) CREATE TABLE "api_businessdiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:59,434 [DEBUG] django.db.backends: (0.189) CREATE TABLE "api_photodiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:59,535 [DEBUG] django.db.backends: (0.100) CREATE TABLE "api_rating" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "rating" integer NOT NULL
)
;; args=()
2012-08-01 12:05:59,674 [DEBUG] django.db.backends: (0.139) CREATE TABLE "api_discussionrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "discussion_id" integer NOT NULL REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:59,734 [DEBUG] django.db.backends: (0.060) CREATE TABLE "api_photorating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:59,852 [DEBUG] django.db.backends: (0.117) CREATE TABLE "api_categoryrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:05:59,972 [DEBUG] django.db.backends: (0.120) CREATE TABLE "api_businessrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:06:00,048 [DEBUG] django.db.backends: (0.075) CREATE TABLE "recommendation_recommendation" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "username_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "recommendation" integer NOT NULL
)
;; args=()
2012-08-01 12:06:00,113 [DEBUG] django.db.backends: (0.065) CREATE TABLE "recommendation_businessfactor" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "latentFactor" integer NOT NULL,
    "relation" double precision NOT NULL
)
;; args=()
2012-08-01 12:06:00,174 [DEBUG] django.db.backends: (0.061) CREATE TABLE "recommendation_userfactor" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "latentFactor" integer NOT NULL,
    "relation" double precision NOT NULL
)
;; args=()
2012-08-01 12:06:00,379 [DEBUG] django.db.backends: (0.204) CREATE TABLE "registration_registrationprofile" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "activation_key" varchar(40) NOT NULL
)
;; args=()
2012-08-01 12:06:00,459 [DEBUG] django.db.backends: (0.080) CREATE TABLE "queries_query" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "proximity" integer NOT NULL,
    "score" integer NOT NULL,
    "price" integer NOT NULL,
    "value" integer NOT NULL,
    "networked" boolean NOT NULL,
    "deal" boolean NOT NULL,
    "visited" boolean NOT NULL,
    "unvisited" boolean NOT NULL,
    "text" varchar(250) NOT NULL
)
;; args=()
2012-08-01 12:06:00,540 [DEBUG] django.db.backends: (0.080) CREATE TABLE "queries_querytag" (
    "id" serial NOT NULL PRIMARY KEY,
    "query_id" integer NOT NULL REFERENCES "queries_query" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:06:00,659 [DEBUG] django.db.backends: (0.119) CREATE TABLE "queries_userqueryrelation" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "query_id" integer NOT NULL REFERENCES "queries_query" ("id") DEFERRABLE INITIALLY DEFERRED,
    "favorite" boolean NOT NULL
)
;; args=()
2012-08-01 12:06:00,830 [DEBUG] django.db.backends: (0.170) CREATE TABLE "wiki_page" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "content" text NOT NULL,
    "rendered" text NOT NULL,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:06:00,907 [DEBUG] django.db.backends: (0.077) CREATE TABLE "django_admin_log" (
    "id" serial NOT NULL PRIMARY KEY,
    "action_time" timestamp with time zone NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "content_type_id" integer REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED,
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint CHECK ("action_flag" >= 0) NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
2012-08-01 12:06:01,049 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', 'auth')
2012-08-01 12:06:01,095 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:01,150 [DEBUG] django.db.backends: (0.055) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('permission', 'auth', 'permission') RETURNING "django_content_type"."id"; args=(u'permission', 'auth', 'permission')
2012-08-01 12:06:01,316 [DEBUG] django.db.backends: (0.118) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', 'auth')
2012-08-01 12:06:01,377 [DEBUG] django.db.backends: (0.060) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:01,423 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('group', 'auth', 'group') RETURNING "django_content_type"."id"; args=(u'group', 'auth', 'group')
2012-08-01 12:06:01,630 [DEBUG] django.db.backends: (0.103) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', 'auth')
2012-08-01 12:06:01,676 [DEBUG] django.db.backends: (0.046) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:01,725 [DEBUG] django.db.backends: (0.049) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user', 'auth', 'user') RETURNING "django_content_type"."id"; args=(u'user', 'auth', 'user')
2012-08-01 12:06:01,870 [DEBUG] django.db.backends: (0.095) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2012-08-01 12:06:01,921 [DEBUG] django.db.backends: (0.050) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 1, 'add_permission'), ('Can change permission', 1, 'change_permission'), ('Can delete permission', 1, 'delete_permission'), ('Can add group', 2, 'add_group'), ('Can change group', 2, 'change_group'), ('Can delete group', 2, 'delete_group'), ('Can add user', 3, 'add_user'), ('Can change user', 3, 'change_user'), ('Can delete user', 3, 'delete_user'); args=(u'Can add permission', 1, u'add_permission', u'Can change permission', 1, u'change_permission', u'Can delete permission', 1, u'delete_permission', u'Can add group', 2, u'add_group', u'Can change group', 2, u'change_group', u'Can delete group', 2, u'delete_group', u'Can add user', 3, u'add_user', u'Can change user', 3, u'change_user', u'Can delete user', 3, u'delete_user')
2012-08-01 12:06:07,012 [DEBUG] django.db.backends: (0.097) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:06:07,658 [DEBUG] django.db.backends: (0.053) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:06:11,987 [DEBUG] django.db.backends: (0.052) INSERT INTO "auth_user" ("username", "first_name", "last_name", "email", "password", "is_staff", "is_active", "is_superuser", "last_login", "date_joined") VALUES ('matt', '', '', 'matt@test.com', 'pbkdf2_sha256$10000$7yzTs17F852G$8vRQfKsTE+ylK/ankY86TdekDd/2wLm1x/75mUS1N9A=', false, true, false, '2012-08-01 16:06:11.804757+00:00', '2012-08-01 16:06:11.804757+00:00') RETURNING "auth_user"."id"; args=('matt', '', '', 'matt@test.com', 'pbkdf2_sha256$10000$7yzTs17F852G$8vRQfKsTE+ylK/ankY86TdekDd/2wLm1x/75mUS1N9A=', False, True, False, u'2012-08-01 16:06:11.804757+00:00', u'2012-08-01 16:06:11.804757+00:00')
2012-08-01 12:06:12,126 [DEBUG] django.db.backends: (0.090) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
2012-08-01 12:06:12,176 [DEBUG] django.db.backends: (0.048) UPDATE "auth_user" SET "username" = 'matt', "first_name" = '', "last_name" = '', "email" = 'matt@test.com', "password" = 'pbkdf2_sha256$10000$7yzTs17F852G$8vRQfKsTE+ylK/ankY86TdekDd/2wLm1x/75mUS1N9A=', "is_staff" = true, "is_active" = true, "is_superuser" = true, "last_login" = '2012-08-01 16:06:11.804757+00:00', "date_joined" = '2012-08-01 16:06:11.804757+00:00' WHERE "auth_user"."id" = 1 ; args=('matt', '', '', 'matt@test.com', 'pbkdf2_sha256$10000$7yzTs17F852G$8vRQfKsTE+ylK/ankY86TdekDd/2wLm1x/75mUS1N9A=', True, True, True, u'2012-08-01 16:06:11.804757+00:00', u'2012-08-01 16:06:11.804757+00:00', 1)
2012-08-01 12:06:12,327 [DEBUG] django.db.backends: (0.096) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=('auth',)
2012-08-01 12:06:12,377 [DEBUG] django.db.backends: (0.048) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', 'contenttypes')
2012-08-01 12:06:12,422 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:12,471 [DEBUG] django.db.backends: (0.048) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('content type', 'contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=(u'content type', 'contenttypes', 'contenttype')
2012-08-01 12:06:12,618 [DEBUG] django.db.backends: (0.093) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2012-08-01 12:06:12,666 [DEBUG] django.db.backends: (0.047) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'); args=(u'Can add content type', 4, u'add_contenttype', u'Can change content type', 4, u'change_contenttype', u'Can delete content type', 4, u'delete_contenttype')
2012-08-01 12:06:12,810 [DEBUG] django.db.backends: (0.095) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=('contenttypes',)
2012-08-01 12:06:12,861 [DEBUG] django.db.backends: (0.048) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', 'sessions')
2012-08-01 12:06:12,909 [DEBUG] django.db.backends: (0.048) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:12,956 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('session', 'sessions', 'session') RETURNING "django_content_type"."id"; args=(u'session', 'sessions', 'session')
2012-08-01 12:06:13,113 [DEBUG] django.db.backends: (0.094) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2012-08-01 12:06:13,171 [DEBUG] django.db.backends: (0.057) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'); args=(u'Can add session', 5, u'add_session', u'Can change session', 5, u'change_session', u'Can delete session', 5, u'delete_session')
2012-08-01 12:06:13,316 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=('sessions',)
2012-08-01 12:06:13,365 [DEBUG] django.db.backends: (0.047) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', 'sites')
2012-08-01 12:06:13,410 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:13,456 [DEBUG] django.db.backends: (0.045) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('site', 'sites', 'site') RETURNING "django_content_type"."id"; args=(u'site', 'sites', 'site')
2012-08-01 12:06:13,601 [DEBUG] django.db.backends: (0.097) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2012-08-01 12:06:13,650 [DEBUG] django.db.backends: (0.048) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add site', 6, 'add_site'), ('Can change site', 6, 'change_site'), ('Can delete site', 6, 'delete_site'); args=(u'Can add site', 6, u'add_site', u'Can change site', 6, u'change_site', u'Can delete site', 6, u'delete_site')
2012-08-01 12:06:13,797 [DEBUG] django.db.backends: (0.094) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=('sites',)
2012-08-01 12:06:13,845 [DEBUG] django.db.backends: (0.045) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
2012-08-01 12:06:13,896 [DEBUG] django.db.backends: (0.050) INSERT INTO "django_site" ("id", "domain", "name") VALUES (1, 'example.com', 'example.com'); args=(1, 'example.com', 'example.com')
2012-08-01 12:06:14,039 [DEBUG] django.db.backends: (0.093) SELECT setval(pg_get_serial_sequence('"django_site"','id'), coalesce(max("id"), 1), max("id") IS NOT null) FROM "django_site";; args=()
2012-08-01 12:06:14,091 [DEBUG] django.db.backends: (0.046) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'business'  AND "django_content_type"."app_label" = 'api' ); args=('business', 'api')
2012-08-01 12:06:14,141 [DEBUG] django.db.backends: (0.049) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:14,188 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business', 'api', 'business') RETURNING "django_content_type"."id"; args=(u'business', 'api', 'business')
2012-08-01 12:06:14,336 [DEBUG] django.db.backends: (0.096) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photo'  AND "django_content_type"."app_label" = 'api' ); args=('photo', 'api')
2012-08-01 12:06:14,383 [DEBUG] django.db.backends: (0.046) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:14,432 [DEBUG] django.db.backends: (0.048) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo', 'api', 'photo') RETURNING "django_content_type"."id"; args=(u'photo', 'api', 'photo')
2012-08-01 12:06:14,590 [DEBUG] django.db.backends: (0.095) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tag'  AND "django_content_type"."app_label" = 'api' ); args=('tag', 'api')
2012-08-01 12:06:14,636 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:14,683 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tag', 'api', 'tag') RETURNING "django_content_type"."id"; args=(u'tag', 'api', 'tag')
2012-08-01 12:06:14,831 [DEBUG] django.db.backends: (0.095) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businesscategory'  AND "django_content_type"."app_label" = 'api' ); args=('businesscategory', 'api')
2012-08-01 12:06:14,876 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:14,922 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business category', 'api', 'businesscategory') RETURNING "django_content_type"."id"; args=(u'business category', 'api', 'businesscategory')
2012-08-01 12:06:15,068 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'usersubscription'  AND "django_content_type"."app_label" = 'api' ); args=('usersubscription', 'api')
2012-08-01 12:06:15,114 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:15,161 [DEBUG] django.db.backends: (0.047) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user subscription', 'api', 'usersubscription') RETURNING "django_content_type"."id"; args=(u'user subscription', 'api', 'usersubscription')
2012-08-01 12:06:15,309 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'device'  AND "django_content_type"."app_label" = 'api' ); args=('device', 'api')
2012-08-01 12:06:15,355 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:15,401 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('device', 'api', 'device') RETURNING "django_content_type"."id"; args=(u'device', 'api', 'device')
2012-08-01 12:06:15,569 [DEBUG] django.db.backends: (0.112) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'allsortzuser'  AND "django_content_type"."app_label" = 'api' ); args=('allsortzuser', 'api')
2012-08-01 12:06:15,637 [DEBUG] django.db.backends: (0.067) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:15,683 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('allsortz user', 'api', 'allsortzuser') RETURNING "django_content_type"."id"; args=(u'allsortz user', 'api', 'allsortzuser')
2012-08-01 12:06:15,830 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'offer'  AND "django_content_type"."app_label" = 'api' ); args=('offer', 'api')
2012-08-01 12:06:15,875 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:15,921 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('offer', 'api', 'offer') RETURNING "django_content_type"."id"; args=(u'offer', 'api', 'offer')
2012-08-01 12:06:16,068 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdeal'  AND "django_content_type"."app_label" = 'api' ); args=('businessdeal', 'api')
2012-08-01 12:06:16,113 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:16,161 [DEBUG] django.db.backends: (0.047) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business deal', 'api', 'businessdeal') RETURNING "django_content_type"."id"; args=(u'business deal', 'api', 'businessdeal')
2012-08-01 12:06:16,321 [DEBUG] django.db.backends: (0.095) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessaction'  AND "django_content_type"."app_label" = 'api' ); args=('businessaction', 'api')
2012-08-01 12:06:16,366 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:16,413 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business action', 'api', 'businessaction') RETURNING "django_content_type"."id"; args=(u'business action', 'api', 'businessaction')
2012-08-01 12:06:16,566 [DEBUG] django.db.backends: (0.099) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuserdeal'  AND "django_content_type"."app_label" = 'api' ); args=('asuserdeal', 'api')
2012-08-01 12:06:16,629 [DEBUG] django.db.backends: (0.062) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:16,739 [DEBUG] django.db.backends: (0.110) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user deal', 'api', 'asuserdeal') RETURNING "django_content_type"."id"; args=(u'as user deal', 'api', 'asuserdeal')
2012-08-01 12:06:16,942 [DEBUG] django.db.backends: (0.094) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuseraction'  AND "django_content_type"."app_label" = 'api' ); args=('asuseraction', 'api')
2012-08-01 12:06:17,022 [DEBUG] django.db.backends: (0.080) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:17,081 [DEBUG] django.db.backends: (0.058) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user action', 'api', 'asuseraction') RETURNING "django_content_type"."id"; args=(u'as user action', 'api', 'asuseraction')
2012-08-01 12:06:17,253 [DEBUG] django.db.backends: (0.116) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussion'  AND "django_content_type"."app_label" = 'api' ); args=('discussion', 'api')
2012-08-01 12:06:17,364 [DEBUG] django.db.backends: (0.110) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:17,411 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion', 'api', 'discussion') RETURNING "django_content_type"."id"; args=(u'discussion', 'api', 'discussion')
2012-08-01 12:06:17,550 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categorydiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('categorydiscussion', 'api')
2012-08-01 12:06:17,595 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:17,642 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category discussion', 'api', 'categorydiscussion') RETURNING "django_content_type"."id"; args=(u'category discussion', 'api', 'categorydiscussion')
2012-08-01 12:06:17,789 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('businessdiscussion', 'api')
2012-08-01 12:06:17,835 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:17,881 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business discussion', 'api', 'businessdiscussion') RETURNING "django_content_type"."id"; args=(u'business discussion', 'api', 'businessdiscussion')
2012-08-01 12:06:18,036 [DEBUG] django.db.backends: (0.091) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photodiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('photodiscussion', 'api')
2012-08-01 12:06:18,084 [DEBUG] django.db.backends: (0.047) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:18,134 [DEBUG] django.db.backends: (0.049) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo discussion', 'api', 'photodiscussion') RETURNING "django_content_type"."id"; args=(u'photo discussion', 'api', 'photodiscussion')
2012-08-01 12:06:18,281 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'rating'  AND "django_content_type"."app_label" = 'api' ); args=('rating', 'api')
2012-08-01 12:06:18,329 [DEBUG] django.db.backends: (0.047) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:18,376 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('rating', 'api', 'rating') RETURNING "django_content_type"."id"; args=(u'rating', 'api', 'rating')
2012-08-01 12:06:18,519 [DEBUG] django.db.backends: (0.091) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussionrating'  AND "django_content_type"."app_label" = 'api' ); args=('discussionrating', 'api')
2012-08-01 12:06:18,564 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:18,611 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion rating', 'api', 'discussionrating') RETURNING "django_content_type"."id"; args=(u'discussion rating', 'api', 'discussionrating')
2012-08-01 12:06:18,758 [DEBUG] django.db.backends: (0.094) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photorating'  AND "django_content_type"."app_label" = 'api' ); args=('photorating', 'api')
2012-08-01 12:06:18,803 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:18,850 [DEBUG] django.db.backends: (0.047) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo rating', 'api', 'photorating') RETURNING "django_content_type"."id"; args=(u'photo rating', 'api', 'photorating')
2012-08-01 12:06:18,999 [DEBUG] django.db.backends: (0.096) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categoryrating'  AND "django_content_type"."app_label" = 'api' ); args=('categoryrating', 'api')
2012-08-01 12:06:19,045 [DEBUG] django.db.backends: (0.046) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:19,097 [DEBUG] django.db.backends: (0.050) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category rating', 'api', 'categoryrating') RETURNING "django_content_type"."id"; args=(u'category rating', 'api', 'categoryrating')
2012-08-01 12:06:19,244 [DEBUG] django.db.backends: (0.091) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessrating'  AND "django_content_type"."app_label" = 'api' ); args=('businessrating', 'api')
2012-08-01 12:06:19,289 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:19,336 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business rating', 'api', 'businessrating') RETURNING "django_content_type"."id"; args=(u'business rating', 'api', 'businessrating')
2012-08-01 12:06:19,483 [DEBUG] django.db.backends: (0.094) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27)
2012-08-01 12:06:19,579 [DEBUG] django.db.backends: (0.092) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add business', 7, 'add_business'), ('Can change business', 7, 'change_business'), ('Can delete business', 7, 'delete_business'), ('Can add photo', 8, 'add_photo'), ('Can change photo', 8, 'change_photo'), ('Can delete photo', 8, 'delete_photo'), ('Can add tag', 9, 'add_tag'), ('Can change tag', 9, 'change_tag'), ('Can delete tag', 9, 'delete_tag'), ('Can add business category', 10, 'add_businesscategory'), ('Can change business category', 10, 'change_businesscategory'), ('Can delete business category', 10, 'delete_businesscategory'), ('Can add user subscription', 11, 'add_usersubscription'), ('Can change user subscription', 11, 'change_usersubscription'), ('Can delete user subscription', 11, 'delete_usersubscription'), ('Can add device', 12, 'add_device'), ('Can change device', 12, 'change_device'), ('Can delete device', 12, 'delete_device'), ('Can add allsortz user', 13, 'add_allsortzuser'), ('Can change allsortz user', 13, 'change_allsortzuser'), ('Can delete allsortz user', 13, 'delete_allsortzuser'), ('Can add offer', 14, 'add_offer'), ('Can change offer', 14, 'change_offer'), ('Can delete offer', 14, 'delete_offer'), ('Can add business deal', 15, 'add_businessdeal'), ('Can change business deal', 15, 'change_businessdeal'), ('Can delete business deal', 15, 'delete_businessdeal'), ('Can add business action', 16, 'add_businessaction'), ('Can change business action', 16, 'change_businessaction'), ('Can delete business action', 16, 'delete_businessaction'), ('Can add as user deal', 17, 'add_asuserdeal'), ('Can change as user deal', 17, 'change_asuserdeal'), ('Can delete as user deal', 17, 'delete_asuserdeal'), ('Can add as user action', 18, 'add_asuseraction'), ('Can change as user action', 18, 'change_asuseraction'), ('Can delete as user action', 18, 'delete_asuseraction'), ('Can add discussion', 19, 'add_discussion'), ('Can change discussion', 19, 'change_discussion'), ('Can delete discussion', 19, 'delete_discussion'), ('Can add category discussion', 20, 'add_categorydiscussion'), ('Can change category discussion', 20, 'change_categorydiscussion'), ('Can delete category discussion', 20, 'delete_categorydiscussion'), ('Can add business discussion', 21, 'add_businessdiscussion'), ('Can change business discussion', 21, 'change_businessdiscussion'), ('Can delete business discussion', 21, 'delete_businessdiscussion'), ('Can add photo discussion', 22, 'add_photodiscussion'), ('Can change photo discussion', 22, 'change_photodiscussion'), ('Can delete photo discussion', 22, 'delete_photodiscussion'), ('Can add rating', 23, 'add_rating'), ('Can change rating', 23, 'change_rating'), ('Can delete rating', 23, 'delete_rating'), ('Can add discussion rating', 24, 'add_discussionrating'), ('Can change discussion rating', 24, 'change_discussionrating'), ('Can delete discussion rating', 24, 'delete_discussionrating'), ('Can add photo rating', 25, 'add_photorating'), ('Can change photo rating', 25, 'change_photorating'), ('Can delete photo rating', 25, 'delete_photorating'), ('Can add category rating', 26, 'add_categoryrating'), ('Can change category rating', 26, 'change_categoryrating'), ('Can delete category rating', 26, 'delete_categoryrating'), ('Can add business rating', 27, 'add_businessrating'), ('Can change business rating', 27, 'change_businessrating'), ('Can delete business rating', 27, 'delete_businessrating'); args=(u'Can add business', 7, u'add_business', u'Can change business', 7, u'change_business', u'Can delete business', 7, u'delete_business', u'Can add photo', 8, u'add_photo', u'Can change photo', 8, u'change_photo', u'Can delete photo', 8, u'delete_photo', u'Can add tag', 9, u'add_tag', u'Can change tag', 9, u'change_tag', u'Can delete tag', 9, u'delete_tag', u'Can add business category', 10, u'add_businesscategory', u'Can change business category', 10, u'change_businesscategory', u'Can delete business category', 10, u'delete_businesscategory', u'Can add user subscription', 11, u'add_usersubscription', u'Can change user subscription', 11, u'change_usersubscription', u'Can delete user subscription', 11, u'delete_usersubscription', u'Can add device', 12, u'add_device', u'Can change device', 12, u'change_device', u'Can delete device', 12, u'delete_device', u'Can add allsortz user', 13, u'add_allsortzuser', u'Can change allsortz user', 13, u'change_allsortzuser', u'Can delete allsortz user', 13, u'delete_allsortzuser', u'Can add offer', 14, u'add_offer', u'Can change offer', 14, u'change_offer', u'Can delete offer', 14, u'delete_offer', u'Can add business deal', 15, u'add_businessdeal', u'Can change business deal', 15, u'change_businessdeal', u'Can delete business deal', 15, u'delete_businessdeal', u'Can add business action', 16, u'add_businessaction', u'Can change business action', 16, u'change_businessaction', u'Can delete business action', 16, u'delete_businessaction', u'Can add as user deal', 17, u'add_asuserdeal', u'Can change as user deal', 17, u'change_asuserdeal', u'Can delete as user deal', 17, u'delete_asuserdeal', u'Can add as user action', 18, u'add_asuseraction', u'Can change as user action', 18, u'change_asuseraction', u'Can delete as user action', 18, u'delete_asuseraction', u'Can add discussion', 19, u'add_discussion', u'Can change discussion', 19, u'change_discussion', u'Can delete discussion', 19, u'delete_discussion', u'Can add category discussion', 20, u'add_categorydiscussion', u'Can change category discussion', 20, u'change_categorydiscussion', u'Can delete category discussion', 20, u'delete_categorydiscussion', u'Can add business discussion', 21, u'add_businessdiscussion', u'Can change business discussion', 21, u'change_businessdiscussion', u'Can delete business discussion', 21, u'delete_businessdiscussion', u'Can add photo discussion', 22, u'add_photodiscussion', u'Can change photo discussion', 22, u'change_photodiscussion', u'Can delete photo discussion', 22, u'delete_photodiscussion', u'Can add rating', 23, u'add_rating', u'Can change rating', 23, u'change_rating', u'Can delete rating', 23, u'delete_rating', u'Can add discussion rating', 24, u'add_discussionrating', u'Can change discussion rating', 24, u'change_discussionrating', u'Can delete discussion rating', 24, u'delete_discussionrating', u'Can add photo rating', 25, u'add_photorating', u'Can change photo rating', 25, u'change_photorating', u'Can delete photo rating', 25, u'delete_photorating', u'Can add category rating', 26, u'add_categoryrating', u'Can change category rating', 26, u'change_categoryrating', u'Can delete category rating', 26, u'delete_categoryrating', u'Can add business rating', 27, u'add_businessrating', u'Can change business rating', 27, u'change_businessrating', u'Can delete business rating', 27, u'delete_businessrating')
2012-08-01 12:06:19,738 [DEBUG] django.db.backends: (0.107) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'api'  ORDER BY "django_content_type"."name" ASC; args=('api',)
2012-08-01 12:06:19,787 [DEBUG] django.db.backends: (0.047) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'recommendation'  AND "django_content_type"."app_label" = 'recommendation' ); args=('recommendation', 'recommendation')
2012-08-01 12:06:19,835 [DEBUG] django.db.backends: (0.048) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:19,882 [DEBUG] django.db.backends: (0.047) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('recommendation', 'recommendation', 'recommendation') RETURNING "django_content_type"."id"; args=(u'recommendation', 'recommendation', 'recommendation')
2012-08-01 12:06:20,028 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('businessfactor', 'recommendation')
2012-08-01 12:06:20,073 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:20,119 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business factor', 'recommendation', 'businessfactor') RETURNING "django_content_type"."id"; args=(u'business factor', 'recommendation', 'businessfactor')
2012-08-01 12:06:20,269 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('userfactor', 'recommendation')
2012-08-01 12:06:20,315 [DEBUG] django.db.backends: (0.046) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:20,361 [DEBUG] django.db.backends: (0.045) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user factor', 'recommendation', 'userfactor') RETURNING "django_content_type"."id"; args=(u'user factor', 'recommendation', 'userfactor')
2012-08-01 12:06:20,510 [DEBUG] django.db.backends: (0.093) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (28, 29, 30) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(28, 29, 30)
2012-08-01 12:06:20,561 [DEBUG] django.db.backends: (0.050) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add recommendation', 28, 'add_recommendation'), ('Can change recommendation', 28, 'change_recommendation'), ('Can delete recommendation', 28, 'delete_recommendation'), ('Can add business factor', 29, 'add_businessfactor'), ('Can change business factor', 29, 'change_businessfactor'), ('Can delete business factor', 29, 'delete_businessfactor'), ('Can add user factor', 30, 'add_userfactor'), ('Can change user factor', 30, 'change_userfactor'), ('Can delete user factor', 30, 'delete_userfactor'); args=(u'Can add recommendation', 28, u'add_recommendation', u'Can change recommendation', 28, u'change_recommendation', u'Can delete recommendation', 28, u'delete_recommendation', u'Can add business factor', 29, u'add_businessfactor', u'Can change business factor', 29, u'change_businessfactor', u'Can delete business factor', 29, u'delete_businessfactor', u'Can add user factor', 30, u'add_userfactor', u'Can change user factor', 30, u'change_userfactor', u'Can delete user factor', 30, u'delete_userfactor')
2012-08-01 12:06:20,704 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'recommendation'  ORDER BY "django_content_type"."name" ASC; args=('recommendation',)
2012-08-01 12:06:20,753 [DEBUG] django.db.backends: (0.048) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'registrationprofile'  AND "django_content_type"."app_label" = 'registration' ); args=('registrationprofile', 'registration')
2012-08-01 12:06:20,798 [DEBUG] django.db.backends: (0.045) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:20,846 [DEBUG] django.db.backends: (0.047) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('registration profile', 'registration', 'registrationprofile') RETURNING "django_content_type"."id"; args=(u'registration profile', 'registration', 'registrationprofile')
2012-08-01 12:06:20,994 [DEBUG] django.db.backends: (0.094) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (31) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(31,)
2012-08-01 12:06:21,041 [DEBUG] django.db.backends: (0.047) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add registration profile', 31, 'add_registrationprofile'), ('Can change registration profile', 31, 'change_registrationprofile'), ('Can delete registration profile', 31, 'delete_registrationprofile'); args=(u'Can add registration profile', 31, u'add_registrationprofile', u'Can change registration profile', 31, u'change_registrationprofile', u'Can delete registration profile', 31, u'delete_registrationprofile')
2012-08-01 12:06:21,183 [DEBUG] django.db.backends: (0.092) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'registration'  ORDER BY "django_content_type"."name" ASC; args=('registration',)
2012-08-01 12:06:21,235 [DEBUG] django.db.backends: (0.048) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'query'  AND "django_content_type"."app_label" = 'queries' ); args=('query', 'queries')
2012-08-01 12:06:21,281 [DEBUG] django.db.backends: (0.046) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:21,330 [DEBUG] django.db.backends: (0.048) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('query', 'queries', 'query') RETURNING "django_content_type"."id"; args=(u'query', 'queries', 'query')
2012-08-01 12:06:21,481 [DEBUG] django.db.backends: (0.095) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'querytag'  AND "django_content_type"."app_label" = 'queries' ); args=('querytag', 'queries')
2012-08-01 12:06:21,526 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:21,576 [DEBUG] django.db.backends: (0.049) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('query tag', 'queries', 'querytag') RETURNING "django_content_type"."id"; args=(u'query tag', 'queries', 'querytag')
2012-08-01 12:06:21,725 [DEBUG] django.db.backends: (0.096) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userqueryrelation'  AND "django_content_type"."app_label" = 'queries' ); args=('userqueryrelation', 'queries')
2012-08-01 12:06:21,771 [DEBUG] django.db.backends: (0.046) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:21,818 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user query relation', 'queries', 'userqueryrelation') RETURNING "django_content_type"."id"; args=(u'user query relation', 'queries', 'userqueryrelation')
2012-08-01 12:06:22,278 [DEBUG] django.db.backends: (0.400) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (32, 33, 34) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(32, 33, 34)
2012-08-01 12:06:22,345 [DEBUG] django.db.backends: (0.065) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add query', 32, 'add_query'), ('Can change query', 32, 'change_query'), ('Can delete query', 32, 'delete_query'), ('Can add query tag', 33, 'add_querytag'), ('Can change query tag', 33, 'change_querytag'), ('Can delete query tag', 33, 'delete_querytag'), ('Can add user query relation', 34, 'add_userqueryrelation'), ('Can change user query relation', 34, 'change_userqueryrelation'), ('Can delete user query relation', 34, 'delete_userqueryrelation'); args=(u'Can add query', 32, u'add_query', u'Can change query', 32, u'change_query', u'Can delete query', 32, u'delete_query', u'Can add query tag', 33, u'add_querytag', u'Can change query tag', 33, u'change_querytag', u'Can delete query tag', 33, u'delete_querytag', u'Can add user query relation', 34, u'add_userqueryrelation', u'Can change user query relation', 34, u'change_userqueryrelation', u'Can delete user query relation', 34, u'delete_userqueryrelation')
2012-08-01 12:06:22,495 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'queries'  ORDER BY "django_content_type"."name" ASC; args=('queries',)
2012-08-01 12:06:22,547 [DEBUG] django.db.backends: (0.048) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'page'  AND "django_content_type"."app_label" = 'wiki' ); args=('page', 'wiki')
2012-08-01 12:06:22,594 [DEBUG] django.db.backends: (0.047) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:22,679 [DEBUG] django.db.backends: (0.085) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('page', 'wiki', 'page') RETURNING "django_content_type"."id"; args=(u'page', 'wiki', 'page')
2012-08-01 12:06:22,879 [DEBUG] django.db.backends: (0.141) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (35) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(35,)
2012-08-01 12:06:22,926 [DEBUG] django.db.backends: (0.047) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add page', 35, 'add_page'), ('Can change page', 35, 'change_page'), ('Can delete page', 35, 'delete_page'); args=(u'Can add page', 35, u'add_page', u'Can change page', 35, u'change_page', u'Can delete page', 35, u'delete_page')
2012-08-01 12:06:23,215 [DEBUG] django.db.backends: (0.149) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'wiki'  ORDER BY "django_content_type"."name" ASC; args=('wiki',)
2012-08-01 12:06:23,307 [DEBUG] django.db.backends: (0.091) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', 'admin')
2012-08-01 12:06:23,359 [DEBUG] django.db.backends: (0.051) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:06:23,405 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('log entry', 'admin', 'logentry') RETURNING "django_content_type"."id"; args=(u'log entry', 'admin', 'logentry')
2012-08-01 12:06:23,577 [DEBUG] django.db.backends: (0.118) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (36) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(36,)
2012-08-01 12:06:23,650 [DEBUG] django.db.backends: (0.072) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 36, 'add_logentry'), ('Can change log entry', 36, 'change_logentry'), ('Can delete log entry', 36, 'delete_logentry'); args=(u'Can add log entry', 36, u'add_logentry', u'Can change log entry', 36, u'change_logentry', u'Can delete log entry', 36, u'delete_logentry')
2012-08-01 12:06:23,807 [DEBUG] django.db.backends: (0.093) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=('admin',)
2012-08-01 12:06:23,870 [DEBUG] django.db.backends: (0.056) CREATE INDEX "auth_permission_content_type_id" ON "auth_permission" ("content_type_id");; args=()
2012-08-01 12:06:24,307 [DEBUG] django.db.backends: (0.373) CREATE INDEX "auth_group_permissions_group_id" ON "auth_group_permissions" ("group_id");; args=()
2012-08-01 12:06:24,362 [DEBUG] django.db.backends: (0.055) CREATE INDEX "auth_group_permissions_permission_id" ON "auth_group_permissions" ("permission_id");; args=()
2012-08-01 12:06:24,514 [DEBUG] django.db.backends: (0.103) CREATE INDEX "auth_user_user_permissions_user_id" ON "auth_user_user_permissions" ("user_id");; args=()
2012-08-01 12:06:24,570 [DEBUG] django.db.backends: (0.056) CREATE INDEX "auth_user_user_permissions_permission_id" ON "auth_user_user_permissions" ("permission_id");; args=()
2012-08-01 12:06:24,722 [DEBUG] django.db.backends: (0.104) CREATE INDEX "auth_user_groups_user_id" ON "auth_user_groups" ("user_id");; args=()
2012-08-01 12:06:24,778 [DEBUG] django.db.backends: (0.055) CREATE INDEX "auth_user_groups_group_id" ON "auth_user_groups" ("group_id");; args=()
2012-08-01 12:06:24,926 [DEBUG] django.db.backends: (0.100) CREATE INDEX "django_session_expire_date" ON "django_session" ("expire_date");; args=()
2012-08-01 12:06:25,083 [DEBUG] django.db.backends: (0.107) SELECT AddGeometryColumn('api_business', 'geom', 4326, 'POINT', 2);; args=()
2012-08-01 12:06:25,128 [DEBUG] django.db.backends: (0.045) ALTER TABLE "api_business" ALTER "geom" SET NOT NULL;; args=()
2012-08-01 12:06:25,180 [DEBUG] django.db.backends: (0.052) CREATE INDEX "api_business_geom_id" ON "api_business" USING GIST ( "geom" GIST_GEOMETRY_OPS );; args=()
2012-08-01 12:06:25,343 [DEBUG] django.db.backends: (0.102) CREATE INDEX "api_photo_user_id" ON "api_photo" ("user_id");; args=()
2012-08-01 12:06:25,398 [DEBUG] django.db.backends: (0.055) CREATE INDEX "api_photo_business_id" ON "api_photo" ("business_id");; args=()
2012-08-01 12:06:25,553 [DEBUG] django.db.backends: (0.104) CREATE INDEX "api_tag_creator_id" ON "api_tag" ("creator_id");; args=()
2012-08-01 12:06:25,704 [DEBUG] django.db.backends: (0.103) CREATE INDEX "api_businesscategory_business_id" ON "api_businesscategory" ("business_id");; args=()
2012-08-01 12:06:25,762 [DEBUG] django.db.backends: (0.058) CREATE INDEX "api_businesscategory_tag_id" ON "api_businesscategory" ("tag_id");; args=()
2012-08-01 12:06:25,910 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_usersubscription_user_id" ON "api_usersubscription" ("user_id");; args=()
2012-08-01 12:06:25,966 [DEBUG] django.db.backends: (0.055) CREATE INDEX "api_usersubscription_tag_id" ON "api_usersubscription" ("tag_id");; args=()
2012-08-01 12:06:26,114 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_allsortzuser_device_id" ON "api_allsortzuser" ("device_id");; args=()
2012-08-01 12:06:26,265 [DEBUG] django.db.backends: (0.102) CREATE INDEX "api_offer_business_id" ON "api_offer" ("business_id");; args=()
2012-08-01 12:06:26,414 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_businessaction_reward_deal_id" ON "api_businessaction" ("reward_deal_id");; args=()
2012-08-01 12:06:26,562 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_asuserdeal_ASuser_id" ON "api_asuserdeal" ("ASuser_id");; args=()
2012-08-01 12:06:26,619 [DEBUG] django.db.backends: (0.056) CREATE INDEX "api_asuserdeal_businessdeal_id" ON "api_asuserdeal" ("businessdeal_id");; args=()
2012-08-01 12:06:26,767 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_asuseraction_ASuser_id" ON "api_asuseraction" ("ASuser_id");; args=()
2012-08-01 12:06:26,826 [DEBUG] django.db.backends: (0.059) CREATE INDEX "api_asuseraction_action_id" ON "api_asuseraction" ("action_id");; args=()
2012-08-01 12:06:26,874 [DEBUG] django.db.backends: (0.048) SELECT AddGeometryColumn('api_asuseraction', 'location', 4326, 'POINT', 2);; args=()
2012-08-01 12:06:26,919 [DEBUG] django.db.backends: (0.045) ALTER TABLE "api_asuseraction" ALTER "location" SET NOT NULL;; args=()
2012-08-01 12:06:26,965 [DEBUG] django.db.backends: (0.046) CREATE INDEX "api_asuseraction_location_id" ON "api_asuseraction" USING GIST ( "location" GIST_GEOMETRY_OPS );; args=()
2012-08-01 12:06:27,122 [DEBUG] django.db.backends: (0.103) CREATE INDEX "api_discussion_user_id" ON "api_discussion" ("user_id");; args=()
2012-08-01 12:06:27,182 [DEBUG] django.db.backends: (0.060) CREATE INDEX "api_discussion_reply_to_id" ON "api_discussion" ("reply_to_id");; args=()
2012-08-01 12:06:27,338 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_categorydiscussion_businesstag_id" ON "api_categorydiscussion" ("businesstag_id");; args=()
2012-08-01 12:06:27,490 [DEBUG] django.db.backends: (0.104) CREATE INDEX "api_businessdiscussion_business_id" ON "api_businessdiscussion" ("business_id");; args=()
2012-08-01 12:06:27,646 [DEBUG] django.db.backends: (0.101) CREATE INDEX "api_photodiscussion_photo_id" ON "api_photodiscussion" ("photo_id");; args=()
2012-08-01 12:06:27,802 [DEBUG] django.db.backends: (0.104) CREATE INDEX "api_rating_user_id" ON "api_rating" ("user_id");; args=()
2012-08-01 12:06:27,950 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_discussionrating_discussion_id" ON "api_discussionrating" ("discussion_id");; args=()
2012-08-01 12:06:28,098 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_photorating_photo_id" ON "api_photorating" ("photo_id");; args=()
2012-08-01 12:06:28,250 [DEBUG] django.db.backends: (0.104) CREATE INDEX "api_categoryrating_category_id" ON "api_categoryrating" ("category_id");; args=()
2012-08-01 12:06:28,402 [DEBUG] django.db.backends: (0.103) CREATE INDEX "api_businessrating_business_id" ON "api_businessrating" ("business_id");; args=()
2012-08-01 12:06:28,550 [DEBUG] django.db.backends: (0.099) CREATE INDEX "recommendation_recommendation_business_id" ON "recommendation_recommendation" ("business_id");; args=()
2012-08-01 12:06:28,607 [DEBUG] django.db.backends: (0.057) CREATE INDEX "recommendation_recommendation_username_id" ON "recommendation_recommendation" ("username_id");; args=()
2012-08-01 12:06:28,757 [DEBUG] django.db.backends: (0.103) CREATE INDEX "recommendation_businessfactor_business_id" ON "recommendation_businessfactor" ("business_id");; args=()
2012-08-01 12:06:28,910 [DEBUG] django.db.backends: (0.103) CREATE INDEX "recommendation_userfactor_user_id" ON "recommendation_userfactor" ("user_id");; args=()
2012-08-01 12:06:29,062 [DEBUG] django.db.backends: (0.103) CREATE INDEX "queries_query_creator_id" ON "queries_query" ("creator_id");; args=()
2012-08-01 12:06:29,211 [DEBUG] django.db.backends: (0.101) CREATE INDEX "queries_querytag_query_id" ON "queries_querytag" ("query_id");; args=()
2012-08-01 12:06:29,270 [DEBUG] django.db.backends: (0.059) CREATE INDEX "queries_querytag_tag_id" ON "queries_querytag" ("tag_id");; args=()
2012-08-01 12:06:29,418 [DEBUG] django.db.backends: (0.101) CREATE INDEX "queries_userqueryrelation_user_id" ON "queries_userqueryrelation" ("user_id");; args=()
2012-08-01 12:06:29,474 [DEBUG] django.db.backends: (0.056) CREATE INDEX "queries_userqueryrelation_query_id" ON "queries_userqueryrelation" ("query_id");; args=()
2012-08-01 12:06:29,622 [DEBUG] django.db.backends: (0.100) CREATE INDEX "wiki_page_category_id" ON "wiki_page" ("category_id");; args=()
2012-08-01 12:06:29,778 [DEBUG] django.db.backends: (0.103) CREATE INDEX "django_admin_log_user_id" ON "django_admin_log" ("user_id");; args=()
2012-08-01 12:06:29,841 [DEBUG] django.db.backends: (0.062) CREATE INDEX "django_admin_log_content_type_id" ON "django_admin_log" ("content_type_id");; args=()
2012-08-01 12:06:30,099 [DEBUG] django.db.backends: (0.106) SET CONSTRAINTS ALL IMMEDIATE; args=()
2012-08-01 12:06:30,165 [DEBUG] django.db.backends: (0.065) SET CONSTRAINTS ALL DEFERRED; args=()
2012-08-01 12:06:38,240 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:06:41,401 [DEBUG] django.db.backends: (0.091) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:06:41,563 [DEBUG] django.db.backends: (0.045) INSERT INTO "auth_user" ("username", "first_name", "last_name", "email", "password", "is_staff", "is_active", "is_superuser", "last_login", "date_joined") VALUES ('zouf', 'Matt', '', 'matty@allsortz.com', 'pbkdf2_sha256$10000$YVpxLkzmLH0v$uwzpB/z9Y15kiDUzfGx0bLajdUssNcfSgQVFINX9WoQ=', false, true, false, '2012-08-01 16:06:41.401747+00:00', '2012-08-01 16:06:41.402266+00:00') RETURNING "auth_user"."id"; args=('zouf', 'Matt', '', 'matty@allsortz.com', 'pbkdf2_sha256$10000$YVpxLkzmLH0v$uwzpB/z9Y15kiDUzfGx0bLajdUssNcfSgQVFINX9WoQ=', False, True, False, u'2012-08-01 16:06:41.401747+00:00', u'2012-08-01 16:06:41.402266+00:00')
2012-08-01 12:06:41,701 [DEBUG] django.db.backends: (0.085) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '545204982488307c4ee3ef376372deb9'  AND "django_session"."expire_date" > '2012-08-01 16:06:41.613790+00:00' ); args=('545204982488307c4ee3ef376372deb9', u'2012-08-01 16:06:41.613790+00:00')
2012-08-01 12:06:41,744 [DEBUG] django.db.backends: (0.042) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  LIMIT 1; args=('397ac445e30499120895081a807d3a3a',)
2012-08-01 12:06:41,813 [DEBUG] django.db.backends: (0.041) SAVEPOINT s4384100352_x1; args=()
2012-08-01 12:06:41,868 [DEBUG] django.db.backends: (0.054) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES ('397ac445e30499120895081a807d3a3a', 'YjBkYjNjZGZmOTNkYzY0YjBhOTgxYmIwOGUzYTRlOTZiMWM0NWQ2NzqAAn1xAS4=
', '2012-08-15 16:06:41.772601+00:00'); args=('397ac445e30499120895081a807d3a3a', 'YjBkYjNjZGZmOTNkYzY0YjBhOTgxYmIwOGUzYTRlOTZiMWM0NWQ2NzqAAn1xAS4=\n', u'2012-08-15 16:06:41.772601+00:00')
2012-08-01 12:06:42,001 [DEBUG] django.db.backends: (0.087) SAVEPOINT s4384100352_x1; args=()
2012-08-01 12:06:42,045 [DEBUG] django.db.backends: (0.042) SELECT (1) AS "a" FROM "django_session" WHERE "django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  LIMIT 1; args=('397ac445e30499120895081a807d3a3a',)
2012-08-01 12:06:42,091 [DEBUG] django.db.backends: (0.043) UPDATE "django_session" SET "session_data" = 'YjBkYjNjZGZmOTNkYzY0YjBhOTgxYmIwOGUzYTRlOTZiMWM0NWQ2NzqAAn1xAS4=
', "expire_date" = '2012-08-15 16:06:41.914876+00:00' WHERE "django_session"."session_key" = '397ac445e30499120895081a807d3a3a' ; args=('YjBkYjNjZGZmOTNkYzY0YjBhOTgxYmIwOGUzYTRlOTZiMWM0NWQ2NzqAAn1xAS4=\n', u'2012-08-15 16:06:41.914876+00:00', '397ac445e30499120895081a807d3a3a')
2012-08-01 12:06:42,881 [DEBUG] django.db.backends: (0.096) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:06:42.503537+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:06:42.503537+00:00')
2012-08-01 12:06:54,645 [DEBUG] django.db.backends: (0.099) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:06:54.244418+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:06:54.244418+00:00')
2012-08-01 12:06:55,361 [DEBUG] django.db.backends: (0.086) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:06:55.008487+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:06:55.008487+00:00')
2012-08-01 12:07:22,679 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:07:27,447 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:07:27,499 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:07:27,500 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:07:52,663 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:08:13,228 [DEBUG] django.db.backends: (0.121) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:08:13,275 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:08:13,276 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:08:13,483 [DEBUG] django.db.backends: (0.061) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:08:13.421762+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:08:13.421762+00:00')
2012-08-01 12:08:13,531 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:08:13,837 [DEBUG] django.db.backends: (0.060) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Hoagie Haven', '2012-08-01 16:08:13.777284+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:08:13.777284+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x105c39610>, '242 Nassau St.', 'Princeton ', 'NJ')
2012-08-01 12:08:14,014 [DEBUG] django.db.backends: (0.123) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:08:14,084 [DEBUG] django.db.backends: (0.069) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:08:14,131 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:08:14.085422+00:00', 'The Bottom Line', '') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:08:14.085422+00:00', 'The Bottom Line', '')
2012-08-01 12:08:14,293 [DEBUG] django.db.backends: (0.114) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:08:14,338 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:08:14,380 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (1, 1) RETURNING "api_businesscategory"."id"; args=(1, 1)
2012-08-01 12:08:14,510 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:08:14,726 [DEBUG] django.db.backends: (0.102) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:11:16,043 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:11:19,630 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:11:19,677 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:11:19,677 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:11:20,226 [DEBUG] django.db.backends: (0.045) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:11:20.179717+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:11:20.179717+00:00')
2012-08-01 12:11:20,285 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:11:20,334 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:11:20,391 [DEBUG] django.db.backends: (0.056) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:11:20,435 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:11:20,480 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:11:20,525 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:11:20,569 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:11:20,624 [DEBUG] django.db.backends: (0.046) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 1) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 1)
2012-08-01 12:11:20,781 [DEBUG] django.db.backends: (0.088) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:12:04,316 [DEBUG] django.db.backends: (0.092) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:12:04,316 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:12:04,474 [DEBUG] django.db.backends: (0.046) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:12:04.428126+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:12:04.428126+00:00')
2012-08-01 12:12:04,520 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:12:04,563 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:12:04,619 [DEBUG] django.db.backends: (0.055) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:12:04,664 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:12:04,719 [DEBUG] django.db.backends: (0.055) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:12:04,765 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:12:04,810 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:12:04,991 [DEBUG] django.db.backends: (0.118) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:12:36,267 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:14:57,227 [DEBUG] django.db.backends: (0.101) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:14:57,280 [DEBUG] django.db.backends: (0.051) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:14:57,281 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:14:57,524 [DEBUG] django.db.backends: (0.044) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."session_key" = '397ac445e30499120895081a807d3a3a'  AND "django_session"."expire_date" > '2012-08-01 16:14:57.478193+00:00' ); args=('397ac445e30499120895081a807d3a3a', u'2012-08-01 16:14:57.478193+00:00')
2012-08-01 12:14:57,571 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:14:57,615 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:14:57,670 [DEBUG] django.db.backends: (0.052) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:14:57,713 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:14:57,758 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:14:57,803 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:14:57,848 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:14:58,438 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:14:58,992 [DEBUG] django.db.backends: (0.049) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('George''s', '2012-08-01 16:14:58.942703+00:00', 40.3522578,  -74.6517694, ST_GeomFromEWKB('\x0101000020e610000026620097b6a952c0656199c8162d4440'::bytea), '244 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=("George's", u'2012-08-01 16:14:58.942703+00:00', 40.3522578, -74.6517694, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f05310>, '244 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:14:59,138 [DEBUG] django.db.backends: (0.091) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:14:59,189 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:14:59,240 [DEBUG] django.db.backends: (0.048) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 12:14:59,289 [DEBUG] django.db.backends: (0.048) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (2, 1) RETURNING "api_businesscategory"."id"; args=(2, 1)
2012-08-01 12:14:59,452 [DEBUG] django.db.backends: (0.103) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 12:14:59,514 [DEBUG] django.db.backends: (0.050) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 2) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 2)
2012-08-01 12:15:00,229 [DEBUG] django.db.backends: (0.091) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:15:00,411 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Tortuga''s', '2012-08-01 16:15:00.361242+00:00', 40.356428,  -74.66485, ST_GeomFromEWKB('\x0101000020e6100000b8af03e78caa52c079b0c56e9f2d4440'::bytea), '41 Leigh Avenue', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=("Tortuga's", u'2012-08-01 16:15:00.361242+00:00', 40.356428, -74.66485, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f05710>, '41 Leigh Avenue', 'Princeton', 'NJ')
2012-08-01 12:15:00,549 [DEBUG] django.db.backends: (0.085) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:00,596 [DEBUG] django.db.backends: (0.047) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:00,645 [DEBUG] django.db.backends: (0.047) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 12:15:00,701 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (3, 1) RETURNING "api_businesscategory"."id"; args=(3, 1)
2012-08-01 12:15:00,847 [DEBUG] django.db.backends: (0.096) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 12:15:00,894 [DEBUG] django.db.backends: (0.047) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 3) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 3)
2012-08-01 12:15:01,689 [DEBUG] django.db.backends: (0.090) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:15:01,861 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Fruity Yogurt', '2012-08-01 16:15:01.814343+00:00', 40.350965,  -74.656608, ST_GeomFromEWKB('\x0101000020e6100000b0928fdd05aa52c03485ce6bec2c4440'::bytea), '166 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Fruity Yogurt', u'2012-08-01 16:15:01.814343+00:00', 40.350965, -74.656608, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f05710>, '166 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:01,994 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:02,040 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:02,086 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 12:15:02,131 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (4, 1) RETURNING "api_businesscategory"."id"; args=(4, 1)
2012-08-01 12:15:02,263 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 12:15:02,307 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 4) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 4)
2012-08-01 12:15:02,895 [DEBUG] django.db.backends: (0.098) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:15:03,073 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Qdoba', '2012-08-01 16:15:03.022739+00:00', 40.3503172,  -74.6580672, ST_GeomFromEWKB('\x0101000020e610000080a4e3c51daa52c0f79caa31d72c4440'::bytea), '140 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Qdoba', u'2012-08-01 16:15:03.022739+00:00', 40.3503172, -74.6580672, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f05850>, '140 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:03,254 [DEBUG] django.db.backends: (0.103) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:03,306 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:03,357 [DEBUG] django.db.backends: (0.048) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 12:15:03,413 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (5, 1) RETURNING "api_businesscategory"."id"; args=(5, 1)
2012-08-01 12:15:03,569 [DEBUG] django.db.backends: (0.102) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 12:15:03,621 [DEBUG] django.db.backends: (0.051) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 5) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 5)
2012-08-01 12:15:04,010 [DEBUG] django.db.backends: (0.096) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:15:04,198 [DEBUG] django.db.backends: (0.053) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('The Bent Spoon', '2012-08-01 16:15:04.144503+00:00', 40.3499051,  -74.6617128, ST_GeomFromEWKB('\x0101000020e61000000ed6a48059aa52c0109ab8b0c92c4440'::bytea), '35 Palmer Square W', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('The Bent Spoon', u'2012-08-01 16:15:04.144503+00:00', 40.3499051, -74.6617128, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f100d0>, '35 Palmer Square W', 'Princeton', 'NJ')
2012-08-01 12:15:04,352 [DEBUG] django.db.backends: (0.096) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:04,404 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:04,460 [DEBUG] django.db.backends: (0.053) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 12:15:04,505 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (6, 1) RETURNING "api_businesscategory"."id"; args=(6, 1)
2012-08-01 12:15:04,649 [DEBUG] django.db.backends: (0.095) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 12:15:04,698 [DEBUG] django.db.backends: (0.047) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 6) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 6)
2012-08-01 12:15:05,166 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 12:15:05,341 [DEBUG] django.db.backends: (0.051) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Naked Pizza', '2012-08-01 16:15:05.290340+00:00', 40.351052,  -74.655989, ST_GeomFromEWKB('\x0101000020e61000004a6249b9fba952c003999d45ef2c4440'::bytea), '180 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Naked Pizza', u'2012-08-01 16:15:05.290340+00:00', 40.351052, -74.655989, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f10f10>, '180 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:05,495 [DEBUG] django.db.backends: (0.100) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:05,548 [DEBUG] django.db.backends: (0.052) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:05,598 [DEBUG] django.db.backends: (0.049) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 12:15:05,646 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (7, 1) RETURNING "api_businesscategory"."id"; args=(7, 1)
2012-08-01 12:15:05,805 [DEBUG] django.db.backends: (0.102) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 12:15:05,854 [DEBUG] django.db.backends: (0.048) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 7) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 7)
2012-08-01 12:15:06,537 [DEBUG] django.db.backends: (0.113) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 12:15:06,729 [DEBUG] django.db.backends: (0.053) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Panera Bread', '2012-08-01 16:15:06.676515+00:00', 40.3502926,  -74.6583107, ST_GeomFromEWKB('\x0101000020e6100000d7c633c321aa52c0f2834e63d62c4440'::bytea), '136 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Panera Bread', u'2012-08-01 16:15:06.676515+00:00', 40.3502926, -74.6583107, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f100d0>, '136 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:06,902 [DEBUG] django.db.backends: (0.128) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:06,956 [DEBUG] django.db.backends: (0.053) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:07,004 [DEBUG] django.db.backends: (0.046) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 12:15:07,049 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (8, 1) RETURNING "api_businesscategory"."id"; args=(8, 1)
2012-08-01 12:15:07,194 [DEBUG] django.db.backends: (0.093) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 12:15:07,237 [DEBUG] django.db.backends: (0.043) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 8) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 8)
2012-08-01 12:15:07,825 [DEBUG] django.db.backends: (0.085) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 12:15:08,009 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Starbucks', '2012-08-01 16:15:07.961586+00:00', 40.350186,  -74.659545, ST_GeomFromEWKB('\x0101000020e6100000614f3bfc35aa52c02fc214e5d22c4440'::bytea), '100 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Starbucks', u'2012-08-01 16:15:07.961586+00:00', 40.350186, -74.659545, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f10e10>, '100 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:08,142 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:08,188 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:08,234 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 12:15:08,277 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (9, 1) RETURNING "api_businesscategory"."id"; args=(9, 1)
2012-08-01 12:15:08,408 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 12:15:08,450 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 9) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 9)
2012-08-01 12:15:09,226 [DEBUG] django.db.backends: (0.090) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 12:15:09,403 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Olives', '2012-08-01 16:15:09.353119+00:00', 40.3504702,  -74.6602182, ST_GeomFromEWKB('\x0101000020e6100000564ed60341aa52c07d9c1f35dc2c4440'::bytea), '22 Witherspoon St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Olives', u'2012-08-01 16:15:09.353119+00:00', 40.3504702, -74.6602182, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d0d0>, '22 Witherspoon St.', 'Princeton', 'NJ')
2012-08-01 12:15:09,558 [DEBUG] django.db.backends: (0.098) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:09,904 [DEBUG] django.db.backends: (0.344) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:09,957 [DEBUG] django.db.backends: (0.052) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 12:15:10,011 [DEBUG] django.db.backends: (0.052) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (10, 1) RETURNING "api_businesscategory"."id"; args=(10, 1)
2012-08-01 12:15:10,156 [DEBUG] django.db.backends: (0.090) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 12:15:10,202 [DEBUG] django.db.backends: (0.046) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 10) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 10)
2012-08-01 12:15:11,183 [DEBUG] django.db.backends: (0.091) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 12:15:11,661 [DEBUG] django.db.backends: (0.346) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Small World Coffee', '2012-08-01 16:15:11.315196+00:00', 40.3502194,  -74.6599773, ST_GeomFromEWKB('\x0101000020e61000008de66d113daa52c05eb642fdd32c4440'::bytea), '14 Witherspoon St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Small World Coffee', u'2012-08-01 16:15:11.315196+00:00', 40.3502194, -74.6599773, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d310>, '14 Witherspoon St.', 'Princeton', 'NJ')
2012-08-01 12:15:11,807 [DEBUG] django.db.backends: (0.091) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:11,859 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:11,907 [DEBUG] django.db.backends: (0.046) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 12:15:11,950 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (11, 1) RETURNING "api_businesscategory"."id"; args=(11, 1)
2012-08-01 12:15:12,089 [DEBUG] django.db.backends: (0.087) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 12:15:12,133 [DEBUG] django.db.backends: (0.043) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 11) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 11)
2012-08-01 12:15:12,750 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 12:15:12,934 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Thomas Sweet', '2012-08-01 16:15:12.884249+00:00', 40.3507703,  -74.655716, ST_GeomFromEWKB('\x0101000020e6100000b1dd3d40f7a952c03d748b0ae62c4440'::bytea), '179 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Thomas Sweet', u'2012-08-01 16:15:12.884249+00:00', 40.3507703, -74.655716, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d190>, '179 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:13,105 [DEBUG] django.db.backends: (0.095) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:13,154 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:13,204 [DEBUG] django.db.backends: (0.049) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 12:15:13,253 [DEBUG] django.db.backends: (0.048) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (12, 1) RETURNING "api_businesscategory"."id"; args=(12, 1)
2012-08-01 12:15:13,404 [DEBUG] django.db.backends: (0.099) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 12:15:13,457 [DEBUG] django.db.backends: (0.052) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 12) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 12)
2012-08-01 12:15:13,702 [DEBUG] django.db.backends: (0.107) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 12:15:13,892 [DEBUG] django.db.backends: (0.054) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Mehek', '2012-08-01 16:15:13.838242+00:00', 40.3507055,  -74.6565555, ST_GeomFromEWKB('\x0101000020e610000092205c0105aa52c07f83f6eae32c4440'::bytea), '164 Nassaus St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Mehek', u'2012-08-01 16:15:13.838242+00:00', 40.3507055, -74.6565555, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d610>, '164 Nassaus St.', 'Princeton', 'NJ')
2012-08-01 12:15:14,051 [DEBUG] django.db.backends: (0.100) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:14,109 [DEBUG] django.db.backends: (0.057) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:14,164 [DEBUG] django.db.backends: (0.054) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 12:15:14,216 [DEBUG] django.db.backends: (0.051) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (13, 1) RETURNING "api_businesscategory"."id"; args=(13, 1)
2012-08-01 12:15:14,380 [DEBUG] django.db.backends: (0.100) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 12:15:14,433 [DEBUG] django.db.backends: (0.052) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 13) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 13)
2012-08-01 12:15:15,029 [DEBUG] django.db.backends: (0.093) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 12:15:15,204 [DEBUG] django.db.backends: (0.051) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Thai Village', '2012-08-01 16:15:15.153749+00:00', 40.3518948,  -74.6522527, ST_GeomFromEWKB('\x0101000020e610000093ce1b82bea952c0f4d088e30a2d4440'::bytea), '235 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Thai Village', u'2012-08-01 16:15:15.153749+00:00', 40.3518948, -74.6522527, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d450>, '235 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:15,347 [DEBUG] django.db.backends: (0.089) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:15,393 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:15,448 [DEBUG] django.db.backends: (0.053) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 12:15:15,496 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (14, 1) RETURNING "api_businesscategory"."id"; args=(14, 1)
2012-08-01 12:15:15,634 [DEBUG] django.db.backends: (0.087) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 12:15:15,679 [DEBUG] django.db.backends: (0.044) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 14) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 14)
2012-08-01 12:15:16,281 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 12:15:16,479 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Tomo Sushi', '2012-08-01 16:15:16.433722+00:00', 40.3520668,  -74.6524244, ST_GeomFromEWKB('\x0101000020e610000032474552c1a952c0f2006086102d4440'::bytea), '236 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Tomo Sushi', u'2012-08-01 16:15:16.433722+00:00', 40.3520668, -74.6524244, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d990>, '236 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:16,611 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:16,657 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:16,700 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 12:15:16,750 [DEBUG] django.db.backends: (0.049) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (15, 1) RETURNING "api_businesscategory"."id"; args=(15, 1)
2012-08-01 12:15:16,893 [DEBUG] django.db.backends: (0.092) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 12:15:16,940 [DEBUG] django.db.backends: (0.046) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 15) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 15)
2012-08-01 12:15:17,474 [DEBUG] django.db.backends: (0.107) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 12:15:17,677 [DEBUG] django.db.backends: (0.058) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Subway', '2012-08-01 16:15:17.618704+00:00', 40.3503702,  -74.6601797, ST_GeomFromEWKB('\x0101000020e6100000eb3e5b6240aa52c01a3f43eed82c4440'::bytea), '18 Witherspoon St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Subway', u'2012-08-01 16:15:17.618704+00:00', 40.3503702, -74.6601797, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d290>, '18 Witherspoon St.', 'Princeton', 'NJ')
2012-08-01 12:15:17,816 [DEBUG] django.db.backends: (0.090) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:17,866 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:17,916 [DEBUG] django.db.backends: (0.048) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 12:15:17,964 [DEBUG] django.db.backends: (0.048) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (16, 1) RETURNING "api_businesscategory"."id"; args=(16, 1)
2012-08-01 12:15:18,118 [DEBUG] django.db.backends: (0.099) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 12:15:18,169 [DEBUG] django.db.backends: (0.050) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 16) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 16)
2012-08-01 12:15:18,960 [DEBUG] django.db.backends: (0.193) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 12:15:19,153 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Pjs Pancake House', '2012-08-01 16:15:19.096483+00:00', 40.3504652,  -74.6577561, ST_GeomFromEWKB('\x0101000020e6100000a68f0aad18aa52c06c312e0bdc2c4440'::bytea), '154 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Pjs Pancake House', u'2012-08-01 16:15:19.096483+00:00', 40.3504652, -74.6577561, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d5d0>, '154 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:15:19,322 [DEBUG] django.db.backends: (0.106) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:19,383 [DEBUG] django.db.backends: (0.060) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:19,438 [DEBUG] django.db.backends: (0.054) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 12:15:19,489 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (17, 1) RETURNING "api_businesscategory"."id"; args=(17, 1)
2012-08-01 12:15:19,663 [DEBUG] django.db.backends: (0.111) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 12:15:19,721 [DEBUG] django.db.backends: (0.057) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 17) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 17)
2012-08-01 12:15:20,379 [DEBUG] django.db.backends: (0.102) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 12:15:20,609 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Osteria Procaccini', '2012-08-01 16:15:20.552217+00:00', 40.3756804,  -74.6132574, ST_GeomFromEWKB('\x0101000020e6100000eb41f79b3fa752c0c5df9b4b16304440'::bytea), '4428 Rt 27 N', 'Kingston', 'NJ') RETURNING "api_business"."id"; args=('Osteria Procaccini', u'2012-08-01 16:15:20.552217+00:00', 40.3756804, -74.6132574, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f1d8d0>, '4428 Rt 27 N', 'Kingston', 'NJ')
2012-08-01 12:15:20,772 [DEBUG] django.db.backends: (0.105) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:15:20,828 [DEBUG] django.db.backends: (0.054) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:15:20,882 [DEBUG] django.db.backends: (0.052) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 12:15:20,934 [DEBUG] django.db.backends: (0.051) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (18, 1) RETURNING "api_businesscategory"."id"; args=(18, 1)
2012-08-01 12:15:21,102 [DEBUG] django.db.backends: (0.105) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 12:15:21,157 [DEBUG] django.db.backends: (0.055) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 18) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 18)
2012-08-01 12:15:21,466 [DEBUG] django.db.backends: (0.112) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 12:15:21,645 [DEBUG] django.db.backends: (0.105) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'Italian'  LIMIT 21; args=('Italian',)
2012-08-01 12:15:22,831 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:16:34,079 [DEBUG] django.db.backends: (0.120) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:34,140 [DEBUG] django.db.backends: (0.058) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:34,141 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:16:34,721 [DEBUG] django.db.backends: (0.057) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:16:34,780 [DEBUG] django.db.backends: (0.058) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:16:34,852 [DEBUG] django.db.backends: (0.070) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:16:34,913 [DEBUG] django.db.backends: (0.060) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:34,982 [DEBUG] django.db.backends: (0.068) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:35,046 [DEBUG] django.db.backends: (0.063) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:16:35,112 [DEBUG] django.db.backends: (0.065) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:16:35,321 [DEBUG] django.db.backends: (0.071) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:16:35,388 [DEBUG] django.db.backends: (0.066) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:16:35,459 [DEBUG] django.db.backends: (0.070) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:16:35,528 [DEBUG] django.db.backends: (0.068) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:35,598 [DEBUG] django.db.backends: (0.067) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:35,666 [DEBUG] django.db.backends: (0.066) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 12:16:35,729 [DEBUG] django.db.backends: (0.062) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 12:16:35,913 [DEBUG] django.db.backends: (0.067) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:16:35,981 [DEBUG] django.db.backends: (0.067) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:16:36,047 [DEBUG] django.db.backends: (0.064) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ) LIMIT 1; args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:16:36,109 [DEBUG] django.db.backends: (0.061) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:36,174 [DEBUG] django.db.backends: (0.064) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:36,241 [DEBUG] django.db.backends: (0.066) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 12:16:36,310 [DEBUG] django.db.backends: (0.068) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 12:16:36,668 [DEBUG] django.db.backends: (0.065) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:16:36,741 [DEBUG] django.db.backends: (0.072) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:16:36,807 [DEBUG] django.db.backends: (0.064) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:16:36,874 [DEBUG] django.db.backends: (0.066) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:36,940 [DEBUG] django.db.backends: (0.065) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:37,003 [DEBUG] django.db.backends: (0.060) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 12:16:37,064 [DEBUG] django.db.backends: (0.060) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 12:16:37,413 [DEBUG] django.db.backends: (0.112) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:16:37,478 [DEBUG] django.db.backends: (0.064) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:16:37,548 [DEBUG] django.db.backends: (0.069) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:16:37,612 [DEBUG] django.db.backends: (0.062) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:37,678 [DEBUG] django.db.backends: (0.066) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:37,753 [DEBUG] django.db.backends: (0.073) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 12:16:37,826 [DEBUG] django.db.backends: (0.072) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 12:16:38,035 [DEBUG] django.db.backends: (0.070) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:16:38,093 [DEBUG] django.db.backends: (0.057) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:16:38,156 [DEBUG] django.db.backends: (0.061) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 1; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:16:38,213 [DEBUG] django.db.backends: (0.056) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:38,278 [DEBUG] django.db.backends: (0.063) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:38,338 [DEBUG] django.db.backends: (0.058) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 12:16:38,399 [DEBUG] django.db.backends: (0.060) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 12:16:38,707 [DEBUG] django.db.backends: (0.059) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 12:16:38,768 [DEBUG] django.db.backends: (0.060) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 12:16:38,832 [DEBUG] django.db.backends: (0.063) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 12:16:38,891 [DEBUG] django.db.backends: (0.058) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:38,958 [DEBUG] django.db.backends: (0.065) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:39,016 [DEBUG] django.db.backends: (0.057) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 12:16:39,091 [DEBUG] django.db.backends: (0.074) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 12:16:39,320 [DEBUG] django.db.backends: (0.094) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 12:16:39,432 [DEBUG] django.db.backends: (0.111) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 12:16:39,562 [DEBUG] django.db.backends: (0.129) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 12:16:39,639 [DEBUG] django.db.backends: (0.076) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:39,713 [DEBUG] django.db.backends: (0.073) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:39,799 [DEBUG] django.db.backends: (0.085) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 12:16:39,902 [DEBUG] django.db.backends: (0.101) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 12:16:40,120 [DEBUG] django.db.backends: (0.059) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 12:16:40,198 [DEBUG] django.db.backends: (0.077) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 12:16:40,272 [DEBUG] django.db.backends: (0.073) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 12:16:40,334 [DEBUG] django.db.backends: (0.061) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:40,398 [DEBUG] django.db.backends: (0.062) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:40,462 [DEBUG] django.db.backends: (0.063) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 12:16:40,532 [DEBUG] django.db.backends: (0.067) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 12:16:41,485 [DEBUG] django.db.backends: (0.071) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 12:16:41,555 [DEBUG] django.db.backends: (0.068) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 12:16:41,635 [DEBUG] django.db.backends: (0.079) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 12:16:41,699 [DEBUG] django.db.backends: (0.062) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:41,770 [DEBUG] django.db.backends: (0.071) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:41,861 [DEBUG] django.db.backends: (0.089) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 12:16:41,926 [DEBUG] django.db.backends: (0.064) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 12:16:42,609 [DEBUG] django.db.backends: (0.063) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 12:16:42,673 [DEBUG] django.db.backends: (0.063) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 12:16:42,743 [DEBUG] django.db.backends: (0.068) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 12:16:42,813 [DEBUG] django.db.backends: (0.067) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:42,885 [DEBUG] django.db.backends: (0.071) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:42,956 [DEBUG] django.db.backends: (0.068) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 12:16:43,027 [DEBUG] django.db.backends: (0.068) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 12:16:44,328 [DEBUG] django.db.backends: (0.807) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 12:16:44,395 [DEBUG] django.db.backends: (0.065) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 12:16:44,466 [DEBUG] django.db.backends: (0.069) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 12:16:44,536 [DEBUG] django.db.backends: (0.068) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:44,609 [DEBUG] django.db.backends: (0.073) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:44,687 [DEBUG] django.db.backends: (0.077) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 12:16:44,752 [DEBUG] django.db.backends: (0.063) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 12:16:44,900 [DEBUG] django.db.backends: (0.063) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 12:16:44,964 [DEBUG] django.db.backends: (0.063) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 12:16:45,033 [DEBUG] django.db.backends: (0.068) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 12:16:45,099 [DEBUG] django.db.backends: (0.065) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:45,167 [DEBUG] django.db.backends: (0.065) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:45,233 [DEBUG] django.db.backends: (0.064) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 12:16:45,297 [DEBUG] django.db.backends: (0.063) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 12:16:45,962 [DEBUG] django.db.backends: (0.071) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 12:16:46,031 [DEBUG] django.db.backends: (0.067) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 12:16:46,105 [DEBUG] django.db.backends: (0.072) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 12:16:46,174 [DEBUG] django.db.backends: (0.067) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:46,247 [DEBUG] django.db.backends: (0.072) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:46,317 [DEBUG] django.db.backends: (0.068) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 12:16:46,387 [DEBUG] django.db.backends: (0.069) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 12:16:46,567 [DEBUG] django.db.backends: (0.068) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 12:16:46,633 [DEBUG] django.db.backends: (0.064) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 12:16:46,703 [DEBUG] django.db.backends: (0.068) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 12:16:46,769 [DEBUG] django.db.backends: (0.065) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:46,836 [DEBUG] django.db.backends: (0.066) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:46,901 [DEBUG] django.db.backends: (0.063) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 12:16:46,969 [DEBUG] django.db.backends: (0.066) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 12:16:47,269 [DEBUG] django.db.backends: (0.074) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 12:16:47,355 [DEBUG] django.db.backends: (0.085) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 12:16:47,421 [DEBUG] django.db.backends: (0.065) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 12:16:47,486 [DEBUG] django.db.backends: (0.062) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:47,551 [DEBUG] django.db.backends: (0.063) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:47,616 [DEBUG] django.db.backends: (0.064) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 12:16:47,681 [DEBUG] django.db.backends: (0.064) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 12:16:48,199 [DEBUG] django.db.backends: (0.065) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 12:16:48,266 [DEBUG] django.db.backends: (0.064) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 12:16:48,335 [DEBUG] django.db.backends: (0.068) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 12:16:48,400 [DEBUG] django.db.backends: (0.064) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:48,466 [DEBUG] django.db.backends: (0.065) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:48,531 [DEBUG] django.db.backends: (0.063) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 12:16:48,593 [DEBUG] django.db.backends: (0.061) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 12:16:48,774 [DEBUG] django.db.backends: (0.062) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 12:16:48,839 [DEBUG] django.db.backends: (0.064) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 12:16:48,905 [DEBUG] django.db.backends: (0.065) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ) LIMIT 1; args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 12:16:48,969 [DEBUG] django.db.backends: (0.063) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:16:49,034 [DEBUG] django.db.backends: (0.063) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:49,098 [DEBUG] django.db.backends: (0.063) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 12:16:49,162 [DEBUG] django.db.backends: (0.061) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 12:16:49,296 [DEBUG] django.db.backends: (0.059) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 12:16:49,358 [DEBUG] django.db.backends: (0.061) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:49.296608+00:00', 'Italian', 'italian.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:49.296608+00:00', 'Italian', 'italian.png')
2012-08-01 12:16:49,544 [DEBUG] django.db.backends: (0.116) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 12:16:49,605 [DEBUG] django.db.backends: (0.060) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:49.544738+00:00', 'Mexican', 'mexican.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:49.544738+00:00', 'Mexican', 'mexican.png')
2012-08-01 12:16:49,792 [DEBUG] django.db.backends: (0.121) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 12:16:49,854 [DEBUG] django.db.backends: (0.062) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:49.792968+00:00', 'Local', 'local.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:49.792968+00:00', 'Local', 'local.png')
2012-08-01 12:16:50,047 [DEBUG] django.db.backends: (0.122) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 12:16:50,110 [DEBUG] django.db.backends: (0.061) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:50.048845+00:00', 'Authentic', 'authentic.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:50.048845+00:00', 'Authentic', 'authentic.png')
2012-08-01 12:16:50,297 [DEBUG] django.db.backends: (0.118) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 12:16:50,358 [DEBUG] django.db.backends: (0.059) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:50.299272+00:00', 'Buffet', 'buffet.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:50.299272+00:00', 'Buffet', 'buffet.png')
2012-08-01 12:16:50,543 [DEBUG] django.db.backends: (0.118) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 12:16:50,603 [DEBUG] django.db.backends: (0.059) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:50.543911+00:00', 'Value', 'value.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:50.543911+00:00', 'Value', 'value.png')
2012-08-01 12:16:50,794 [DEBUG] django.db.backends: (0.113) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 12:16:50,851 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:50.794453+00:00', 'Chinese', 'chinese.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:50.794453+00:00', 'Chinese', 'chinese.png')
2012-08-01 12:16:51,041 [DEBUG] django.db.backends: (0.124) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 12:16:51,100 [DEBUG] django.db.backends: (0.058) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:51.041995+00:00', 'Sushi', 'sushi.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:51.041995+00:00', 'Sushi', 'sushi.png')
2012-08-01 12:16:51,278 [DEBUG] django.db.backends: (0.113) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 12:16:51,335 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:51.278405+00:00', 'Fast', 'fast.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:51.278405+00:00', 'Fast', 'fast.png')
2012-08-01 12:16:51,513 [DEBUG] django.db.backends: (0.114) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 12:16:51,574 [DEBUG] django.db.backends: (0.060) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:51.514329+00:00', 'Cocktails', 'cocktails.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:51.514329+00:00', 'Cocktails', 'cocktails.png')
2012-08-01 12:16:51,757 [DEBUG] django.db.backends: (0.115) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 12:16:51,827 [DEBUG] django.db.backends: (0.070) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:51.757456+00:00', 'Dessert', 'dessert.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:51.757456+00:00', 'Dessert', 'dessert.png')
2012-08-01 12:16:52,010 [DEBUG] django.db.backends: (0.117) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 12:16:52,083 [DEBUG] django.db.backends: (0.073) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:52.010529+00:00', 'Coffee', 'coffee.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:52.010529+00:00', 'Coffee', 'coffee.png')
2012-08-01 12:16:52,282 [DEBUG] django.db.backends: (0.117) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 12:16:52,344 [DEBUG] django.db.backends: (0.061) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:52.282472+00:00', 'Sandwiches', 'sandwiches.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:52.282472+00:00', 'Sandwiches', 'sandwiches.png')
2012-08-01 12:16:52,525 [DEBUG] django.db.backends: (0.118) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 12:16:52,581 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:52.525975+00:00', 'Pizza', 'pizza.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:52.525975+00:00', 'Pizza', 'pizza.png')
2012-08-01 12:16:52,748 [DEBUG] django.db.backends: (0.107) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 12:16:54,131 [DEBUG] django.db.backends: (1.382) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:52.749096+00:00', 'Seafood', 'seafood.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:52.749096+00:00', 'Seafood', 'seafood.png')
2012-08-01 12:16:54,344 [DEBUG] django.db.backends: (0.141) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 12:16:54,402 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:54.345811+00:00', 'Classy', 'classy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:54.345811+00:00', 'Classy', 'classy.png')
2012-08-01 12:16:54,586 [DEBUG] django.db.backends: (0.117) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 12:16:54,644 [DEBUG] django.db.backends: (0.056) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:54.587412+00:00', 'Vegetarian', 'vegetarian.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:54.587412+00:00', 'Vegetarian', 'vegetarian.png')
2012-08-01 12:16:54,822 [DEBUG] django.db.backends: (0.111) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 12:16:54,880 [DEBUG] django.db.backends: (0.058) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:54.822780+00:00', 'Party', 'party.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:54.822780+00:00', 'Party', 'party.png')
2012-08-01 12:16:55,055 [DEBUG] django.db.backends: (0.111) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 12:16:55,113 [DEBUG] django.db.backends: (0.056) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:55.056830+00:00', 'Carnivore', 'steak.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:55.056830+00:00', 'Carnivore', 'steak.png')
2012-08-01 12:16:55,287 [DEBUG] django.db.backends: (0.113) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 12:16:55,346 [DEBUG] django.db.backends: (0.058) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:55.288314+00:00', 'Wine', 'wine.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:55.288314+00:00', 'Wine', 'wine.png')
2012-08-01 12:16:55,523 [DEBUG] django.db.backends: (0.110) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 12:16:55,582 [DEBUG] django.db.backends: (0.058) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:55.524302+00:00', 'Healthy', 'healthy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:55.524302+00:00', 'Healthy', 'healthy.png')
2012-08-01 12:16:55,764 [DEBUG] django.db.backends: (0.116) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 12:16:55,821 [DEBUG] django.db.backends: (0.056) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:55.764600+00:00', 'American', 'american.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:55.764600+00:00', 'American', 'american.png')
2012-08-01 12:16:55,994 [DEBUG] django.db.backends: (0.112) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 12:16:56,052 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:55.995199+00:00', 'Ice Cream', 'icecream.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:55.995199+00:00', 'Ice Cream', 'icecream.png')
2012-08-01 12:16:56,224 [DEBUG] django.db.backends: (0.115) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 12:16:56,279 [DEBUG] django.db.backends: (0.053) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:56.225767+00:00', 'Spicy', 'spicy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:56.225767+00:00', 'Spicy', 'spicy.png')
2012-08-01 12:16:56,445 [DEBUG] django.db.backends: (0.107) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 12:16:56,500 [DEBUG] django.db.backends: (0.054) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:56.445804+00:00', 'Bakery', 'bakery.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:56.445804+00:00', 'Bakery', 'bakery.png')
2012-08-01 12:16:56,663 [DEBUG] django.db.backends: (0.104) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 12:16:56,720 [DEBUG] django.db.backends: (0.056) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:56.664682+00:00', 'Sweets', 'sweets.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:56.664682+00:00', 'Sweets', 'sweets.png')
2012-08-01 12:16:56,884 [DEBUG] django.db.backends: (0.106) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 12:16:56,941 [DEBUG] django.db.backends: (0.056) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:16:56.885662+00:00', 'WiFi', 'wifi.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:16:56.885662+00:00', 'WiFi', 'wifi.png')
2012-08-01 12:16:57,119 [DEBUG] django.db.backends: (0.118) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:16:57,178 [DEBUG] django.db.backends: (0.058) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 12:16:57,239 [DEBUG] django.db.backends: (0.060) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 16:16:57.179391+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 16:16:57.179391+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:57,422 [DEBUG] django.db.backends: (0.118) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 16:16:57.304168+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 16:16:57.304168+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:57,610 [DEBUG] django.db.backends: (0.122) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 16:16:57.487678+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 16:16:57.487678+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:57,791 [DEBUG] django.db.backends: (0.120) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 16:16:57.671633+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 16:16:57.671633+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:57,966 [DEBUG] django.db.backends: (0.116) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 16:16:57.850575+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 16:16:57.850575+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:58,148 [DEBUG] django.db.backends: (0.119) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 16:16:58.029255+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 16:16:58.029255+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:58,327 [DEBUG] django.db.backends: (0.118) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 16:16:58.208759+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 16:16:58.208759+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:58,521 [DEBUG] django.db.backends: (0.134) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 16:16:58.387796+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 16:16:58.387796+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:58,709 [DEBUG] django.db.backends: (0.124) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 16:16:58.584986+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 16:16:58.584986+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:58,888 [DEBUG] django.db.backends: (0.118) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 16:16:58.769755+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 16:16:58.769755+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:59,062 [DEBUG] django.db.backends: (0.113) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 16:16:58.949121+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 16:16:58.949121+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:59,237 [DEBUG] django.db.backends: (0.113) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 16:16:59.124211+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 16:16:59.124211+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:59,409 [DEBUG] django.db.backends: (0.114) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 16:16:59.294750+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 16:16:59.294750+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:59,578 [DEBUG] django.db.backends: (0.113) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 16:16:59.465161+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 16:16:59.465161+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:59,754 [DEBUG] django.db.backends: (0.117) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 16:16:59.637271+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 16:16:59.637271+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:16:59,944 [DEBUG] django.db.backends: (0.131) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 16:16:59.812793+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 16:16:59.812793+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:00,119 [DEBUG] django.db.backends: (0.108) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 16:17:00.011210+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 16:17:00.011210+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:00,311 [DEBUG] django.db.backends: (0.127) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 16:17:00.184168+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 16:17:00.184168+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:00,489 [DEBUG] django.db.backends: (0.117) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 16:17:00.372008+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 16:17:00.372008+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:00,658 [DEBUG] django.db.backends: (0.111) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 16:17:00.547087+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 16:17:00.547087+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:00,820 [DEBUG] django.db.backends: (0.106) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 16:17:00.713901+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 16:17:00.713901+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:01,307 [DEBUG] django.db.backends: (0.430) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 16:17:00.876946+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 16:17:00.876946+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:01,468 [DEBUG] django.db.backends: (0.107) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 16:17:01.361313+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 16:17:01.361313+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:01,636 [DEBUG] django.db.backends: (0.112) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 16:17:01.524434+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 16:17:01.524434+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:02,519 [DEBUG] django.db.backends: (0.823) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 16:17:01.695773+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 16:17:01.695773+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:02,698 [DEBUG] django.db.backends: (0.115) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 16:17:02.583246+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 16:17:02.583246+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:02,878 [DEBUG] django.db.backends: (0.117) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 16:17:02.760312+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 16:17:02.760312+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:17:03,064 [DEBUG] django.db.backends: (0.123) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 16:17:02.941870+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 16:17:02.941870+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:37:26,900 [DEBUG] django.db.backends: (0.087) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:26,901 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:37:27,468 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:37:27,509 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:37:27,562 [DEBUG] django.db.backends: (0.052) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:37:27,605 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:27,650 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:27,694 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:37:27,741 [DEBUG] django.db.backends: (0.045) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:37:28,250 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:37:28,293 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:37:28,340 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:37:28,385 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:28,430 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:28,476 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 12:37:28,521 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 12:37:29,072 [DEBUG] django.db.backends: (0.056) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:37:29,114 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:37:29,161 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ) LIMIT 1; args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:37:29,203 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:29,248 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:29,292 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 12:37:29,336 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 12:37:30,258 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:37:30,307 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:37:30,353 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:37:30,396 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:30,441 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:30,484 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 12:37:30,528 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 12:37:30,830 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:30,831 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:37:31,033 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:37:31,076 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:37:31,102 [DEBUG] django.db.backends: (0.056) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business"; args=()
2012-08-01 12:37:31,122 [DEBUG] django.db.backends: (0.044) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:37:31,149 [DEBUG] django.db.backends: (0.044) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,165 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:31,194 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,209 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:31,244 [DEBUG] django.db.backends: (0.046) SELECT "api_discussion"."id", "api_discussion"."user_id", "api_discussion"."date", "api_discussion"."reply_to_id", "api_discussion"."content", "api_categorydiscussion"."discussion_ptr_id", "api_categorydiscussion"."businesstag_id" FROM "api_categorydiscussion" INNER JOIN "api_discussion" ON ("api_categorydiscussion"."discussion_ptr_id" = "api_discussion"."id") WHERE "api_categorydiscussion"."businesstag_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,254 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 12:37:31,294 [DEBUG] django.db.backends: (0.047) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_categoryrating"."rating_ptr_id", "api_categoryrating"."category_id" FROM "api_categoryrating" INNER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_categoryrating"."category_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,305 [DEBUG] django.db.backends: (0.049) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 12:37:31,342 [DEBUG] django.db.backends: (0.046) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18) ORDER BY "wiki_page"."name" ASC; args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,388 [DEBUG] django.db.backends: (0.044) SELECT "api_offer"."id", "api_offer"."business_id", "api_offer"."description", "api_offer"."restricitons", "api_offer"."created_on", "api_offer"."valid_from", "api_offer"."valid_until" FROM "api_offer" WHERE "api_offer"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,437 [DEBUG] django.db.backends: (0.045) SELECT "api_discussion"."id", "api_discussion"."user_id", "api_discussion"."date", "api_discussion"."reply_to_id", "api_discussion"."content", "api_businessdiscussion"."discussion_ptr_id", "api_businessdiscussion"."business_id" FROM "api_businessdiscussion" INNER JOIN "api_discussion" ON ("api_businessdiscussion"."discussion_ptr_id" = "api_discussion"."id") WHERE "api_businessdiscussion"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,484 [DEBUG] django.db.backends: (0.045) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_businessrating"."rating_ptr_id", "api_businessrating"."business_id" FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,531 [DEBUG] django.db.backends: (0.044) SELECT "recommendation_recommendation"."id", "recommendation_recommendation"."business_id", "recommendation_recommendation"."username_id", "recommendation_recommendation"."recommendation" FROM "recommendation_recommendation" WHERE "recommendation_recommendation"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,578 [DEBUG] django.db.backends: (0.045) SELECT "recommendation_businessfactor"."id", "recommendation_businessfactor"."business_id", "recommendation_businessfactor"."latentFactor", "recommendation_businessfactor"."relation" FROM "recommendation_businessfactor" WHERE "recommendation_businessfactor"."business_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)
2012-08-01 12:37:31,585 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:37:31,620 [DEBUG] django.db.backends: (0.042) DELETE FROM "wiki_page" WHERE "id" IN (18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
2012-08-01 12:37:31,628 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:37:31,662 [DEBUG] django.db.backends: (0.041) DELETE FROM "api_businesscategory" WHERE "id" IN (18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
2012-08-01 12:37:31,674 [DEBUG] django.db.backends: (0.044) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 1; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:37:31,705 [DEBUG] django.db.backends: (0.041) DELETE FROM "api_business" WHERE "id" IN (18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
2012-08-01 12:37:31,718 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:31,769 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:31,814 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 12:37:31,855 [DEBUG] django.db.backends: (0.040) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (6, 1) RETURNING "api_businesscategory"."id"; args=(6, 1)
2012-08-01 12:37:31,861 [DEBUG] django.db.backends: (0.087) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC; args=()
2012-08-01 12:37:31,986 [DEBUG] django.db.backends: (0.083) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo"; args=()
2012-08-01 12:37:32,058 [DEBUG] django.db.backends: (0.084) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 21; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:37:32,101 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" LIMIT 21; args=()
2012-08-01 12:37:32,110 [DEBUG] django.db.backends: (0.083) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory"; args=()
2012-08-01 12:37:32,296 [DEBUG] django.db.backends: (0.087) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 12:37:32,345 [DEBUG] django.db.backends: (0.046) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."tag_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28)
2012-08-01 12:37:32,390 [DEBUG] django.db.backends: (0.043) SELECT "api_usersubscription"."id", "api_usersubscription"."user_id", "api_usersubscription"."tag_id" FROM "api_usersubscription" WHERE "api_usersubscription"."tag_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28)
2012-08-01 12:37:32,436 [DEBUG] django.db.backends: (0.043) SELECT "queries_querytag"."id", "queries_querytag"."query_id", "queries_querytag"."tag_id" FROM "queries_querytag" WHERE "queries_querytag"."tag_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28)
2012-08-01 12:37:32,478 [DEBUG] django.db.backends: (0.042) DELETE FROM "api_tag" WHERE "id" IN (28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)
2012-08-01 12:37:32,613 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:37:33,161 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Hoagie Haven', '2012-08-01 16:37:33.114469+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:37:33.114469+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7a90>, '242 Nassau St.', 'Princeton ', 'NJ')
2012-08-01 12:37:33,318 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:33,364 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:33,407 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:33.365364+00:00', 'The Bottom Line', '') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:33.365364+00:00', 'The Bottom Line', '')
2012-08-01 12:37:33,542 [DEBUG] django.db.backends: (0.085) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:33,586 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 19 ); args=(29, 19)
2012-08-01 12:37:33,628 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (19, 29) RETURNING "api_businesscategory"."id"; args=(19, 29)
2012-08-01 12:37:33,759 [DEBUG] django.db.backends: (0.087) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 20 ; args=(20,)
2012-08-01 12:37:33,810 [DEBUG] django.db.backends: (0.043) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 20) RETURNING "wiki_page"."id"; args=('The Bottom Line', '', '', 20)
2012-08-01 12:37:34,019 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:37:34,198 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('George''s', '2012-08-01 16:37:34.153067+00:00', 40.3522578,  -74.6517694, ST_GeomFromEWKB('\x0101000020e610000026620097b6a952c0656199c8162d4440'::bytea), '244 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=("George's", u'2012-08-01 16:37:34.153067+00:00', 40.3522578, -74.6517694, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa74d0>, '244 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:34,333 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:34,379 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:34,425 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 20 ); args=(29, 20)
2012-08-01 12:37:34,466 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (20, 29) RETURNING "api_businesscategory"."id"; args=(20, 29)
2012-08-01 12:37:34,608 [DEBUG] django.db.backends: (0.089) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 21 ; args=(21,)
2012-08-01 12:37:34,653 [DEBUG] django.db.backends: (0.043) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 21) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 21)
2012-08-01 12:37:34,879 [DEBUG] django.db.backends: (0.105) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:37:35,052 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Tortuga''s', '2012-08-01 16:37:35.007277+00:00', 40.356428,  -74.66485, ST_GeomFromEWKB('\x0101000020e6100000b8af03e78caa52c079b0c56e9f2d4440'::bytea), '41 Leigh Avenue', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=("Tortuga's", u'2012-08-01 16:37:35.007277+00:00', 40.356428, -74.66485, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa76d0>, '41 Leigh Avenue', 'Princeton', 'NJ')
2012-08-01 12:37:35,183 [DEBUG] django.db.backends: (0.086) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:35,230 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:35,275 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 21 ); args=(29, 21)
2012-08-01 12:37:35,318 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (21, 29) RETURNING "api_businesscategory"."id"; args=(21, 29)
2012-08-01 12:37:35,448 [DEBUG] django.db.backends: (0.085) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 22 ; args=(22,)
2012-08-01 12:37:35,490 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 22) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 22)
2012-08-01 12:37:35,846 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:37:36,018 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Fruity Yogurt', '2012-08-01 16:37:35.972858+00:00', 40.350965,  -74.656608, ST_GeomFromEWKB('\x0101000020e6100000b0928fdd05aa52c03485ce6bec2c4440'::bytea), '166 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Fruity Yogurt', u'2012-08-01 16:37:35.972858+00:00', 40.350965, -74.656608, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7dd0>, '166 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:36,148 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:36,194 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:36,240 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 22 ); args=(29, 22)
2012-08-01 12:37:36,282 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (22, 29) RETURNING "api_businesscategory"."id"; args=(22, 29)
2012-08-01 12:37:36,413 [DEBUG] django.db.backends: (0.083) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 23 ; args=(23,)
2012-08-01 12:37:36,456 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 23) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 23)
2012-08-01 12:37:36,672 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:37:36,850 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Qdoba', '2012-08-01 16:37:36.804642+00:00', 40.3503172,  -74.6580672, ST_GeomFromEWKB('\x0101000020e610000080a4e3c51daa52c0f79caa31d72c4440'::bytea), '140 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Qdoba', u'2012-08-01 16:37:36.804642+00:00', 40.3503172, -74.6580672, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa76d0>, '140 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:36,978 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:37,024 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:37,071 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 23 ); args=(29, 23)
2012-08-01 12:37:37,113 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (23, 29) RETURNING "api_businesscategory"."id"; args=(23, 29)
2012-08-01 12:37:37,246 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 24 ; args=(24,)
2012-08-01 12:37:37,289 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 24) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 24)
2012-08-01 12:37:37,553 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:37:37,725 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('The Bent Spoon', '2012-08-01 16:37:37.680259+00:00', 40.3499051,  -74.6617128, ST_GeomFromEWKB('\x0101000020e61000000ed6a48059aa52c0109ab8b0c92c4440'::bytea), '35 Palmer Square W', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('The Bent Spoon', u'2012-08-01 16:37:37.680259+00:00', 40.3499051, -74.6617128, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7690>, '35 Palmer Square W', 'Princeton', 'NJ')
2012-08-01 12:37:37,862 [DEBUG] django.db.backends: (0.086) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:37,908 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:37,953 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 24 ); args=(29, 24)
2012-08-01 12:37:37,996 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (24, 29) RETURNING "api_businesscategory"."id"; args=(24, 29)
2012-08-01 12:37:38,130 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 25 ; args=(25,)
2012-08-01 12:37:38,171 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 25) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 25)
2012-08-01 12:37:38,598 [DEBUG] django.db.backends: (0.088) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 12:37:38,788 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Naked Pizza', '2012-08-01 16:37:38.742457+00:00', 40.351052,  -74.655989, ST_GeomFromEWKB('\x0101000020e61000004a6249b9fba952c003999d45ef2c4440'::bytea), '180 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Naked Pizza', u'2012-08-01 16:37:38.742457+00:00', 40.351052, -74.655989, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7590>, '180 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:38,916 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:38,962 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:39,008 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 25 ); args=(29, 25)
2012-08-01 12:37:39,050 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (25, 29) RETURNING "api_businesscategory"."id"; args=(25, 29)
2012-08-01 12:37:39,176 [DEBUG] django.db.backends: (0.083) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 26 ; args=(26,)
2012-08-01 12:37:39,219 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 26) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 26)
2012-08-01 12:37:39,802 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 12:37:39,973 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Panera Bread', '2012-08-01 16:37:39.927456+00:00', 40.3502926,  -74.6583107, ST_GeomFromEWKB('\x0101000020e6100000d7c633c321aa52c0f2834e63d62c4440'::bytea), '136 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Panera Bread', u'2012-08-01 16:37:39.927456+00:00', 40.3502926, -74.6583107, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7ad0>, '136 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:40,124 [DEBUG] django.db.backends: (0.101) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:40,177 [DEBUG] django.db.backends: (0.052) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:40,222 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 26 ); args=(29, 26)
2012-08-01 12:37:40,264 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (26, 29) RETURNING "api_businesscategory"."id"; args=(26, 29)
2012-08-01 12:37:40,397 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 27 ; args=(27,)
2012-08-01 12:37:40,439 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 27) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 27)
2012-08-01 12:37:41,025 [DEBUG] django.db.backends: (0.089) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 12:37:41,204 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Starbucks', '2012-08-01 16:37:41.157090+00:00', 40.350186,  -74.659545, ST_GeomFromEWKB('\x0101000020e6100000614f3bfc35aa52c02fc214e5d22c4440'::bytea), '100 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Starbucks', u'2012-08-01 16:37:41.157090+00:00', 40.350186, -74.659545, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa76d0>, '100 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:41,350 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:41,396 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:41,440 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 27 ); args=(29, 27)
2012-08-01 12:37:41,484 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (27, 29) RETURNING "api_businesscategory"."id"; args=(27, 29)
2012-08-01 12:37:41,617 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 28 ; args=(28,)
2012-08-01 12:37:41,661 [DEBUG] django.db.backends: (0.043) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 28) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 28)
2012-08-01 12:37:42,409 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 12:37:42,588 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Olives', '2012-08-01 16:37:42.542883+00:00', 40.3504702,  -74.6602182, ST_GeomFromEWKB('\x0101000020e6100000564ed60341aa52c07d9c1f35dc2c4440'::bytea), '22 Witherspoon St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Olives', u'2012-08-01 16:37:42.542883+00:00', 40.3504702, -74.6602182, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa050>, '22 Witherspoon St.', 'Princeton', 'NJ')
2012-08-01 12:37:42,722 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:42,767 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:42,812 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 28 ); args=(29, 28)
2012-08-01 12:37:42,853 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (28, 29) RETURNING "api_businesscategory"."id"; args=(28, 29)
2012-08-01 12:37:42,984 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 29 ; args=(29,)
2012-08-01 12:37:43,025 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 29) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 29)
2012-08-01 12:37:44,156 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 12:37:44,321 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Small World Coffee', '2012-08-01 16:37:44.275881+00:00', 40.3502194,  -74.6599773, ST_GeomFromEWKB('\x0101000020e61000008de66d113daa52c05eb642fdd32c4440'::bytea), '14 Witherspoon St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Small World Coffee', u'2012-08-01 16:37:44.275881+00:00', 40.3502194, -74.6599773, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa450>, '14 Witherspoon St.', 'Princeton', 'NJ')
2012-08-01 12:37:44,453 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:44,499 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:44,543 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 29 ); args=(29, 29)
2012-08-01 12:37:44,585 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (29, 29) RETURNING "api_businesscategory"."id"; args=(29, 29)
2012-08-01 12:37:44,715 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 30 ; args=(30,)
2012-08-01 12:37:44,757 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 30) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 30)
2012-08-01 12:37:45,337 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 12:37:45,511 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Thomas Sweet', '2012-08-01 16:37:45.466300+00:00', 40.3507703,  -74.655716, ST_GeomFromEWKB('\x0101000020e6100000b1dd3d40f7a952c03d748b0ae62c4440'::bytea), '179 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Thomas Sweet', u'2012-08-01 16:37:45.466300+00:00', 40.3507703, -74.655716, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa110>, '179 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:45,643 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:45,689 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:45,733 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 30 ); args=(29, 30)
2012-08-01 12:37:45,775 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (30, 29) RETURNING "api_businesscategory"."id"; args=(30, 29)
2012-08-01 12:37:45,909 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 31 ; args=(31,)
2012-08-01 12:37:45,951 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 31) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 31)
2012-08-01 12:37:46,205 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 12:37:46,412 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Mehek', '2012-08-01 16:37:46.366409+00:00', 40.3507055,  -74.6565555, ST_GeomFromEWKB('\x0101000020e610000092205c0105aa52c07f83f6eae32c4440'::bytea), '164 Nassaus St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Mehek', u'2012-08-01 16:37:46.366409+00:00', 40.3507055, -74.6565555, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa4d0>, '164 Nassaus St.', 'Princeton', 'NJ')
2012-08-01 12:37:46,543 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:46,591 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:46,931 [DEBUG] django.db.backends: (0.338) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 31 ); args=(29, 31)
2012-08-01 12:37:46,985 [DEBUG] django.db.backends: (0.053) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (31, 29) RETURNING "api_businesscategory"."id"; args=(31, 29)
2012-08-01 12:37:47,132 [DEBUG] django.db.backends: (0.091) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 32 ; args=(32,)
2012-08-01 12:37:47,175 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 32) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 32)
2012-08-01 12:37:47,872 [DEBUG] django.db.backends: (0.088) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 12:37:48,050 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Thai Village', '2012-08-01 16:37:48.000500+00:00', 40.3518948,  -74.6522527, ST_GeomFromEWKB('\x0101000020e610000093ce1b82bea952c0f4d088e30a2d4440'::bytea), '235 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Thai Village', u'2012-08-01 16:37:48.000500+00:00', 40.3518948, -74.6522527, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa650>, '235 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:48,293 [DEBUG] django.db.backends: (0.196) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:48,464 [DEBUG] django.db.backends: (0.170) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:48,622 [DEBUG] django.db.backends: (0.156) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 32 ); args=(29, 32)
2012-08-01 12:37:48,665 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (32, 29) RETURNING "api_businesscategory"."id"; args=(32, 29)
2012-08-01 12:37:49,087 [DEBUG] django.db.backends: (0.162) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 33 ; args=(33,)
2012-08-01 12:37:49,129 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 33) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 33)
2012-08-01 12:37:51,205 [DEBUG] django.db.backends: (0.322) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 12:37:51,501 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Tomo Sushi', '2012-08-01 16:37:51.455280+00:00', 40.3520668,  -74.6524244, ST_GeomFromEWKB('\x0101000020e610000032474552c1a952c0f2006086102d4440'::bytea), '236 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Tomo Sushi', u'2012-08-01 16:37:51.455280+00:00', 40.3520668, -74.6524244, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa0d0>, '236 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:51,632 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:51,678 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:51,724 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 33 ); args=(29, 33)
2012-08-01 12:37:51,766 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (33, 29) RETURNING "api_businesscategory"."id"; args=(33, 29)
2012-08-01 12:37:51,895 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 34 ; args=(34,)
2012-08-01 12:37:51,937 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 34) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 34)
2012-08-01 12:37:52,437 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 12:37:52,605 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Subway', '2012-08-01 16:37:52.559061+00:00', 40.3503702,  -74.6601797, ST_GeomFromEWKB('\x0101000020e6100000eb3e5b6240aa52c01a3f43eed82c4440'::bytea), '18 Witherspoon St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Subway', u'2012-08-01 16:37:52.559061+00:00', 40.3503702, -74.6601797, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7e50>, '18 Witherspoon St.', 'Princeton', 'NJ')
2012-08-01 12:37:52,736 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:52,782 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:52,828 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 34 ); args=(29, 34)
2012-08-01 12:37:52,871 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (34, 29) RETURNING "api_businesscategory"."id"; args=(34, 29)
2012-08-01 12:37:53,003 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 35 ; args=(35,)
2012-08-01 12:37:53,045 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 35) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 35)
2012-08-01 12:37:53,638 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 12:37:53,805 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Pjs Pancake House', '2012-08-01 16:37:53.759941+00:00', 40.3504652,  -74.6577561, ST_GeomFromEWKB('\x0101000020e6100000a68f0aad18aa52c06c312e0bdc2c4440'::bytea), '154 Nassau St.', 'Princeton', 'NJ') RETURNING "api_business"."id"; args=('Pjs Pancake House', u'2012-08-01 16:37:53.759941+00:00', 40.3504652, -74.6577561, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa910>, '154 Nassau St.', 'Princeton', 'NJ')
2012-08-01 12:37:53,942 [DEBUG] django.db.backends: (0.089) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:54,001 [DEBUG] django.db.backends: (0.058) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:54,050 [DEBUG] django.db.backends: (0.048) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 35 ); args=(29, 35)
2012-08-01 12:37:54,114 [DEBUG] django.db.backends: (0.063) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (35, 29) RETURNING "api_businesscategory"."id"; args=(35, 29)
2012-08-01 12:37:54,257 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 36 ; args=(36,)
2012-08-01 12:37:54,300 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 36) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 36)
2012-08-01 12:37:54,996 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 12:37:55,223 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state") VALUES ('Osteria Procaccini', '2012-08-01 16:37:55.176804+00:00', 40.3756804,  -74.6132574, ST_GeomFromEWKB('\x0101000020e6100000eb41f79b3fa752c0c5df9b4b16304440'::bytea), '4428 Rt 27 N', 'Kingston', 'NJ') RETURNING "api_business"."id"; args=('Osteria Procaccini', u'2012-08-01 16:37:55.176804+00:00', 40.3756804, -74.6132574, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103faa290>, '4428 Rt 27 N', 'Kingston', 'NJ')
2012-08-01 12:37:55,356 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:37:55,402 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:37:55,446 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 29  AND "api_businesscategory"."business_id" = 36 ); args=(29, 36)
2012-08-01 12:37:55,488 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (36, 29) RETURNING "api_businesscategory"."id"; args=(36, 29)
2012-08-01 12:37:55,615 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 37 ; args=(37,)
2012-08-01 12:37:55,657 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 37) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 37)
2012-08-01 12:37:55,907 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 12:37:55,949 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:55.907751+00:00', 'Italian', 'italian.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:55.907751+00:00', 'Italian', 'italian.png')
2012-08-01 12:37:56,077 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 12:37:56,119 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:56.078542+00:00', 'Mexican', 'mexican.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:56.078542+00:00', 'Mexican', 'mexican.png')
2012-08-01 12:37:56,245 [DEBUG] django.db.backends: (0.080) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 12:37:56,287 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:56.246092+00:00', 'Local', 'local.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:56.246092+00:00', 'Local', 'local.png')
2012-08-01 12:37:56,418 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 12:37:56,779 [DEBUG] django.db.backends: (0.361) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:56.419023+00:00', 'Authentic', 'authentic.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:56.419023+00:00', 'Authentic', 'authentic.png')
2012-08-01 12:37:56,916 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 12:37:56,960 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:56.917315+00:00', 'Buffet', 'buffet.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:56.917315+00:00', 'Buffet', 'buffet.png')
2012-08-01 12:37:57,086 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 12:37:57,128 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:57.087326+00:00', 'Value', 'value.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:57.087326+00:00', 'Value', 'value.png')
2012-08-01 12:37:57,254 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 12:37:57,296 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:57.255107+00:00', 'Chinese', 'chinese.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:57.255107+00:00', 'Chinese', 'chinese.png')
2012-08-01 12:37:57,423 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 12:37:57,465 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:57.424322+00:00', 'Sushi', 'sushi.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:57.424322+00:00', 'Sushi', 'sushi.png')
2012-08-01 12:37:57,595 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 12:37:57,640 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:57.596173+00:00', 'Fast', 'fast.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:57.596173+00:00', 'Fast', 'fast.png')
2012-08-01 12:37:57,770 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 12:37:57,811 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:57.770625+00:00', 'Cocktails', 'cocktails.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:57.770625+00:00', 'Cocktails', 'cocktails.png')
2012-08-01 12:37:57,938 [DEBUG] django.db.backends: (0.080) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 12:37:57,981 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:57.939027+00:00', 'Dessert', 'dessert.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:57.939027+00:00', 'Dessert', 'dessert.png')
2012-08-01 12:37:58,118 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 12:37:58,160 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:58.119023+00:00', 'Coffee', 'coffee.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:58.119023+00:00', 'Coffee', 'coffee.png')
2012-08-01 12:37:58,287 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 12:37:58,330 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:58.288378+00:00', 'Sandwiches', 'sandwiches.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:58.288378+00:00', 'Sandwiches', 'sandwiches.png')
2012-08-01 12:37:58,459 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 12:37:58,502 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:58.460504+00:00', 'Pizza', 'pizza.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:58.460504+00:00', 'Pizza', 'pizza.png')
2012-08-01 12:37:58,630 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 12:37:58,672 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:58.630713+00:00', 'Seafood', 'seafood.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:58.630713+00:00', 'Seafood', 'seafood.png')
2012-08-01 12:37:58,806 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 12:37:58,849 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:58.807549+00:00', 'Classy', 'classy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:58.807549+00:00', 'Classy', 'classy.png')
2012-08-01 12:37:58,973 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 12:37:59,017 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:58.974503+00:00', 'Vegetarian', 'vegetarian.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:58.974503+00:00', 'Vegetarian', 'vegetarian.png')
2012-08-01 12:37:59,142 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 12:37:59,186 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:59.143928+00:00', 'Party', 'party.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:59.143928+00:00', 'Party', 'party.png')
2012-08-01 12:37:59,310 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 12:37:59,353 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:59.311840+00:00', 'Carnivore', 'steak.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:59.311840+00:00', 'Carnivore', 'steak.png')
2012-08-01 12:37:59,479 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 12:37:59,521 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:59.480029+00:00', 'Wine', 'wine.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:59.480029+00:00', 'Wine', 'wine.png')
2012-08-01 12:37:59,648 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 12:37:59,693 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:59.649424+00:00', 'Healthy', 'healthy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:59.649424+00:00', 'Healthy', 'healthy.png')
2012-08-01 12:37:59,818 [DEBUG] django.db.backends: (0.080) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 12:37:59,860 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:59.819211+00:00', 'American', 'american.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:59.819211+00:00', 'American', 'american.png')
2012-08-01 12:37:59,986 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 12:38:00,029 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:37:59.987267+00:00', 'Ice Cream', 'icecream.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:37:59.987267+00:00', 'Ice Cream', 'icecream.png')
2012-08-01 12:38:00,155 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 12:38:00,198 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:38:00.156096+00:00', 'Spicy', 'spicy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:38:00.156096+00:00', 'Spicy', 'spicy.png')
2012-08-01 12:38:00,331 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 12:38:00,373 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:38:00.331626+00:00', 'Bakery', 'bakery.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:38:00.331626+00:00', 'Bakery', 'bakery.png')
2012-08-01 12:38:00,500 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 12:38:00,542 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:38:00.500996+00:00', 'Sweets', 'sweets.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:38:00.500996+00:00', 'Sweets', 'sweets.png')
2012-08-01 12:38:00,704 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 12:38:00,746 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:38:00.705205+00:00', 'WiFi', 'wifi.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:38:00.705205+00:00', 'WiFi', 'wifi.png')
2012-08-01 12:38:00,879 [DEBUG] django.db.backends: (0.086) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:38:00,924 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 12:38:00,971 [DEBUG] django.db.backends: (0.046) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 16:38:00.925825+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 16:38:00.925825+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:01,098 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 16:38:01.015046+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 16:38:01.015046+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:01,230 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 16:38:01.145770+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 16:38:01.145770+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:01,356 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 16:38:01.272985+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 16:38:01.272985+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:01,486 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 16:38:01.400532+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 16:38:01.400532+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:01,682 [DEBUG] django.db.backends: (0.110) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 16:38:01.572185+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 16:38:01.572185+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,181 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 16:38:02.096681+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 16:38:02.096681+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,311 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 16:38:02.225652+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 16:38:02.225652+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,440 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 16:38:02.357233+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 16:38:02.357233+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,572 [DEBUG] django.db.backends: (0.088) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 16:38:02.484590+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 16:38:02.484590+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,704 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 16:38:02.617522+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 16:38:02.617522+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,833 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 16:38:02.748818+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 16:38:02.748818+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:02,961 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 16:38:02.876298+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 16:38:02.876298+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,088 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 16:38:03.004388+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 16:38:03.004388+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,219 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 16:38:03.134638+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 16:38:03.134638+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,351 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 16:38:03.267522+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 16:38:03.267522+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,482 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 16:38:03.397384+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 16:38:03.397384+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,612 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 16:38:03.527411+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 16:38:03.527411+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,765 [DEBUG] django.db.backends: (0.109) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 16:38:03.656875+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 16:38:03.656875+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:03,892 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 16:38:03.808218+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 16:38:03.808218+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,022 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 16:38:03.938681+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 16:38:03.938681+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,149 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 16:38:04.065786+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 16:38:04.065786+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,280 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 16:38:04.192963+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 16:38:04.192963+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,409 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 16:38:04.324909+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 16:38:04.324909+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,537 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 16:38:04.453918+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 16:38:04.453918+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,692 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 16:38:04.605142+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 16:38:04.605142+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,820 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 16:38:04.737447+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 16:38:04.737447+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:04,947 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 16:38:04.864327+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 16:38:04.864327+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:38:14,751 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:38:14,751 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:38:14,883 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:38:15,215 [DEBUG] django.db.backends: (0.116) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 12:38:15,288 [DEBUG] django.db.backends: (0.071) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fa7ed0>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f97090>, 4828.032)
2012-08-01 12:38:15,344 [DEBUG] django.db.backends: (0.054) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 21 ); args=(True, 21)
2012-08-01 12:38:15,394 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:38:15,437 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:38:15,479 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:38:15,556 [DEBUG] django.db.backends: (0.075) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:38:15,620 [DEBUG] django.db.backends: (0.064) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 21 ; args=(21,)
2012-08-01 12:38:15,664 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 21 ); args=(1, 21)
2012-08-01 12:38:15,707 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 21 ; args=(21,)
2012-08-01 12:38:15,757 [DEBUG] django.db.backends: (0.049) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:38:15,802 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 22  AND "api_rating"."rating" BETWEEN 1 and 5); args=(22, 1, 5)
2012-08-01 12:38:15,855 [DEBUG] django.db.backends: (0.051) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:38:16,065 [DEBUG] django.db.backends: (0.103) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:38:16,110 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:38:16,164 [DEBUG] django.db.backends: (0.052) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:38:16,209 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" ORDER BY "wiki_page"."name" ASC LIMIT 21; args=()
2012-08-01 12:38:41,233 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:38:58,077 [DEBUG] django.db.backends: (0.095) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:38:58,126 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:38:58,127 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:38:58,257 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:38:58,433 [DEBUG] django.db.backends: (0.047) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 12:38:58,497 [DEBUG] django.db.backends: (0.062) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f39790>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f39c50>, 4828.032)
2012-08-01 12:38:58,544 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 21 ); args=(True, 21)
2012-08-01 12:38:58,591 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:38:58,636 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:38:58,683 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:38:58,729 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:38:58,777 [DEBUG] django.db.backends: (0.047) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 21 ; args=(21,)
2012-08-01 12:38:58,824 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 21 ); args=(1, 21)
2012-08-01 12:38:58,871 [DEBUG] django.db.backends: (0.046) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 21 ; args=(21,)
2012-08-01 12:38:58,919 [DEBUG] django.db.backends: (0.046) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:38:58,970 [DEBUG] django.db.backends: (0.047) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 22  AND "api_rating"."rating" BETWEEN 1 and 5); args=(22, 1, 5)
2012-08-01 12:38:59,016 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:38:59,064 [DEBUG] django.db.backends: (0.046) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 22 ; args=(22,)
2012-08-01 12:39:15,274 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:39:19,715 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:39:19,762 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:39:19,763 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:39:19,904 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:39:20,077 [DEBUG] django.db.backends: (0.048) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 12:39:20,139 [DEBUG] django.db.backends: (0.060) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f78790>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f78c50>, 4828.032)
2012-08-01 12:39:20,182 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 21 ); args=(True, 21)
2012-08-01 12:39:20,227 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:20,270 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:20,314 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:20,357 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:20,404 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 21 ; args=(21,)
2012-08-01 12:39:20,448 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 21 ); args=(1, 21)
2012-08-01 12:39:20,492 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 21 ; args=(21,)
2012-08-01 12:39:20,535 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:20,580 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 22  AND "api_rating"."rating" BETWEEN 1 and 5); args=(22, 1, 5)
2012-08-01 12:39:20,624 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:20,667 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 22 ; args=(22,)
2012-08-01 12:39:20,710 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:20,756 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 21 ; args=(21,)
2012-08-01 12:39:20,800 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 24 ); args=(True, 24)
2012-08-01 12:39:20,843 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:20,886 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:20,929 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:20,972 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:21,016 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 24 ; args=(24,)
2012-08-01 12:39:21,060 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 24 ); args=(1, 24)
2012-08-01 12:39:21,103 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 24 ; args=(24,)
2012-08-01 12:39:21,148 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:21,192 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 25  AND "api_rating"."rating" BETWEEN 1 and 5); args=(25, 1, 5)
2012-08-01 12:39:21,234 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:21,279 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 25 ; args=(25,)
2012-08-01 12:39:21,322 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:21,368 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 24 ; args=(24,)
2012-08-01 12:39:21,411 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 28 ); args=(True, 28)
2012-08-01 12:39:21,454 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:21,498 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:21,541 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:21,586 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:21,631 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 28 ; args=(28,)
2012-08-01 12:39:21,674 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 28 ); args=(1, 28)
2012-08-01 12:39:21,718 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 28 ; args=(28,)
2012-08-01 12:39:21,762 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:21,806 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 29  AND "api_rating"."rating" BETWEEN 1 and 5); args=(29, 1, 5)
2012-08-01 12:39:21,849 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:21,892 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 29 ; args=(29,)
2012-08-01 12:39:21,934 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:21,979 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 28 ; args=(28,)
2012-08-01 12:39:22,021 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 34 ); args=(True, 34)
2012-08-01 12:39:22,064 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:22,108 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:22,151 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:22,194 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:22,242 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 34 ; args=(34,)
2012-08-01 12:39:22,285 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 34 ); args=(1, 34)
2012-08-01 12:39:22,328 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 34 ; args=(34,)
2012-08-01 12:39:22,370 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:22,416 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 35  AND "api_rating"."rating" BETWEEN 1 and 5); args=(35, 1, 5)
2012-08-01 12:39:22,459 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:22,502 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 35 ; args=(35,)
2012-08-01 12:39:22,548 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:22,593 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 34 ; args=(34,)
2012-08-01 12:39:22,636 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 29 ); args=(True, 29)
2012-08-01 12:39:22,678 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:22,722 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:22,766 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:22,809 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:22,853 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 29 ; args=(29,)
2012-08-01 12:39:22,898 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 29 ); args=(1, 29)
2012-08-01 12:39:22,943 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 29 ; args=(29,)
2012-08-01 12:39:22,986 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:23,032 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 30  AND "api_rating"."rating" BETWEEN 1 and 5); args=(30, 1, 5)
2012-08-01 12:39:23,076 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:23,120 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 30 ; args=(30,)
2012-08-01 12:39:23,163 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:23,209 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 29 ; args=(29,)
2012-08-01 12:39:23,253 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 27 ); args=(True, 27)
2012-08-01 12:39:23,296 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:23,338 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:23,383 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:23,425 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:23,471 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 27 ; args=(27,)
2012-08-01 12:39:23,515 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 27 ); args=(1, 27)
2012-08-01 12:39:23,557 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 27 ; args=(27,)
2012-08-01 12:39:23,600 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:23,646 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 28  AND "api_rating"."rating" BETWEEN 1 and 5); args=(28, 1, 5)
2012-08-01 12:39:23,689 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:23,734 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 28 ; args=(28,)
2012-08-01 12:39:23,780 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:23,826 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 27 ; args=(27,)
2012-08-01 12:39:23,868 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 26 ); args=(True, 26)
2012-08-01 12:39:23,913 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:23,956 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:24,001 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:24,044 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:24,089 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 26 ; args=(26,)
2012-08-01 12:39:24,132 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 26 ); args=(1, 26)
2012-08-01 12:39:24,175 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 26 ; args=(26,)
2012-08-01 12:39:24,219 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:24,265 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 27  AND "api_rating"."rating" BETWEEN 1 and 5); args=(27, 1, 5)
2012-08-01 12:39:24,309 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:24,353 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 27 ; args=(27,)
2012-08-01 12:39:24,395 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:24,442 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 26 ; args=(26,)
2012-08-01 12:39:24,485 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 23 ); args=(True, 23)
2012-08-01 12:39:24,528 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:24,571 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:24,620 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:24,673 [DEBUG] django.db.backends: (0.051) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:24,718 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 23 ; args=(23,)
2012-08-01 12:39:24,774 [DEBUG] django.db.backends: (0.055) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 23 ); args=(1, 23)
2012-08-01 12:39:24,818 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 23 ; args=(23,)
2012-08-01 12:39:24,861 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:24,913 [DEBUG] django.db.backends: (0.050) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 24  AND "api_rating"."rating" BETWEEN 1 and 5); args=(24, 1, 5)
2012-08-01 12:39:24,956 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:24,998 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 24 ; args=(24,)
2012-08-01 12:39:25,042 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:25,086 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 23 ; args=(23,)
2012-08-01 12:39:25,129 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 35 ); args=(True, 35)
2012-08-01 12:39:25,172 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:25,217 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:25,263 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:25,307 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:25,356 [DEBUG] django.db.backends: (0.048) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 35 ; args=(35,)
2012-08-01 12:39:25,408 [DEBUG] django.db.backends: (0.050) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 35 ); args=(1, 35)
2012-08-01 12:39:25,454 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 35 ; args=(35,)
2012-08-01 12:39:25,498 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:25,546 [DEBUG] django.db.backends: (0.046) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 36  AND "api_rating"."rating" BETWEEN 1 and 5); args=(36, 1, 5)
2012-08-01 12:39:25,589 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:25,633 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 36 ; args=(36,)
2012-08-01 12:39:25,681 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:25,727 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 35 ; args=(35,)
2012-08-01 12:39:25,771 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 22 ); args=(True, 22)
2012-08-01 12:39:25,871 [DEBUG] django.db.backends: (0.099) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:25,914 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:25,956 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:25,999 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:26,043 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 22 ; args=(22,)
2012-08-01 12:39:26,086 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 22 ); args=(1, 22)
2012-08-01 12:39:26,130 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 22 ; args=(22,)
2012-08-01 12:39:26,172 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:26,218 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 23  AND "api_rating"."rating" BETWEEN 1 and 5); args=(23, 1, 5)
2012-08-01 12:39:26,263 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:26,307 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 23 ; args=(23,)
2012-08-01 12:39:26,351 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:26,395 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 22 ; args=(22,)
2012-08-01 12:39:26,437 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 31 ); args=(True, 31)
2012-08-01 12:39:26,479 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:26,522 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:26,567 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:26,609 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:26,654 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 31 ; args=(31,)
2012-08-01 12:39:26,697 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 31 ); args=(1, 31)
2012-08-01 12:39:26,740 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 31 ; args=(31,)
2012-08-01 12:39:26,784 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:26,829 [DEBUG] django.db.backends: (0.045) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 32  AND "api_rating"."rating" BETWEEN 1 and 5); args=(32, 1, 5)
2012-08-01 12:39:26,872 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:26,916 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 32 ; args=(32,)
2012-08-01 12:39:26,959 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:27,002 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 31 ; args=(31,)
2012-08-01 12:39:27,045 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 25 ); args=(True, 25)
2012-08-01 12:39:27,088 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:27,130 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:27,173 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:27,216 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:27,260 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 25 ; args=(25,)
2012-08-01 12:39:27,303 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 25 ); args=(1, 25)
2012-08-01 12:39:27,346 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 25 ; args=(25,)
2012-08-01 12:39:27,392 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:27,439 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 26  AND "api_rating"."rating" BETWEEN 1 and 5); args=(26, 1, 5)
2012-08-01 12:39:27,482 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:27,527 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 26 ; args=(26,)
2012-08-01 12:39:27,571 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:28,216 [DEBUG] django.db.backends: (0.644) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 25 ; args=(25,)
2012-08-01 12:39:28,259 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 30 ); args=(True, 30)
2012-08-01 12:39:28,303 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:28,612 [DEBUG] django.db.backends: (0.308) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:28,655 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:28,698 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:28,743 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 30 ; args=(30,)
2012-08-01 12:39:28,788 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 30 ); args=(1, 30)
2012-08-01 12:39:29,115 [DEBUG] django.db.backends: (0.326) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 30 ; args=(30,)
2012-08-01 12:39:29,412 [DEBUG] django.db.backends: (0.296) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:29,459 [DEBUG] django.db.backends: (0.045) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 31  AND "api_rating"."rating" BETWEEN 1 and 5); args=(31, 1, 5)
2012-08-01 12:39:29,502 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:29,545 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 31 ; args=(31,)
2012-08-01 12:39:29,588 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:29,632 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 30 ; args=(30,)
2012-08-01 12:39:29,674 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 33 ); args=(True, 33)
2012-08-01 12:39:29,717 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:29,759 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:29,803 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:29,846 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:29,893 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 33 ; args=(33,)
2012-08-01 12:39:29,936 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 33 ); args=(1, 33)
2012-08-01 12:39:29,979 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 33 ; args=(33,)
2012-08-01 12:39:30,022 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:30,066 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 34  AND "api_rating"."rating" BETWEEN 1 and 5); args=(34, 1, 5)
2012-08-01 12:39:30,109 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:30,152 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 34 ; args=(34,)
2012-08-01 12:39:30,196 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:30,240 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 33 ; args=(33,)
2012-08-01 12:39:30,282 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 32 ); args=(True, 32)
2012-08-01 12:39:30,324 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:30,366 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:30,409 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:30,454 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:30,502 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 32 ; args=(32,)
2012-08-01 12:39:30,545 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 32 ); args=(1, 32)
2012-08-01 12:39:30,920 [DEBUG] django.db.backends: (0.374) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 32 ; args=(32,)
2012-08-01 12:39:30,964 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:31,008 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 33  AND "api_rating"."rating" BETWEEN 1 and 5); args=(33, 1, 5)
2012-08-01 12:39:31,050 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:31,092 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 33 ; args=(33,)
2012-08-01 12:39:31,134 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:31,179 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 32 ; args=(32,)
2012-08-01 12:39:31,221 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 19 ); args=(True, 19)
2012-08-01 12:39:31,263 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:31,305 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:31,348 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:31,400 [DEBUG] django.db.backends: (0.052) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:31,452 [DEBUG] django.db.backends: (0.051) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 19 ; args=(19,)
2012-08-01 12:39:31,495 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 19 ); args=(1, 19)
2012-08-01 12:39:31,539 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 19 ; args=(19,)
2012-08-01 12:39:31,581 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:31,625 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 20  AND "api_rating"."rating" BETWEEN 1 and 5); args=(20, 1, 5)
2012-08-01 12:39:31,668 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:31,710 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 20 ; args=(20,)
2012-08-01 12:39:31,753 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:31,797 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 19 ; args=(19,)
2012-08-01 12:39:31,839 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 20 ); args=(True, 20)
2012-08-01 12:39:31,882 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:31,926 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:39:31,969 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:39:32,012 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:39:32,058 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 20 ; args=(20,)
2012-08-01 12:39:32,100 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 20 ); args=(1, 20)
2012-08-01 12:39:32,142 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 20 ; args=(20,)
2012-08-01 12:39:32,187 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 29 ; args=(29,)
2012-08-01 12:39:32,231 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 21  AND "api_rating"."rating" BETWEEN 1 and 5); args=(21, 1, 5)
2012-08-01 12:39:32,273 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:39:32,316 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 21 ; args=(21,)
2012-08-01 12:39:32,357 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 29  AND "api_usersubscription"."user_id" = 1 ); args=(29, 1)
2012-08-01 12:39:32,401 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 20 ; args=(20,)
2012-08-01 12:39:49,308 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:42:44,147 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:42:44,589 [DEBUG] django.db.backends: (0.088) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2012-08-01 12:42:44,673 [DEBUG] django.db.backends: (0.081) CREATE TABLE "auth_permission" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
2012-08-01 12:42:44,742 [DEBUG] django.db.backends: (0.069) CREATE TABLE "auth_group_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("group_id", "permission_id")
)
;; args=()
2012-08-01 12:42:44,809 [DEBUG] django.db.backends: (0.066) CREATE TABLE "auth_group" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
2012-08-01 12:42:44,852 [DEBUG] django.db.backends: (0.043) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "group_id_refs_id_3cea63fe" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:42:44,921 [DEBUG] django.db.backends: (0.069) CREATE TABLE "auth_user_user_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "permission_id")
)
;; args=()
2012-08-01 12:42:44,991 [DEBUG] django.db.backends: (0.068) CREATE TABLE "auth_user_groups" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "group_id")
)
;; args=()
2012-08-01 12:42:45,061 [DEBUG] django.db.backends: (0.069) CREATE TABLE "auth_user" (
    "id" serial NOT NULL PRIMARY KEY,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "password" varchar(128) NOT NULL,
    "is_staff" boolean NOT NULL,
    "is_active" boolean NOT NULL,
    "is_superuser" boolean NOT NULL,
    "last_login" timestamp with time zone NOT NULL,
    "date_joined" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:42:45,105 [DEBUG] django.db.backends: (0.043) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "user_id_refs_id_f2045483" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:42:45,148 [DEBUG] django.db.backends: (0.043) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "user_id_refs_id_831107f1" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:42:45,213 [DEBUG] django.db.backends: (0.065) CREATE TABLE "django_content_type" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
2012-08-01 12:42:45,256 [DEBUG] django.db.backends: (0.042) ALTER TABLE "auth_permission" ADD CONSTRAINT "content_type_id_refs_id_728de91f" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:42:45,320 [DEBUG] django.db.backends: (0.064) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:42:45,373 [DEBUG] django.db.backends: (0.053) CREATE TABLE "django_site" (
    "id" serial NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
2012-08-01 12:42:45,441 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_business" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "lat" double precision NOT NULL,
    "lon" double precision NOT NULL,
    "address" varchar(250) NOT NULL,
    "city" varchar(100) NOT NULL,
    "state" varchar(2) NOT NULL,
    "phone" varchar(20) NOT NULL,
    "zipcode" varchar(2) NOT NULL
)
;; args=()
2012-08-01 12:42:45,514 [DEBUG] django.db.backends: (0.072) CREATE TABLE "api_photo" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "image" varchar(100) NOT NULL,
    "image_medium" varchar(100) NOT NULL,
    "image_thumb" varchar(100) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "title" varchar(300) NOT NULL,
    "caption" text NOT NULL
)
;; args=()
2012-08-01 12:42:45,581 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_tag" (
    "id" serial NOT NULL PRIMARY KEY,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "descr" text NOT NULL,
    "icon" text NOT NULL
)
;; args=()
2012-08-01 12:42:45,638 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_businesscategory" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:45,695 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_usersubscription" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:45,748 [DEBUG] django.db.backends: (0.052) CREATE TABLE "api_device" (
    "id" serial NOT NULL PRIMARY KEY,
    "os" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    "manufacturer" varchar(100) NOT NULL,
    "deviceID" integer NOT NULL
)
;; args=()
2012-08-01 12:42:45,818 [DEBUG] django.db.backends: (0.070) CREATE TABLE "api_allsortzuser" (
    "id" serial NOT NULL PRIMARY KEY,
    "distance_threshold" integer NOT NULL,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "metric" boolean NOT NULL,
    "device_id" integer NOT NULL REFERENCES "api_device" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:45,889 [DEBUG] django.db.backends: (0.070) CREATE TABLE "api_offer" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "restricitons" varchar(1000) NOT NULL,
    "created_on" timestamp with time zone NOT NULL,
    "valid_from" timestamp with time zone NOT NULL,
    "valid_until" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:42:45,946 [DEBUG] django.db.backends: (0.057) CREATE TABLE "api_businessdeal" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "cost" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 12:42:46,002 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_businessaction" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "reward_deal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "reward_value" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 12:42:46,062 [DEBUG] django.db.backends: (0.060) CREATE TABLE "api_asuserdeal" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businessdeal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "received_on" timestamp with time zone NOT NULL,
    "used_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:42:46,135 [DEBUG] django.db.backends: (0.072) CREATE TABLE "api_asuseraction" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "action_id" integer NOT NULL REFERENCES "api_businessaction" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "completed_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:42:46,207 [DEBUG] django.db.backends: (0.071) CREATE TABLE "api_discussion" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "reply_to_id" integer,
    "content" text NOT NULL
)
;; args=()
2012-08-01 12:42:46,251 [DEBUG] django.db.backends: (0.044) ALTER TABLE "api_discussion" ADD CONSTRAINT "reply_to_id_refs_id_7f5f35a5" FOREIGN KEY ("reply_to_id") REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:42:46,306 [DEBUG] django.db.backends: (0.054) CREATE TABLE "api_categorydiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businesstag_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,362 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_businessdiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,418 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_photodiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,473 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_rating" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "rating" integer NOT NULL
)
;; args=()
2012-08-01 12:42:46,530 [DEBUG] django.db.backends: (0.057) CREATE TABLE "api_discussionrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "discussion_id" integer NOT NULL REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,583 [DEBUG] django.db.backends: (0.052) CREATE TABLE "api_photorating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,638 [DEBUG] django.db.backends: (0.054) CREATE TABLE "api_categoryrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,694 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_businessrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:46,758 [DEBUG] django.db.backends: (0.064) CREATE TABLE "recommendation_recommendation" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "username_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "recommendation" integer NOT NULL
)
;; args=()
2012-08-01 12:42:46,814 [DEBUG] django.db.backends: (0.056) CREATE TABLE "recommendation_businessfactor" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "latentFactor" integer NOT NULL,
    "relation" double precision NOT NULL
)
;; args=()
2012-08-01 12:42:46,870 [DEBUG] django.db.backends: (0.055) CREATE TABLE "recommendation_userfactor" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "latentFactor" integer NOT NULL,
    "relation" double precision NOT NULL
)
;; args=()
2012-08-01 12:42:46,938 [DEBUG] django.db.backends: (0.068) CREATE TABLE "registration_registrationprofile" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "activation_key" varchar(40) NOT NULL
)
;; args=()
2012-08-01 12:42:47,010 [DEBUG] django.db.backends: (0.070) CREATE TABLE "queries_query" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "proximity" integer NOT NULL,
    "score" integer NOT NULL,
    "price" integer NOT NULL,
    "value" integer NOT NULL,
    "networked" boolean NOT NULL,
    "deal" boolean NOT NULL,
    "visited" boolean NOT NULL,
    "unvisited" boolean NOT NULL,
    "text" varchar(250) NOT NULL
)
;; args=()
2012-08-01 12:42:47,066 [DEBUG] django.db.backends: (0.055) CREATE TABLE "queries_querytag" (
    "id" serial NOT NULL PRIMARY KEY,
    "query_id" integer NOT NULL REFERENCES "queries_query" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:47,127 [DEBUG] django.db.backends: (0.060) CREATE TABLE "queries_userqueryrelation" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "query_id" integer NOT NULL REFERENCES "queries_query" ("id") DEFERRABLE INITIALLY DEFERRED,
    "favorite" boolean NOT NULL
)
;; args=()
2012-08-01 12:42:47,193 [DEBUG] django.db.backends: (0.066) CREATE TABLE "wiki_page" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "content" text NOT NULL,
    "rendered" text NOT NULL,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:42:47,266 [DEBUG] django.db.backends: (0.073) CREATE TABLE "django_admin_log" (
    "id" serial NOT NULL PRIMARY KEY,
    "action_time" timestamp with time zone NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "content_type_id" integer REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED,
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint CHECK ("action_flag" >= 0) NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
2012-08-01 12:42:47,398 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', 'auth')
2012-08-01 12:42:47,439 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:47,482 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('permission', 'auth', 'permission') RETURNING "django_content_type"."id"; args=(u'permission', 'auth', 'permission')
2012-08-01 12:42:47,610 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', 'auth')
2012-08-01 12:42:47,650 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:47,692 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('group', 'auth', 'group') RETURNING "django_content_type"."id"; args=(u'group', 'auth', 'group')
2012-08-01 12:42:47,822 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', 'auth')
2012-08-01 12:42:47,863 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:47,905 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user', 'auth', 'user') RETURNING "django_content_type"."id"; args=(u'user', 'auth', 'user')
2012-08-01 12:42:48,040 [DEBUG] django.db.backends: (0.087) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2012-08-01 12:42:48,087 [DEBUG] django.db.backends: (0.045) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 1, 'add_permission'), ('Can change permission', 1, 'change_permission'), ('Can delete permission', 1, 'delete_permission'), ('Can add group', 2, 'add_group'), ('Can change group', 2, 'change_group'), ('Can delete group', 2, 'delete_group'), ('Can add user', 3, 'add_user'), ('Can change user', 3, 'change_user'), ('Can delete user', 3, 'delete_user'); args=(u'Can add permission', 1, u'add_permission', u'Can change permission', 1, u'change_permission', u'Can delete permission', 1, u'delete_permission', u'Can add group', 2, u'add_group', u'Can change group', 2, u'change_group', u'Can delete group', 2, u'delete_group', u'Can add user', 3, u'add_user', u'Can change user', 3, u'change_user', u'Can delete user', 3, u'delete_user')
2012-08-01 12:42:49,576 [DEBUG] django.db.backends: (0.085) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:42:50,447 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:42:53,409 [DEBUG] django.db.backends: (0.047) INSERT INTO "auth_user" ("username", "first_name", "last_name", "email", "password", "is_staff", "is_active", "is_superuser", "last_login", "date_joined") VALUES ('matt', '', '', 'test@t.com', 'pbkdf2_sha256$10000$5KSGdvmmYJMR$hARoxNbxQpjwuybRQOJEaoqhQmKBwqvM50esEY3ZrUI=', false, true, false, '2012-08-01 16:42:53.218762+00:00', '2012-08-01 16:42:53.218762+00:00') RETURNING "auth_user"."id"; args=('matt', '', '', 'test@t.com', 'pbkdf2_sha256$10000$5KSGdvmmYJMR$hARoxNbxQpjwuybRQOJEaoqhQmKBwqvM50esEY3ZrUI=', False, True, False, u'2012-08-01 16:42:53.218762+00:00', u'2012-08-01 16:42:53.218762+00:00')
2012-08-01 12:42:53,537 [DEBUG] django.db.backends: (0.080) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
2012-08-01 12:42:53,583 [DEBUG] django.db.backends: (0.044) UPDATE "auth_user" SET "username" = 'matt', "first_name" = '', "last_name" = '', "email" = 'test@t.com', "password" = 'pbkdf2_sha256$10000$5KSGdvmmYJMR$hARoxNbxQpjwuybRQOJEaoqhQmKBwqvM50esEY3ZrUI=', "is_staff" = true, "is_active" = true, "is_superuser" = true, "last_login" = '2012-08-01 16:42:53.218762+00:00', "date_joined" = '2012-08-01 16:42:53.218762+00:00' WHERE "auth_user"."id" = 1 ; args=('matt', '', '', 'test@t.com', 'pbkdf2_sha256$10000$5KSGdvmmYJMR$hARoxNbxQpjwuybRQOJEaoqhQmKBwqvM50esEY3ZrUI=', True, True, True, u'2012-08-01 16:42:53.218762+00:00', u'2012-08-01 16:42:53.218762+00:00', 1)
2012-08-01 12:42:53,711 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=('auth',)
2012-08-01 12:42:53,755 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', 'contenttypes')
2012-08-01 12:42:53,795 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:53,838 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('content type', 'contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=(u'content type', 'contenttypes', 'contenttype')
2012-08-01 12:42:53,973 [DEBUG] django.db.backends: (0.085) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2012-08-01 12:42:54,017 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'); args=(u'Can add content type', 4, u'add_contenttype', u'Can change content type', 4, u'change_contenttype', u'Can delete content type', 4, u'delete_contenttype')
2012-08-01 12:42:54,145 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=('contenttypes',)
2012-08-01 12:42:54,188 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', 'sessions')
2012-08-01 12:42:54,229 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:54,271 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('session', 'sessions', 'session') RETURNING "django_content_type"."id"; args=(u'session', 'sessions', 'session')
2012-08-01 12:42:54,403 [DEBUG] django.db.backends: (0.085) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2012-08-01 12:42:54,447 [DEBUG] django.db.backends: (0.043) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'); args=(u'Can add session', 5, u'add_session', u'Can change session', 5, u'change_session', u'Can delete session', 5, u'delete_session')
2012-08-01 12:42:54,574 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=('sessions',)
2012-08-01 12:42:54,619 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', 'sites')
2012-08-01 12:42:54,660 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:54,703 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('site', 'sites', 'site') RETURNING "django_content_type"."id"; args=(u'site', 'sites', 'site')
2012-08-01 12:42:54,835 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2012-08-01 12:42:54,878 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add site', 6, 'add_site'), ('Can change site', 6, 'change_site'), ('Can delete site', 6, 'delete_site'); args=(u'Can add site', 6, u'add_site', u'Can change site', 6, u'change_site', u'Can delete site', 6, u'delete_site')
2012-08-01 12:42:55,005 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=('sites',)
2012-08-01 12:42:55,048 [DEBUG] django.db.backends: (0.041) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
2012-08-01 12:42:55,090 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_site" ("id", "domain", "name") VALUES (1, 'example.com', 'example.com'); args=(1, 'example.com', 'example.com')
2012-08-01 12:42:55,218 [DEBUG] django.db.backends: (0.083) SELECT setval(pg_get_serial_sequence('"django_site"','id'), coalesce(max("id"), 1), max("id") IS NOT null) FROM "django_site";; args=()
2012-08-01 12:42:55,263 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'business'  AND "django_content_type"."app_label" = 'api' ); args=('business', 'api')
2012-08-01 12:42:55,304 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:55,347 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business', 'api', 'business') RETURNING "django_content_type"."id"; args=(u'business', 'api', 'business')
2012-08-01 12:42:55,474 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photo'  AND "django_content_type"."app_label" = 'api' ); args=('photo', 'api')
2012-08-01 12:42:55,517 [DEBUG] django.db.backends: (0.042) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:55,558 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo', 'api', 'photo') RETURNING "django_content_type"."id"; args=(u'photo', 'api', 'photo')
2012-08-01 12:42:55,687 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tag'  AND "django_content_type"."app_label" = 'api' ); args=('tag', 'api')
2012-08-01 12:42:55,728 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:55,772 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tag', 'api', 'tag') RETURNING "django_content_type"."id"; args=(u'tag', 'api', 'tag')
2012-08-01 12:42:55,901 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businesscategory'  AND "django_content_type"."app_label" = 'api' ); args=('businesscategory', 'api')
2012-08-01 12:42:55,943 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:55,985 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business category', 'api', 'businesscategory') RETURNING "django_content_type"."id"; args=(u'business category', 'api', 'businesscategory')
2012-08-01 12:42:56,115 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'usersubscription'  AND "django_content_type"."app_label" = 'api' ); args=('usersubscription', 'api')
2012-08-01 12:42:56,157 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:56,199 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user subscription', 'api', 'usersubscription') RETURNING "django_content_type"."id"; args=(u'user subscription', 'api', 'usersubscription')
2012-08-01 12:42:56,328 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'device'  AND "django_content_type"."app_label" = 'api' ); args=('device', 'api')
2012-08-01 12:42:56,380 [DEBUG] django.db.backends: (0.052) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:56,423 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('device', 'api', 'device') RETURNING "django_content_type"."id"; args=(u'device', 'api', 'device')
2012-08-01 12:42:56,549 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'allsortzuser'  AND "django_content_type"."app_label" = 'api' ); args=('allsortzuser', 'api')
2012-08-01 12:42:56,591 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:56,633 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('allsortz user', 'api', 'allsortzuser') RETURNING "django_content_type"."id"; args=(u'allsortz user', 'api', 'allsortzuser')
2012-08-01 12:42:56,773 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'offer'  AND "django_content_type"."app_label" = 'api' ); args=('offer', 'api')
2012-08-01 12:42:56,814 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:56,861 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('offer', 'api', 'offer') RETURNING "django_content_type"."id"; args=(u'offer', 'api', 'offer')
2012-08-01 12:42:56,990 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdeal'  AND "django_content_type"."app_label" = 'api' ); args=('businessdeal', 'api')
2012-08-01 12:42:57,032 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:57,074 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business deal', 'api', 'businessdeal') RETURNING "django_content_type"."id"; args=(u'business deal', 'api', 'businessdeal')
2012-08-01 12:42:57,202 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessaction'  AND "django_content_type"."app_label" = 'api' ); args=('businessaction', 'api')
2012-08-01 12:42:57,242 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:57,284 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business action', 'api', 'businessaction') RETURNING "django_content_type"."id"; args=(u'business action', 'api', 'businessaction')
2012-08-01 12:42:57,415 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuserdeal'  AND "django_content_type"."app_label" = 'api' ); args=('asuserdeal', 'api')
2012-08-01 12:42:57,456 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:57,498 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user deal', 'api', 'asuserdeal') RETURNING "django_content_type"."id"; args=(u'as user deal', 'api', 'asuserdeal')
2012-08-01 12:42:57,624 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuseraction'  AND "django_content_type"."app_label" = 'api' ); args=('asuseraction', 'api')
2012-08-01 12:42:57,666 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:57,709 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user action', 'api', 'asuseraction') RETURNING "django_content_type"."id"; args=(u'as user action', 'api', 'asuseraction')
2012-08-01 12:42:57,835 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussion'  AND "django_content_type"."app_label" = 'api' ); args=('discussion', 'api')
2012-08-01 12:42:57,875 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:57,917 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion', 'api', 'discussion') RETURNING "django_content_type"."id"; args=(u'discussion', 'api', 'discussion')
2012-08-01 12:42:58,047 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categorydiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('categorydiscussion', 'api')
2012-08-01 12:42:58,087 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:58,129 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category discussion', 'api', 'categorydiscussion') RETURNING "django_content_type"."id"; args=(u'category discussion', 'api', 'categorydiscussion')
2012-08-01 12:42:58,256 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('businessdiscussion', 'api')
2012-08-01 12:42:58,297 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:58,339 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business discussion', 'api', 'businessdiscussion') RETURNING "django_content_type"."id"; args=(u'business discussion', 'api', 'businessdiscussion')
2012-08-01 12:42:58,467 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photodiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('photodiscussion', 'api')
2012-08-01 12:42:58,507 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:58,549 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo discussion', 'api', 'photodiscussion') RETURNING "django_content_type"."id"; args=(u'photo discussion', 'api', 'photodiscussion')
2012-08-01 12:42:58,680 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'rating'  AND "django_content_type"."app_label" = 'api' ); args=('rating', 'api')
2012-08-01 12:42:58,720 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:58,762 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('rating', 'api', 'rating') RETURNING "django_content_type"."id"; args=(u'rating', 'api', 'rating')
2012-08-01 12:42:58,890 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussionrating'  AND "django_content_type"."app_label" = 'api' ); args=('discussionrating', 'api')
2012-08-01 12:42:58,930 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:58,972 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion rating', 'api', 'discussionrating') RETURNING "django_content_type"."id"; args=(u'discussion rating', 'api', 'discussionrating')
2012-08-01 12:42:59,100 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photorating'  AND "django_content_type"."app_label" = 'api' ); args=('photorating', 'api')
2012-08-01 12:42:59,140 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:59,181 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo rating', 'api', 'photorating') RETURNING "django_content_type"."id"; args=(u'photo rating', 'api', 'photorating')
2012-08-01 12:42:59,310 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categoryrating'  AND "django_content_type"."app_label" = 'api' ); args=('categoryrating', 'api')
2012-08-01 12:42:59,350 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:59,392 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category rating', 'api', 'categoryrating') RETURNING "django_content_type"."id"; args=(u'category rating', 'api', 'categoryrating')
2012-08-01 12:42:59,515 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessrating'  AND "django_content_type"."app_label" = 'api' ); args=('businessrating', 'api')
2012-08-01 12:42:59,555 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:42:59,597 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business rating', 'api', 'businessrating') RETURNING "django_content_type"."id"; args=(u'business rating', 'api', 'businessrating')
2012-08-01 12:42:59,727 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27)
2012-08-01 12:42:59,818 [DEBUG] django.db.backends: (0.087) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add business', 7, 'add_business'), ('Can change business', 7, 'change_business'), ('Can delete business', 7, 'delete_business'), ('Can add photo', 8, 'add_photo'), ('Can change photo', 8, 'change_photo'), ('Can delete photo', 8, 'delete_photo'), ('Can add tag', 9, 'add_tag'), ('Can change tag', 9, 'change_tag'), ('Can delete tag', 9, 'delete_tag'), ('Can add business category', 10, 'add_businesscategory'), ('Can change business category', 10, 'change_businesscategory'), ('Can delete business category', 10, 'delete_businesscategory'), ('Can add user subscription', 11, 'add_usersubscription'), ('Can change user subscription', 11, 'change_usersubscription'), ('Can delete user subscription', 11, 'delete_usersubscription'), ('Can add device', 12, 'add_device'), ('Can change device', 12, 'change_device'), ('Can delete device', 12, 'delete_device'), ('Can add allsortz user', 13, 'add_allsortzuser'), ('Can change allsortz user', 13, 'change_allsortzuser'), ('Can delete allsortz user', 13, 'delete_allsortzuser'), ('Can add offer', 14, 'add_offer'), ('Can change offer', 14, 'change_offer'), ('Can delete offer', 14, 'delete_offer'), ('Can add business deal', 15, 'add_businessdeal'), ('Can change business deal', 15, 'change_businessdeal'), ('Can delete business deal', 15, 'delete_businessdeal'), ('Can add business action', 16, 'add_businessaction'), ('Can change business action', 16, 'change_businessaction'), ('Can delete business action', 16, 'delete_businessaction'), ('Can add as user deal', 17, 'add_asuserdeal'), ('Can change as user deal', 17, 'change_asuserdeal'), ('Can delete as user deal', 17, 'delete_asuserdeal'), ('Can add as user action', 18, 'add_asuseraction'), ('Can change as user action', 18, 'change_asuseraction'), ('Can delete as user action', 18, 'delete_asuseraction'), ('Can add discussion', 19, 'add_discussion'), ('Can change discussion', 19, 'change_discussion'), ('Can delete discussion', 19, 'delete_discussion'), ('Can add category discussion', 20, 'add_categorydiscussion'), ('Can change category discussion', 20, 'change_categorydiscussion'), ('Can delete category discussion', 20, 'delete_categorydiscussion'), ('Can add business discussion', 21, 'add_businessdiscussion'), ('Can change business discussion', 21, 'change_businessdiscussion'), ('Can delete business discussion', 21, 'delete_businessdiscussion'), ('Can add photo discussion', 22, 'add_photodiscussion'), ('Can change photo discussion', 22, 'change_photodiscussion'), ('Can delete photo discussion', 22, 'delete_photodiscussion'), ('Can add rating', 23, 'add_rating'), ('Can change rating', 23, 'change_rating'), ('Can delete rating', 23, 'delete_rating'), ('Can add discussion rating', 24, 'add_discussionrating'), ('Can change discussion rating', 24, 'change_discussionrating'), ('Can delete discussion rating', 24, 'delete_discussionrating'), ('Can add photo rating', 25, 'add_photorating'), ('Can change photo rating', 25, 'change_photorating'), ('Can delete photo rating', 25, 'delete_photorating'), ('Can add category rating', 26, 'add_categoryrating'), ('Can change category rating', 26, 'change_categoryrating'), ('Can delete category rating', 26, 'delete_categoryrating'), ('Can add business rating', 27, 'add_businessrating'), ('Can change business rating', 27, 'change_businessrating'), ('Can delete business rating', 27, 'delete_businessrating'); args=(u'Can add business', 7, u'add_business', u'Can change business', 7, u'change_business', u'Can delete business', 7, u'delete_business', u'Can add photo', 8, u'add_photo', u'Can change photo', 8, u'change_photo', u'Can delete photo', 8, u'delete_photo', u'Can add tag', 9, u'add_tag', u'Can change tag', 9, u'change_tag', u'Can delete tag', 9, u'delete_tag', u'Can add business category', 10, u'add_businesscategory', u'Can change business category', 10, u'change_businesscategory', u'Can delete business category', 10, u'delete_businesscategory', u'Can add user subscription', 11, u'add_usersubscription', u'Can change user subscription', 11, u'change_usersubscription', u'Can delete user subscription', 11, u'delete_usersubscription', u'Can add device', 12, u'add_device', u'Can change device', 12, u'change_device', u'Can delete device', 12, u'delete_device', u'Can add allsortz user', 13, u'add_allsortzuser', u'Can change allsortz user', 13, u'change_allsortzuser', u'Can delete allsortz user', 13, u'delete_allsortzuser', u'Can add offer', 14, u'add_offer', u'Can change offer', 14, u'change_offer', u'Can delete offer', 14, u'delete_offer', u'Can add business deal', 15, u'add_businessdeal', u'Can change business deal', 15, u'change_businessdeal', u'Can delete business deal', 15, u'delete_businessdeal', u'Can add business action', 16, u'add_businessaction', u'Can change business action', 16, u'change_businessaction', u'Can delete business action', 16, u'delete_businessaction', u'Can add as user deal', 17, u'add_asuserdeal', u'Can change as user deal', 17, u'change_asuserdeal', u'Can delete as user deal', 17, u'delete_asuserdeal', u'Can add as user action', 18, u'add_asuseraction', u'Can change as user action', 18, u'change_asuseraction', u'Can delete as user action', 18, u'delete_asuseraction', u'Can add discussion', 19, u'add_discussion', u'Can change discussion', 19, u'change_discussion', u'Can delete discussion', 19, u'delete_discussion', u'Can add category discussion', 20, u'add_categorydiscussion', u'Can change category discussion', 20, u'change_categorydiscussion', u'Can delete category discussion', 20, u'delete_categorydiscussion', u'Can add business discussion', 21, u'add_businessdiscussion', u'Can change business discussion', 21, u'change_businessdiscussion', u'Can delete business discussion', 21, u'delete_businessdiscussion', u'Can add photo discussion', 22, u'add_photodiscussion', u'Can change photo discussion', 22, u'change_photodiscussion', u'Can delete photo discussion', 22, u'delete_photodiscussion', u'Can add rating', 23, u'add_rating', u'Can change rating', 23, u'change_rating', u'Can delete rating', 23, u'delete_rating', u'Can add discussion rating', 24, u'add_discussionrating', u'Can change discussion rating', 24, u'change_discussionrating', u'Can delete discussion rating', 24, u'delete_discussionrating', u'Can add photo rating', 25, u'add_photorating', u'Can change photo rating', 25, u'change_photorating', u'Can delete photo rating', 25, u'delete_photorating', u'Can add category rating', 26, u'add_categoryrating', u'Can change category rating', 26, u'change_categoryrating', u'Can delete category rating', 26, u'delete_categoryrating', u'Can add business rating', 27, u'add_businessrating', u'Can change business rating', 27, u'change_businessrating', u'Can delete business rating', 27, u'delete_businessrating')
2012-08-01 12:42:59,945 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'api'  ORDER BY "django_content_type"."name" ASC; args=('api',)
2012-08-01 12:42:59,991 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'recommendation'  AND "django_content_type"."app_label" = 'recommendation' ); args=('recommendation', 'recommendation')
2012-08-01 12:43:00,031 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:00,074 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('recommendation', 'recommendation', 'recommendation') RETURNING "django_content_type"."id"; args=(u'recommendation', 'recommendation', 'recommendation')
2012-08-01 12:43:00,202 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('businessfactor', 'recommendation')
2012-08-01 12:43:00,241 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:00,283 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business factor', 'recommendation', 'businessfactor') RETURNING "django_content_type"."id"; args=(u'business factor', 'recommendation', 'businessfactor')
2012-08-01 12:43:00,412 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('userfactor', 'recommendation')
2012-08-01 12:43:00,453 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:00,494 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user factor', 'recommendation', 'userfactor') RETURNING "django_content_type"."id"; args=(u'user factor', 'recommendation', 'userfactor')
2012-08-01 12:43:00,623 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (28, 29, 30) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(28, 29, 30)
2012-08-01 12:43:00,671 [DEBUG] django.db.backends: (0.046) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add recommendation', 28, 'add_recommendation'), ('Can change recommendation', 28, 'change_recommendation'), ('Can delete recommendation', 28, 'delete_recommendation'), ('Can add business factor', 29, 'add_businessfactor'), ('Can change business factor', 29, 'change_businessfactor'), ('Can delete business factor', 29, 'delete_businessfactor'), ('Can add user factor', 30, 'add_userfactor'), ('Can change user factor', 30, 'change_userfactor'), ('Can delete user factor', 30, 'delete_userfactor'); args=(u'Can add recommendation', 28, u'add_recommendation', u'Can change recommendation', 28, u'change_recommendation', u'Can delete recommendation', 28, u'delete_recommendation', u'Can add business factor', 29, u'add_businessfactor', u'Can change business factor', 29, u'change_businessfactor', u'Can delete business factor', 29, u'delete_businessfactor', u'Can add user factor', 30, u'add_userfactor', u'Can change user factor', 30, u'change_userfactor', u'Can delete user factor', 30, u'delete_userfactor')
2012-08-01 12:43:00,799 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'recommendation'  ORDER BY "django_content_type"."name" ASC; args=('recommendation',)
2012-08-01 12:43:00,843 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'registrationprofile'  AND "django_content_type"."app_label" = 'registration' ); args=('registrationprofile', 'registration')
2012-08-01 12:43:00,884 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:00,927 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('registration profile', 'registration', 'registrationprofile') RETURNING "django_content_type"."id"; args=(u'registration profile', 'registration', 'registrationprofile')
2012-08-01 12:43:01,059 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (31) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(31,)
2012-08-01 12:43:01,102 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add registration profile', 31, 'add_registrationprofile'), ('Can change registration profile', 31, 'change_registrationprofile'), ('Can delete registration profile', 31, 'delete_registrationprofile'); args=(u'Can add registration profile', 31, u'add_registrationprofile', u'Can change registration profile', 31, u'change_registrationprofile', u'Can delete registration profile', 31, u'delete_registrationprofile')
2012-08-01 12:43:01,230 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'registration'  ORDER BY "django_content_type"."name" ASC; args=('registration',)
2012-08-01 12:43:01,276 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'query'  AND "django_content_type"."app_label" = 'queries' ); args=('query', 'queries')
2012-08-01 12:43:01,317 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:01,360 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('query', 'queries', 'query') RETURNING "django_content_type"."id"; args=(u'query', 'queries', 'query')
2012-08-01 12:43:01,525 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'querytag'  AND "django_content_type"."app_label" = 'queries' ); args=('querytag', 'queries')
2012-08-01 12:43:01,567 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:01,609 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('query tag', 'queries', 'querytag') RETURNING "django_content_type"."id"; args=(u'query tag', 'queries', 'querytag')
2012-08-01 12:43:01,751 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userqueryrelation'  AND "django_content_type"."app_label" = 'queries' ); args=('userqueryrelation', 'queries')
2012-08-01 12:43:01,791 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:01,834 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user query relation', 'queries', 'userqueryrelation') RETURNING "django_content_type"."id"; args=(u'user query relation', 'queries', 'userqueryrelation')
2012-08-01 12:43:01,967 [DEBUG] django.db.backends: (0.088) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (32, 33, 34) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(32, 33, 34)
2012-08-01 12:43:02,014 [DEBUG] django.db.backends: (0.046) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add query', 32, 'add_query'), ('Can change query', 32, 'change_query'), ('Can delete query', 32, 'delete_query'), ('Can add query tag', 33, 'add_querytag'), ('Can change query tag', 33, 'change_querytag'), ('Can delete query tag', 33, 'delete_querytag'), ('Can add user query relation', 34, 'add_userqueryrelation'), ('Can change user query relation', 34, 'change_userqueryrelation'), ('Can delete user query relation', 34, 'delete_userqueryrelation'); args=(u'Can add query', 32, u'add_query', u'Can change query', 32, u'change_query', u'Can delete query', 32, u'delete_query', u'Can add query tag', 33, u'add_querytag', u'Can change query tag', 33, u'change_querytag', u'Can delete query tag', 33, u'delete_querytag', u'Can add user query relation', 34, u'add_userqueryrelation', u'Can change user query relation', 34, u'change_userqueryrelation', u'Can delete user query relation', 34, u'delete_userqueryrelation')
2012-08-01 12:43:02,172 [DEBUG] django.db.backends: (0.115) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'queries'  ORDER BY "django_content_type"."name" ASC; args=('queries',)
2012-08-01 12:43:02,216 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'page'  AND "django_content_type"."app_label" = 'wiki' ); args=('page', 'wiki')
2012-08-01 12:43:02,258 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:02,326 [DEBUG] django.db.backends: (0.067) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('page', 'wiki', 'page') RETURNING "django_content_type"."id"; args=(u'page', 'wiki', 'page')
2012-08-01 12:43:02,471 [DEBUG] django.db.backends: (0.095) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (35) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(35,)
2012-08-01 12:43:02,514 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add page', 35, 'add_page'), ('Can change page', 35, 'change_page'), ('Can delete page', 35, 'delete_page'); args=(u'Can add page', 35, u'add_page', u'Can change page', 35, u'change_page', u'Can delete page', 35, u'delete_page')
2012-08-01 12:43:02,642 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'wiki'  ORDER BY "django_content_type"."name" ASC; args=('wiki',)
2012-08-01 12:43:02,702 [DEBUG] django.db.backends: (0.056) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', 'admin')
2012-08-01 12:43:02,743 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:43:02,786 [DEBUG] django.db.backends: (0.043) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('log entry', 'admin', 'logentry') RETURNING "django_content_type"."id"; args=(u'log entry', 'admin', 'logentry')
2012-08-01 12:43:02,919 [DEBUG] django.db.backends: (0.085) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (36) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(36,)
2012-08-01 12:43:02,963 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 36, 'add_logentry'), ('Can change log entry', 36, 'change_logentry'), ('Can delete log entry', 36, 'delete_logentry'); args=(u'Can add log entry', 36, u'add_logentry', u'Can change log entry', 36, u'change_logentry', u'Can delete log entry', 36, u'delete_logentry')
2012-08-01 12:43:03,097 [DEBUG] django.db.backends: (0.089) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=('admin',)
2012-08-01 12:43:03,153 [DEBUG] django.db.backends: (0.052) CREATE INDEX "auth_permission_content_type_id" ON "auth_permission" ("content_type_id");; args=()
2012-08-01 12:43:03,294 [DEBUG] django.db.backends: (0.095) CREATE INDEX "auth_group_permissions_group_id" ON "auth_group_permissions" ("group_id");; args=()
2012-08-01 12:43:03,347 [DEBUG] django.db.backends: (0.052) CREATE INDEX "auth_group_permissions_permission_id" ON "auth_group_permissions" ("permission_id");; args=()
2012-08-01 12:43:03,481 [DEBUG] django.db.backends: (0.091) CREATE INDEX "auth_user_user_permissions_user_id" ON "auth_user_user_permissions" ("user_id");; args=()
2012-08-01 12:43:03,533 [DEBUG] django.db.backends: (0.052) CREATE INDEX "auth_user_user_permissions_permission_id" ON "auth_user_user_permissions" ("permission_id");; args=()
2012-08-01 12:43:03,672 [DEBUG] django.db.backends: (0.095) CREATE INDEX "auth_user_groups_user_id" ON "auth_user_groups" ("user_id");; args=()
2012-08-01 12:43:03,725 [DEBUG] django.db.backends: (0.053) CREATE INDEX "auth_user_groups_group_id" ON "auth_user_groups" ("group_id");; args=()
2012-08-01 12:43:03,858 [DEBUG] django.db.backends: (0.088) CREATE INDEX "django_session_expire_date" ON "django_session" ("expire_date");; args=()
2012-08-01 12:43:03,991 [DEBUG] django.db.backends: (0.090) SELECT AddGeometryColumn('api_business', 'geom', 4326, 'POINT', 2);; args=()
2012-08-01 12:43:04,032 [DEBUG] django.db.backends: (0.041) ALTER TABLE "api_business" ALTER "geom" SET NOT NULL;; args=()
2012-08-01 12:43:04,080 [DEBUG] django.db.backends: (0.048) CREATE INDEX "api_business_geom_id" ON "api_business" USING GIST ( "geom" GIST_GEOMETRY_OPS );; args=()
2012-08-01 12:43:04,221 [DEBUG] django.db.backends: (0.094) CREATE INDEX "api_photo_user_id" ON "api_photo" ("user_id");; args=()
2012-08-01 12:43:04,272 [DEBUG] django.db.backends: (0.050) CREATE INDEX "api_photo_business_id" ON "api_photo" ("business_id");; args=()
2012-08-01 12:43:04,405 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_tag_creator_id" ON "api_tag" ("creator_id");; args=()
2012-08-01 12:43:04,541 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_businesscategory_business_id" ON "api_businesscategory" ("business_id");; args=()
2012-08-01 12:43:04,593 [DEBUG] django.db.backends: (0.051) CREATE INDEX "api_businesscategory_tag_id" ON "api_businesscategory" ("tag_id");; args=()
2012-08-01 12:43:04,730 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_usersubscription_user_id" ON "api_usersubscription" ("user_id");; args=()
2012-08-01 12:43:04,781 [DEBUG] django.db.backends: (0.051) CREATE INDEX "api_usersubscription_tag_id" ON "api_usersubscription" ("tag_id");; args=()
2012-08-01 12:43:04,917 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_allsortzuser_device_id" ON "api_allsortzuser" ("device_id");; args=()
2012-08-01 12:43:05,053 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_offer_business_id" ON "api_offer" ("business_id");; args=()
2012-08-01 12:43:05,185 [DEBUG] django.db.backends: (0.087) CREATE INDEX "api_businessaction_reward_deal_id" ON "api_businessaction" ("reward_deal_id");; args=()
2012-08-01 12:43:05,320 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_asuserdeal_ASuser_id" ON "api_asuserdeal" ("ASuser_id");; args=()
2012-08-01 12:43:05,372 [DEBUG] django.db.backends: (0.052) CREATE INDEX "api_asuserdeal_businessdeal_id" ON "api_asuserdeal" ("businessdeal_id");; args=()
2012-08-01 12:43:05,513 [DEBUG] django.db.backends: (0.095) CREATE INDEX "api_asuseraction_ASuser_id" ON "api_asuseraction" ("ASuser_id");; args=()
2012-08-01 12:43:05,565 [DEBUG] django.db.backends: (0.052) CREATE INDEX "api_asuseraction_action_id" ON "api_asuseraction" ("action_id");; args=()
2012-08-01 12:43:05,609 [DEBUG] django.db.backends: (0.044) SELECT AddGeometryColumn('api_asuseraction', 'location', 4326, 'POINT', 2);; args=()
2012-08-01 12:43:05,649 [DEBUG] django.db.backends: (0.040) ALTER TABLE "api_asuseraction" ALTER "location" SET NOT NULL;; args=()
2012-08-01 12:43:05,692 [DEBUG] django.db.backends: (0.042) CREATE INDEX "api_asuseraction_location_id" ON "api_asuseraction" USING GIST ( "location" GIST_GEOMETRY_OPS );; args=()
2012-08-01 12:43:05,829 [DEBUG] django.db.backends: (0.094) CREATE INDEX "api_discussion_user_id" ON "api_discussion" ("user_id");; args=()
2012-08-01 12:43:05,884 [DEBUG] django.db.backends: (0.054) CREATE INDEX "api_discussion_reply_to_id" ON "api_discussion" ("reply_to_id");; args=()
2012-08-01 12:43:06,021 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_categorydiscussion_businesstag_id" ON "api_categorydiscussion" ("businesstag_id");; args=()
2012-08-01 12:43:06,153 [DEBUG] django.db.backends: (0.089) CREATE INDEX "api_businessdiscussion_business_id" ON "api_businessdiscussion" ("business_id");; args=()
2012-08-01 12:43:06,289 [DEBUG] django.db.backends: (0.090) CREATE INDEX "api_photodiscussion_photo_id" ON "api_photodiscussion" ("photo_id");; args=()
2012-08-01 12:43:06,425 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_rating_user_id" ON "api_rating" ("user_id");; args=()
2012-08-01 12:43:06,561 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_discussionrating_discussion_id" ON "api_discussionrating" ("discussion_id");; args=()
2012-08-01 12:43:06,697 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_photorating_photo_id" ON "api_photorating" ("photo_id");; args=()
2012-08-01 12:43:06,837 [DEBUG] django.db.backends: (0.096) CREATE INDEX "api_categoryrating_category_id" ON "api_categoryrating" ("category_id");; args=()
2012-08-01 12:43:06,974 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_businessrating_business_id" ON "api_businessrating" ("business_id");; args=()
2012-08-01 12:43:07,109 [DEBUG] django.db.backends: (0.092) CREATE INDEX "recommendation_recommendation_business_id" ON "recommendation_recommendation" ("business_id");; args=()
2012-08-01 12:43:07,161 [DEBUG] django.db.backends: (0.052) CREATE INDEX "recommendation_recommendation_username_id" ON "recommendation_recommendation" ("username_id");; args=()
2012-08-01 12:43:07,301 [DEBUG] django.db.backends: (0.095) CREATE INDEX "recommendation_businessfactor_business_id" ON "recommendation_businessfactor" ("business_id");; args=()
2012-08-01 12:43:07,437 [DEBUG] django.db.backends: (0.091) CREATE INDEX "recommendation_userfactor_user_id" ON "recommendation_userfactor" ("user_id");; args=()
2012-08-01 12:43:07,577 [DEBUG] django.db.backends: (0.094) CREATE INDEX "queries_query_creator_id" ON "queries_query" ("creator_id");; args=()
2012-08-01 12:43:07,713 [DEBUG] django.db.backends: (0.091) CREATE INDEX "queries_querytag_query_id" ON "queries_querytag" ("query_id");; args=()
2012-08-01 12:43:07,766 [DEBUG] django.db.backends: (0.054) CREATE INDEX "queries_querytag_tag_id" ON "queries_querytag" ("tag_id");; args=()
2012-08-01 12:43:07,901 [DEBUG] django.db.backends: (0.091) CREATE INDEX "queries_userqueryrelation_user_id" ON "queries_userqueryrelation" ("user_id");; args=()
2012-08-01 12:43:07,954 [DEBUG] django.db.backends: (0.052) CREATE INDEX "queries_userqueryrelation_query_id" ON "queries_userqueryrelation" ("query_id");; args=()
2012-08-01 12:43:08,084 [DEBUG] django.db.backends: (0.089) CREATE INDEX "wiki_page_category_id" ON "wiki_page" ("category_id");; args=()
2012-08-01 12:43:08,221 [DEBUG] django.db.backends: (0.091) CREATE INDEX "django_admin_log_user_id" ON "django_admin_log" ("user_id");; args=()
2012-08-01 12:43:08,273 [DEBUG] django.db.backends: (0.052) CREATE INDEX "django_admin_log_content_type_id" ON "django_admin_log" ("content_type_id");; args=()
2012-08-01 12:43:08,485 [DEBUG] django.db.backends: (0.080) SET CONSTRAINTS ALL IMMEDIATE; args=()
2012-08-01 12:43:08,525 [DEBUG] django.db.backends: (0.040) SET CONSTRAINTS ALL DEFERRED; args=()
2012-08-01 12:43:24,279 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:43:28,670 [DEBUG] django.db.backends: (0.087) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:43:28,715 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:43:28,716 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:43:28,975 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:43:29,532 [DEBUG] django.db.backends: (0.053) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:43:29.478470+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:43:29.478470+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f39490>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:43:29,688 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:44:18,562 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:44:18,563 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:44:18,727 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:44:18,899 [DEBUG] django.db.backends: (0.054) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:44:18.844721+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:44:18.844721+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x10738e250>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:44:19,051 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:45:36,419 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:45:45,202 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:46:08,115 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:46:35,841 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:47:05,497 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:47:10,797 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:47:16,993 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:47:19,055 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:47:19,102 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:47:19,102 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:47:19,649 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:47:21,463 [DEBUG] django.db.backends: (0.085) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:47:25,952 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:47:25,952 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:47:26,116 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:47:26,722 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:47:27,325 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:47:27,326 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:47:27,493 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:47:27,761 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:48:04,791 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:48:05,703 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:48:05,751 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:48:05,751 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:48:05,919 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:48:06,464 [DEBUG] django.db.backends: (0.054) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:48:06.410345+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:48:06.410345+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x10653b450>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:48:06,625 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:48:44,892 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:48:46,311 [DEBUG] django.db.backends: (0.086) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:48:46,367 [DEBUG] django.db.backends: (0.055) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:48:46,368 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:48:46,971 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:48:47,164 [DEBUG] django.db.backends: (0.067) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:48:47.097461+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:48:47.097461+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f7a450>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:48:47,324 [DEBUG] django.db.backends: (0.090) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:48:57,669 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:49:04,756 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:49:09,403 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:49:14,166 [DEBUG] django.db.backends: (0.087) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:49:14,211 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:49:14,211 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:49:14,764 [DEBUG] django.db.backends: (0.050) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:49:15,303 [DEBUG] django.db.backends: (0.052) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:49:15.250797+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:49:15.250797+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f7a450>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:49:15,461 [DEBUG] django.db.backends: (0.088) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:51:03,258 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:51:08,652 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:51:39,651 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:51:50,990 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:52:03,507 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:52:07,231 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:52:09,895 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:52:11,291 [DEBUG] django.db.backends: (0.421) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:52:11,346 [DEBUG] django.db.backends: (0.053) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:52:11,346 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:52:11,907 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:52:12,550 [DEBUG] django.db.backends: (0.087) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:52:23,727 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:52:25,016 [DEBUG] django.db.backends: (0.096) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:52:25,065 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:52:25,066 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:52:25,238 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:52:25,416 [DEBUG] django.db.backends: (0.057) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:52:25.358803+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:52:25.358803+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f06490>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:52:25,584 [DEBUG] django.db.backends: (0.095) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:52:43,667 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:52:45,134 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:52:45,180 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:52:45,181 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:52:45,358 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:52:45,528 [DEBUG] django.db.backends: (0.054) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:52:45.474291+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:52:45.474291+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f3b490>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:52:45,698 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:00,517 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:53:03,046 [DEBUG] django.db.backends: (0.092) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:03,092 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:03,093 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:53:03,264 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:03,435 [DEBUG] django.db.backends: (0.052) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:53:03.382945+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', NULL) RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:53:03.382945+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f41490>, '242 Nassau St.', 'Princeton ', 'NJ', '', None)
2012-08-01 12:53:03,591 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:12,966 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:53:14,618 [DEBUG] django.db.backends: (0.094) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:14,669 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:14,669 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:53:14,840 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:15,009 [DEBUG] django.db.backends: (0.049) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:53:14.959869+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:53:14.959869+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f08490>, '242 Nassau St.', 'Princeton ', 'NJ', '', '08542')
2012-08-01 12:53:15,175 [DEBUG] django.db.backends: (0.094) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:29,778 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:53:30,624 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:30,670 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:30,670 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:53:30,835 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:30,996 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:53:30.950708+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:53:30.950708+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f3b490>, '242 Nassau St.', 'Princeton ', 'NJ', '', '08542')
2012-08-01 12:53:31,149 [DEBUG] django.db.backends: (0.085) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:41,586 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:53:43,724 [DEBUG] django.db.backends: (0.089) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:43,771 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:53:43,772 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:53:43,938 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:53:44,104 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:53:44.057941+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:53:44.057941+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f39490>, '242 Nassau St.', 'Princeton ', 'NJ', '', '08542')
2012-08-01 12:53:44,262 [DEBUG] django.db.backends: (0.086) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 21; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:54:04,856 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:54:05,238 [DEBUG] django.db.backends: (0.088) 
            SELECT c.relname
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('r', 'v', '')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid); args=()
2012-08-01 12:54:05,312 [DEBUG] django.db.backends: (0.072) CREATE TABLE "auth_permission" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
2012-08-01 12:54:05,394 [DEBUG] django.db.backends: (0.081) CREATE TABLE "auth_group_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("group_id", "permission_id")
)
;; args=()
2012-08-01 12:54:05,459 [DEBUG] django.db.backends: (0.065) CREATE TABLE "auth_group" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
2012-08-01 12:54:05,502 [DEBUG] django.db.backends: (0.042) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "group_id_refs_id_3cea63fe" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:54:05,571 [DEBUG] django.db.backends: (0.069) CREATE TABLE "auth_user_user_permissions" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "permission_id")
)
;; args=()
2012-08-01 12:54:05,640 [DEBUG] django.db.backends: (0.068) CREATE TABLE "auth_user_groups" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED,
    UNIQUE ("user_id", "group_id")
)
;; args=()
2012-08-01 12:54:05,710 [DEBUG] django.db.backends: (0.069) CREATE TABLE "auth_user" (
    "id" serial NOT NULL PRIMARY KEY,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "password" varchar(128) NOT NULL,
    "is_staff" boolean NOT NULL,
    "is_active" boolean NOT NULL,
    "is_superuser" boolean NOT NULL,
    "last_login" timestamp with time zone NOT NULL,
    "date_joined" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:54:05,752 [DEBUG] django.db.backends: (0.042) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "user_id_refs_id_f2045483" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:54:05,795 [DEBUG] django.db.backends: (0.043) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "user_id_refs_id_831107f1" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:54:05,863 [DEBUG] django.db.backends: (0.068) CREATE TABLE "django_content_type" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
2012-08-01 12:54:05,906 [DEBUG] django.db.backends: (0.043) ALTER TABLE "auth_permission" ADD CONSTRAINT "content_type_id_refs_id_728de91f" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:54:05,975 [DEBUG] django.db.backends: (0.069) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:54:06,031 [DEBUG] django.db.backends: (0.055) CREATE TABLE "django_site" (
    "id" serial NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
2012-08-01 12:54:06,100 [DEBUG] django.db.backends: (0.068) CREATE TABLE "api_business" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "lat" double precision NOT NULL,
    "lon" double precision NOT NULL,
    "address" varchar(250) NOT NULL,
    "city" varchar(100) NOT NULL,
    "state" varchar(2) NOT NULL,
    "phone" varchar(20) NOT NULL,
    "zipcode" varchar(10) NOT NULL
)
;; args=()
2012-08-01 12:54:06,172 [DEBUG] django.db.backends: (0.071) CREATE TABLE "api_photo" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "image" varchar(100) NOT NULL,
    "image_medium" varchar(100) NOT NULL,
    "image_thumb" varchar(100) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "title" varchar(300) NOT NULL,
    "caption" text NOT NULL
)
;; args=()
2012-08-01 12:54:06,240 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_tag" (
    "id" serial NOT NULL PRIMARY KEY,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "descr" text NOT NULL,
    "icon" text NOT NULL
)
;; args=()
2012-08-01 12:54:06,296 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_businesscategory" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:06,354 [DEBUG] django.db.backends: (0.058) CREATE TABLE "api_usersubscription" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:06,406 [DEBUG] django.db.backends: (0.051) CREATE TABLE "api_device" (
    "id" serial NOT NULL PRIMARY KEY,
    "os" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    "manufacturer" varchar(100) NOT NULL,
    "deviceID" integer NOT NULL
)
;; args=()
2012-08-01 12:54:06,476 [DEBUG] django.db.backends: (0.070) CREATE TABLE "api_allsortzuser" (
    "id" serial NOT NULL PRIMARY KEY,
    "distance_threshold" integer NOT NULL,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "metric" boolean NOT NULL,
    "device_id" integer NOT NULL REFERENCES "api_device" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:06,547 [DEBUG] django.db.backends: (0.070) CREATE TABLE "api_offer" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "restricitons" varchar(1000) NOT NULL,
    "created_on" timestamp with time zone NOT NULL,
    "valid_from" timestamp with time zone NOT NULL,
    "valid_until" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:54:06,603 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_businessdeal" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "cost" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 12:54:06,662 [DEBUG] django.db.backends: (0.058) CREATE TABLE "api_businessaction" (
    "offer_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_offer" ("id") DEFERRABLE INITIALLY DEFERRED,
    "reward_deal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "reward_value" integer NOT NULL,
    "number_allocated" integer NOT NULL,
    "number_used" integer NOT NULL
)
;; args=()
2012-08-01 12:54:06,720 [DEBUG] django.db.backends: (0.058) CREATE TABLE "api_asuserdeal" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businessdeal_id" integer NOT NULL REFERENCES "api_businessdeal" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "received_on" timestamp with time zone NOT NULL,
    "used_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:54:06,788 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_asuseraction" (
    "id" serial NOT NULL PRIMARY KEY,
    "ASuser_id" integer NOT NULL REFERENCES "api_allsortzuser" ("id") DEFERRABLE INITIALLY DEFERRED,
    "action_id" integer NOT NULL REFERENCES "api_businessaction" ("offer_ptr_id") DEFERRABLE INITIALLY DEFERRED,
    "description" varchar(1000) NOT NULL,
    "completed_on" timestamp with time zone NOT NULL
)
;; args=()
2012-08-01 12:54:06,855 [DEBUG] django.db.backends: (0.067) CREATE TABLE "api_discussion" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "date" timestamp with time zone NOT NULL,
    "reply_to_id" integer,
    "content" text NOT NULL
)
;; args=()
2012-08-01 12:54:06,898 [DEBUG] django.db.backends: (0.042) ALTER TABLE "api_discussion" ADD CONSTRAINT "reply_to_id_refs_id_7f5f35a5" FOREIGN KEY ("reply_to_id") REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED;; args=()
2012-08-01 12:54:06,952 [DEBUG] django.db.backends: (0.054) CREATE TABLE "api_categorydiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "businesstag_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,008 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_businessdiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,064 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_photodiscussion" (
    "discussion_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,120 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_rating" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "rating" integer NOT NULL
)
;; args=()
2012-08-01 12:54:07,177 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_discussionrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "discussion_id" integer NOT NULL REFERENCES "api_discussion" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,232 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_photorating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "photo_id" integer NOT NULL REFERENCES "api_photo" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,288 [DEBUG] django.db.backends: (0.056) CREATE TABLE "api_categoryrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,344 [DEBUG] django.db.backends: (0.055) CREATE TABLE "api_businessrating" (
    "rating_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "api_rating" ("id") DEFERRABLE INITIALLY DEFERRED,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,400 [DEBUG] django.db.backends: (0.056) CREATE TABLE "recommendation_recommendation" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "username_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "recommendation" integer NOT NULL
)
;; args=()
2012-08-01 12:54:07,456 [DEBUG] django.db.backends: (0.055) CREATE TABLE "recommendation_businessfactor" (
    "id" serial NOT NULL PRIMARY KEY,
    "business_id" integer NOT NULL REFERENCES "api_business" ("id") DEFERRABLE INITIALLY DEFERRED,
    "latentFactor" integer NOT NULL,
    "relation" double precision NOT NULL
)
;; args=()
2012-08-01 12:54:07,511 [DEBUG] django.db.backends: (0.055) CREATE TABLE "recommendation_userfactor" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "latentFactor" integer NOT NULL,
    "relation" double precision NOT NULL
)
;; args=()
2012-08-01 12:54:07,579 [DEBUG] django.db.backends: (0.067) CREATE TABLE "registration_registrationprofile" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "activation_key" varchar(40) NOT NULL
)
;; args=()
2012-08-01 12:54:07,654 [DEBUG] django.db.backends: (0.074) CREATE TABLE "queries_query" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(250) NOT NULL,
    "date" timestamp with time zone NOT NULL,
    "creator_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "is_default" boolean NOT NULL,
    "proximity" integer NOT NULL,
    "score" integer NOT NULL,
    "price" integer NOT NULL,
    "value" integer NOT NULL,
    "networked" boolean NOT NULL,
    "deal" boolean NOT NULL,
    "visited" boolean NOT NULL,
    "unvisited" boolean NOT NULL,
    "text" varchar(250) NOT NULL
)
;; args=()
2012-08-01 12:54:07,712 [DEBUG] django.db.backends: (0.057) CREATE TABLE "queries_querytag" (
    "id" serial NOT NULL PRIMARY KEY,
    "query_id" integer NOT NULL REFERENCES "queries_query" ("id") DEFERRABLE INITIALLY DEFERRED,
    "tag_id" integer NOT NULL REFERENCES "api_tag" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,765 [DEBUG] django.db.backends: (0.052) CREATE TABLE "queries_userqueryrelation" (
    "id" serial NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "query_id" integer NOT NULL REFERENCES "queries_query" ("id") DEFERRABLE INITIALLY DEFERRED,
    "favorite" boolean NOT NULL
)
;; args=()
2012-08-01 12:54:07,831 [DEBUG] django.db.backends: (0.066) CREATE TABLE "wiki_page" (
    "id" serial NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "content" text NOT NULL,
    "rendered" text NOT NULL,
    "category_id" integer NOT NULL REFERENCES "api_businesscategory" ("id") DEFERRABLE INITIALLY DEFERRED
)
;; args=()
2012-08-01 12:54:07,904 [DEBUG] django.db.backends: (0.072) CREATE TABLE "django_admin_log" (
    "id" serial NOT NULL PRIMARY KEY,
    "action_time" timestamp with time zone NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED,
    "content_type_id" integer REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED,
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint CHECK ("action_flag" >= 0) NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
2012-08-01 12:54:08,036 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'permission'  AND "django_content_type"."app_label" = 'auth' ); args=('permission', 'auth')
2012-08-01 12:54:08,075 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:08,117 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('permission', 'auth', 'permission') RETURNING "django_content_type"."id"; args=(u'permission', 'auth', 'permission')
2012-08-01 12:54:08,243 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'group'  AND "django_content_type"."app_label" = 'auth' ); args=('group', 'auth')
2012-08-01 12:54:08,283 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:08,324 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('group', 'auth', 'group') RETURNING "django_content_type"."id"; args=(u'group', 'auth', 'group')
2012-08-01 12:54:08,449 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'user'  AND "django_content_type"."app_label" = 'auth' ); args=('user', 'auth')
2012-08-01 12:54:08,489 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:08,530 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user', 'auth', 'user') RETURNING "django_content_type"."id"; args=(u'user', 'auth', 'user')
2012-08-01 12:54:08,656 [DEBUG] django.db.backends: (0.083) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3)
2012-08-01 12:54:08,700 [DEBUG] django.db.backends: (0.044) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 1, 'add_permission'), ('Can change permission', 1, 'change_permission'), ('Can delete permission', 1, 'delete_permission'), ('Can add group', 2, 'add_group'), ('Can change group', 2, 'change_group'), ('Can delete group', 2, 'delete_group'), ('Can add user', 3, 'add_user'), ('Can change user', 3, 'change_user'), ('Can delete user', 3, 'delete_user'); args=(u'Can add permission', 1, u'add_permission', u'Can change permission', 1, u'change_permission', u'Can delete permission', 1, u'delete_permission', u'Can add group', 2, u'add_group', u'Can change group', 2, u'change_group', u'Can delete group', 2, u'delete_group', u'Can add user', 3, u'add_user', u'Can change user', 3, u'change_user', u'Can delete user', 3, u'delete_user')
2012-08-01 12:54:09,999 [DEBUG] django.db.backends: (0.086) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'zouf' ; args=('zouf',)
2012-08-01 12:54:10,762 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:14,019 [DEBUG] django.db.backends: (0.047) INSERT INTO "auth_user" ("username", "first_name", "last_name", "email", "password", "is_staff", "is_active", "is_superuser", "last_login", "date_joined") VALUES ('matt', '', '', 't@t.com', 'pbkdf2_sha256$10000$UlqACnnCu4m5$Ub6mOPWLKBHes1LVevHSlzBpcPC5/cNq3PoMD6GsG1I=', false, true, false, '2012-08-01 16:54:13.855080+00:00', '2012-08-01 16:54:13.855080+00:00') RETURNING "auth_user"."id"; args=('matt', '', '', 't@t.com', 'pbkdf2_sha256$10000$UlqACnnCu4m5$Ub6mOPWLKBHes1LVevHSlzBpcPC5/cNq3PoMD6GsG1I=', False, True, False, u'2012-08-01 16:54:13.855080+00:00', u'2012-08-01 16:54:13.855080+00:00')
2012-08-01 12:54:14,149 [DEBUG] django.db.backends: (0.079) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
2012-08-01 12:54:14,195 [DEBUG] django.db.backends: (0.044) UPDATE "auth_user" SET "username" = 'matt', "first_name" = '', "last_name" = '', "email" = 't@t.com', "password" = 'pbkdf2_sha256$10000$UlqACnnCu4m5$Ub6mOPWLKBHes1LVevHSlzBpcPC5/cNq3PoMD6GsG1I=', "is_staff" = true, "is_active" = true, "is_superuser" = true, "last_login" = '2012-08-01 16:54:13.855080+00:00', "date_joined" = '2012-08-01 16:54:13.855080+00:00' WHERE "auth_user"."id" = 1 ; args=('matt', '', '', 't@t.com', 'pbkdf2_sha256$10000$UlqACnnCu4m5$Ub6mOPWLKBHes1LVevHSlzBpcPC5/cNq3PoMD6GsG1I=', True, True, True, u'2012-08-01 16:54:13.855080+00:00', u'2012-08-01 16:54:13.855080+00:00', 1)
2012-08-01 12:54:14,324 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'  ORDER BY "django_content_type"."name" ASC; args=('auth',)
2012-08-01 12:54:14,368 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'contenttype'  AND "django_content_type"."app_label" = 'contenttypes' ); args=('contenttype', 'contenttypes')
2012-08-01 12:54:14,408 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:14,450 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('content type', 'contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=(u'content type', 'contenttypes', 'contenttype')
2012-08-01 12:54:14,581 [DEBUG] django.db.backends: (0.085) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2012-08-01 12:54:14,624 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 4, 'add_contenttype'), ('Can change content type', 4, 'change_contenttype'), ('Can delete content type', 4, 'delete_contenttype'); args=(u'Can add content type', 4, u'add_contenttype', u'Can change content type', 4, u'change_contenttype', u'Can delete content type', 4, u'delete_contenttype')
2012-08-01 12:54:14,750 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'  ORDER BY "django_content_type"."name" ASC; args=('contenttypes',)
2012-08-01 12:54:14,793 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'session'  AND "django_content_type"."app_label" = 'sessions' ); args=('session', 'sessions')
2012-08-01 12:54:14,861 [DEBUG] django.db.backends: (0.067) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:14,908 [DEBUG] django.db.backends: (0.046) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('session', 'sessions', 'session') RETURNING "django_content_type"."id"; args=(u'session', 'sessions', 'session')
2012-08-01 12:54:15,040 [DEBUG] django.db.backends: (0.082) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2012-08-01 12:54:15,081 [DEBUG] django.db.backends: (0.041) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 5, 'add_session'), ('Can change session', 5, 'change_session'), ('Can delete session', 5, 'delete_session'); args=(u'Can add session', 5, u'add_session', u'Can change session', 5, u'change_session', u'Can delete session', 5, u'delete_session')
2012-08-01 12:54:15,209 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'  ORDER BY "django_content_type"."name" ASC; args=('sessions',)
2012-08-01 12:54:15,252 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'site'  AND "django_content_type"."app_label" = 'sites' ); args=('site', 'sites')
2012-08-01 12:54:15,292 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:15,335 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('site', 'sites', 'site') RETURNING "django_content_type"."id"; args=(u'site', 'sites', 'site')
2012-08-01 12:54:15,468 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2012-08-01 12:54:15,512 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add site', 6, 'add_site'), ('Can change site', 6, 'change_site'), ('Can delete site', 6, 'delete_site'); args=(u'Can add site', 6, u'add_site', u'Can change site', 6, u'change_site', u'Can delete site', 6, u'delete_site')
2012-08-01 12:54:15,637 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sites'  ORDER BY "django_content_type"."name" ASC; args=('sites',)
2012-08-01 12:54:15,680 [DEBUG] django.db.backends: (0.040) SELECT (1) AS "a" FROM "django_site" WHERE "django_site"."id" = 1  LIMIT 1; args=(1,)
2012-08-01 12:54:15,722 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_site" ("id", "domain", "name") VALUES (1, 'example.com', 'example.com'); args=(1, 'example.com', 'example.com')
2012-08-01 12:54:15,850 [DEBUG] django.db.backends: (0.082) SELECT setval(pg_get_serial_sequence('"django_site"','id'), coalesce(max("id"), 1), max("id") IS NOT null) FROM "django_site";; args=()
2012-08-01 12:54:15,897 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'business'  AND "django_content_type"."app_label" = 'api' ); args=('business', 'api')
2012-08-01 12:54:15,938 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:15,979 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business', 'api', 'business') RETURNING "django_content_type"."id"; args=(u'business', 'api', 'business')
2012-08-01 12:54:16,107 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photo'  AND "django_content_type"."app_label" = 'api' ); args=('photo', 'api')
2012-08-01 12:54:16,147 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:16,188 [DEBUG] django.db.backends: (0.040) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo', 'api', 'photo') RETURNING "django_content_type"."id"; args=(u'photo', 'api', 'photo')
2012-08-01 12:54:16,318 [DEBUG] django.db.backends: (0.086) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'tag'  AND "django_content_type"."app_label" = 'api' ); args=('tag', 'api')
2012-08-01 12:54:16,358 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:16,399 [DEBUG] django.db.backends: (0.040) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('tag', 'api', 'tag') RETURNING "django_content_type"."id"; args=(u'tag', 'api', 'tag')
2012-08-01 12:54:16,530 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businesscategory'  AND "django_content_type"."app_label" = 'api' ); args=('businesscategory', 'api')
2012-08-01 12:54:16,571 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:16,613 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business category', 'api', 'businesscategory') RETURNING "django_content_type"."id"; args=(u'business category', 'api', 'businesscategory')
2012-08-01 12:54:16,739 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'usersubscription'  AND "django_content_type"."app_label" = 'api' ); args=('usersubscription', 'api')
2012-08-01 12:54:16,779 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:16,820 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user subscription', 'api', 'usersubscription') RETURNING "django_content_type"."id"; args=(u'user subscription', 'api', 'usersubscription')
2012-08-01 12:54:16,947 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'device'  AND "django_content_type"."app_label" = 'api' ); args=('device', 'api')
2012-08-01 12:54:16,987 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:17,029 [DEBUG] django.db.backends: (0.040) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('device', 'api', 'device') RETURNING "django_content_type"."id"; args=(u'device', 'api', 'device')
2012-08-01 12:54:17,154 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'allsortzuser'  AND "django_content_type"."app_label" = 'api' ); args=('allsortzuser', 'api')
2012-08-01 12:54:17,196 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:17,238 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('allsortz user', 'api', 'allsortzuser') RETURNING "django_content_type"."id"; args=(u'allsortz user', 'api', 'allsortzuser')
2012-08-01 12:54:17,362 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'offer'  AND "django_content_type"."app_label" = 'api' ); args=('offer', 'api')
2012-08-01 12:54:17,403 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:17,444 [DEBUG] django.db.backends: (0.040) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('offer', 'api', 'offer') RETURNING "django_content_type"."id"; args=(u'offer', 'api', 'offer')
2012-08-01 12:54:17,576 [DEBUG] django.db.backends: (0.086) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdeal'  AND "django_content_type"."app_label" = 'api' ); args=('businessdeal', 'api')
2012-08-01 12:54:17,617 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:17,658 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business deal', 'api', 'businessdeal') RETURNING "django_content_type"."id"; args=(u'business deal', 'api', 'businessdeal')
2012-08-01 12:54:17,786 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessaction'  AND "django_content_type"."app_label" = 'api' ); args=('businessaction', 'api')
2012-08-01 12:54:17,826 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:17,868 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business action', 'api', 'businessaction') RETURNING "django_content_type"."id"; args=(u'business action', 'api', 'businessaction')
2012-08-01 12:54:17,997 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuserdeal'  AND "django_content_type"."app_label" = 'api' ); args=('asuserdeal', 'api')
2012-08-01 12:54:18,038 [DEBUG] django.db.backends: (0.041) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:18,080 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user deal', 'api', 'asuserdeal') RETURNING "django_content_type"."id"; args=(u'as user deal', 'api', 'asuserdeal')
2012-08-01 12:54:18,206 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'asuseraction'  AND "django_content_type"."app_label" = 'api' ); args=('asuseraction', 'api')
2012-08-01 12:54:18,246 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:18,288 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('as user action', 'api', 'asuseraction') RETURNING "django_content_type"."id"; args=(u'as user action', 'api', 'asuseraction')
2012-08-01 12:54:18,420 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussion'  AND "django_content_type"."app_label" = 'api' ); args=('discussion', 'api')
2012-08-01 12:54:18,460 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:18,501 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion', 'api', 'discussion') RETURNING "django_content_type"."id"; args=(u'discussion', 'api', 'discussion')
2012-08-01 12:54:18,628 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categorydiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('categorydiscussion', 'api')
2012-08-01 12:54:18,667 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:18,709 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category discussion', 'api', 'categorydiscussion') RETURNING "django_content_type"."id"; args=(u'category discussion', 'api', 'categorydiscussion')
2012-08-01 12:54:18,836 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessdiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('businessdiscussion', 'api')
2012-08-01 12:54:18,876 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:18,917 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business discussion', 'api', 'businessdiscussion') RETURNING "django_content_type"."id"; args=(u'business discussion', 'api', 'businessdiscussion')
2012-08-01 12:54:19,044 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photodiscussion'  AND "django_content_type"."app_label" = 'api' ); args=('photodiscussion', 'api')
2012-08-01 12:54:19,084 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:19,126 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo discussion', 'api', 'photodiscussion') RETURNING "django_content_type"."id"; args=(u'photo discussion', 'api', 'photodiscussion')
2012-08-01 12:54:19,256 [DEBUG] django.db.backends: (0.083) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'rating'  AND "django_content_type"."app_label" = 'api' ); args=('rating', 'api')
2012-08-01 12:54:19,296 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:19,338 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('rating', 'api', 'rating') RETURNING "django_content_type"."id"; args=(u'rating', 'api', 'rating')
2012-08-01 12:54:19,463 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'discussionrating'  AND "django_content_type"."app_label" = 'api' ); args=('discussionrating', 'api')
2012-08-01 12:54:19,503 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:19,546 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('discussion rating', 'api', 'discussionrating') RETURNING "django_content_type"."id"; args=(u'discussion rating', 'api', 'discussionrating')
2012-08-01 12:54:19,670 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'photorating'  AND "django_content_type"."app_label" = 'api' ); args=('photorating', 'api')
2012-08-01 12:54:19,710 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:19,751 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('photo rating', 'api', 'photorating') RETURNING "django_content_type"."id"; args=(u'photo rating', 'api', 'photorating')
2012-08-01 12:54:19,876 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'categoryrating'  AND "django_content_type"."app_label" = 'api' ); args=('categoryrating', 'api')
2012-08-01 12:54:19,916 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:19,957 [DEBUG] django.db.backends: (0.040) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('category rating', 'api', 'categoryrating') RETURNING "django_content_type"."id"; args=(u'category rating', 'api', 'categoryrating')
2012-08-01 12:54:20,083 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessrating'  AND "django_content_type"."app_label" = 'api' ); args=('businessrating', 'api')
2012-08-01 12:54:20,126 [DEBUG] django.db.backends: (0.043) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:20,168 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business rating', 'api', 'businessrating') RETURNING "django_content_type"."id"; args=(u'business rating', 'api', 'businessrating')
2012-08-01 12:54:20,298 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27)
2012-08-01 12:54:20,393 [DEBUG] django.db.backends: (0.088) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add business', 7, 'add_business'), ('Can change business', 7, 'change_business'), ('Can delete business', 7, 'delete_business'), ('Can add photo', 8, 'add_photo'), ('Can change photo', 8, 'change_photo'), ('Can delete photo', 8, 'delete_photo'), ('Can add tag', 9, 'add_tag'), ('Can change tag', 9, 'change_tag'), ('Can delete tag', 9, 'delete_tag'), ('Can add business category', 10, 'add_businesscategory'), ('Can change business category', 10, 'change_businesscategory'), ('Can delete business category', 10, 'delete_businesscategory'), ('Can add user subscription', 11, 'add_usersubscription'), ('Can change user subscription', 11, 'change_usersubscription'), ('Can delete user subscription', 11, 'delete_usersubscription'), ('Can add device', 12, 'add_device'), ('Can change device', 12, 'change_device'), ('Can delete device', 12, 'delete_device'), ('Can add allsortz user', 13, 'add_allsortzuser'), ('Can change allsortz user', 13, 'change_allsortzuser'), ('Can delete allsortz user', 13, 'delete_allsortzuser'), ('Can add offer', 14, 'add_offer'), ('Can change offer', 14, 'change_offer'), ('Can delete offer', 14, 'delete_offer'), ('Can add business deal', 15, 'add_businessdeal'), ('Can change business deal', 15, 'change_businessdeal'), ('Can delete business deal', 15, 'delete_businessdeal'), ('Can add business action', 16, 'add_businessaction'), ('Can change business action', 16, 'change_businessaction'), ('Can delete business action', 16, 'delete_businessaction'), ('Can add as user deal', 17, 'add_asuserdeal'), ('Can change as user deal', 17, 'change_asuserdeal'), ('Can delete as user deal', 17, 'delete_asuserdeal'), ('Can add as user action', 18, 'add_asuseraction'), ('Can change as user action', 18, 'change_asuseraction'), ('Can delete as user action', 18, 'delete_asuseraction'), ('Can add discussion', 19, 'add_discussion'), ('Can change discussion', 19, 'change_discussion'), ('Can delete discussion', 19, 'delete_discussion'), ('Can add category discussion', 20, 'add_categorydiscussion'), ('Can change category discussion', 20, 'change_categorydiscussion'), ('Can delete category discussion', 20, 'delete_categorydiscussion'), ('Can add business discussion', 21, 'add_businessdiscussion'), ('Can change business discussion', 21, 'change_businessdiscussion'), ('Can delete business discussion', 21, 'delete_businessdiscussion'), ('Can add photo discussion', 22, 'add_photodiscussion'), ('Can change photo discussion', 22, 'change_photodiscussion'), ('Can delete photo discussion', 22, 'delete_photodiscussion'), ('Can add rating', 23, 'add_rating'), ('Can change rating', 23, 'change_rating'), ('Can delete rating', 23, 'delete_rating'), ('Can add discussion rating', 24, 'add_discussionrating'), ('Can change discussion rating', 24, 'change_discussionrating'), ('Can delete discussion rating', 24, 'delete_discussionrating'), ('Can add photo rating', 25, 'add_photorating'), ('Can change photo rating', 25, 'change_photorating'), ('Can delete photo rating', 25, 'delete_photorating'), ('Can add category rating', 26, 'add_categoryrating'), ('Can change category rating', 26, 'change_categoryrating'), ('Can delete category rating', 26, 'delete_categoryrating'), ('Can add business rating', 27, 'add_businessrating'), ('Can change business rating', 27, 'change_businessrating'), ('Can delete business rating', 27, 'delete_businessrating'); args=(u'Can add business', 7, u'add_business', u'Can change business', 7, u'change_business', u'Can delete business', 7, u'delete_business', u'Can add photo', 8, u'add_photo', u'Can change photo', 8, u'change_photo', u'Can delete photo', 8, u'delete_photo', u'Can add tag', 9, u'add_tag', u'Can change tag', 9, u'change_tag', u'Can delete tag', 9, u'delete_tag', u'Can add business category', 10, u'add_businesscategory', u'Can change business category', 10, u'change_businesscategory', u'Can delete business category', 10, u'delete_businesscategory', u'Can add user subscription', 11, u'add_usersubscription', u'Can change user subscription', 11, u'change_usersubscription', u'Can delete user subscription', 11, u'delete_usersubscription', u'Can add device', 12, u'add_device', u'Can change device', 12, u'change_device', u'Can delete device', 12, u'delete_device', u'Can add allsortz user', 13, u'add_allsortzuser', u'Can change allsortz user', 13, u'change_allsortzuser', u'Can delete allsortz user', 13, u'delete_allsortzuser', u'Can add offer', 14, u'add_offer', u'Can change offer', 14, u'change_offer', u'Can delete offer', 14, u'delete_offer', u'Can add business deal', 15, u'add_businessdeal', u'Can change business deal', 15, u'change_businessdeal', u'Can delete business deal', 15, u'delete_businessdeal', u'Can add business action', 16, u'add_businessaction', u'Can change business action', 16, u'change_businessaction', u'Can delete business action', 16, u'delete_businessaction', u'Can add as user deal', 17, u'add_asuserdeal', u'Can change as user deal', 17, u'change_asuserdeal', u'Can delete as user deal', 17, u'delete_asuserdeal', u'Can add as user action', 18, u'add_asuseraction', u'Can change as user action', 18, u'change_asuseraction', u'Can delete as user action', 18, u'delete_asuseraction', u'Can add discussion', 19, u'add_discussion', u'Can change discussion', 19, u'change_discussion', u'Can delete discussion', 19, u'delete_discussion', u'Can add category discussion', 20, u'add_categorydiscussion', u'Can change category discussion', 20, u'change_categorydiscussion', u'Can delete category discussion', 20, u'delete_categorydiscussion', u'Can add business discussion', 21, u'add_businessdiscussion', u'Can change business discussion', 21, u'change_businessdiscussion', u'Can delete business discussion', 21, u'delete_businessdiscussion', u'Can add photo discussion', 22, u'add_photodiscussion', u'Can change photo discussion', 22, u'change_photodiscussion', u'Can delete photo discussion', 22, u'delete_photodiscussion', u'Can add rating', 23, u'add_rating', u'Can change rating', 23, u'change_rating', u'Can delete rating', 23, u'delete_rating', u'Can add discussion rating', 24, u'add_discussionrating', u'Can change discussion rating', 24, u'change_discussionrating', u'Can delete discussion rating', 24, u'delete_discussionrating', u'Can add photo rating', 25, u'add_photorating', u'Can change photo rating', 25, u'change_photorating', u'Can delete photo rating', 25, u'delete_photorating', u'Can add category rating', 26, u'add_categoryrating', u'Can change category rating', 26, u'change_categoryrating', u'Can delete category rating', 26, u'delete_categoryrating', u'Can add business rating', 27, u'add_businessrating', u'Can change business rating', 27, u'change_businessrating', u'Can delete business rating', 27, u'delete_businessrating')
2012-08-01 12:54:20,527 [DEBUG] django.db.backends: (0.084) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'api'  ORDER BY "django_content_type"."name" ASC; args=('api',)
2012-08-01 12:54:20,571 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'recommendation'  AND "django_content_type"."app_label" = 'recommendation' ); args=('recommendation', 'recommendation')
2012-08-01 12:54:20,611 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:20,653 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('recommendation', 'recommendation', 'recommendation') RETURNING "django_content_type"."id"; args=(u'recommendation', 'recommendation', 'recommendation')
2012-08-01 12:54:20,779 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'businessfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('businessfactor', 'recommendation')
2012-08-01 12:54:20,819 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:20,860 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('business factor', 'recommendation', 'businessfactor') RETURNING "django_content_type"."id"; args=(u'business factor', 'recommendation', 'businessfactor')
2012-08-01 12:54:20,987 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userfactor'  AND "django_content_type"."app_label" = 'recommendation' ); args=('userfactor', 'recommendation')
2012-08-01 12:54:21,028 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:21,070 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user factor', 'recommendation', 'userfactor') RETURNING "django_content_type"."id"; args=(u'user factor', 'recommendation', 'userfactor')
2012-08-01 12:54:21,196 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (28, 29, 30) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(28, 29, 30)
2012-08-01 12:54:21,252 [DEBUG] django.db.backends: (0.056) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add recommendation', 28, 'add_recommendation'), ('Can change recommendation', 28, 'change_recommendation'), ('Can delete recommendation', 28, 'delete_recommendation'), ('Can add business factor', 29, 'add_businessfactor'), ('Can change business factor', 29, 'change_businessfactor'), ('Can delete business factor', 29, 'delete_businessfactor'), ('Can add user factor', 30, 'add_userfactor'), ('Can change user factor', 30, 'change_userfactor'), ('Can delete user factor', 30, 'delete_userfactor'); args=(u'Can add recommendation', 28, u'add_recommendation', u'Can change recommendation', 28, u'change_recommendation', u'Can delete recommendation', 28, u'delete_recommendation', u'Can add business factor', 29, u'add_businessfactor', u'Can change business factor', 29, u'change_businessfactor', u'Can delete business factor', 29, u'delete_businessfactor', u'Can add user factor', 30, u'add_userfactor', u'Can change user factor', 30, u'change_userfactor', u'Can delete user factor', 30, u'delete_userfactor')
2012-08-01 12:54:21,382 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'recommendation'  ORDER BY "django_content_type"."name" ASC; args=('recommendation',)
2012-08-01 12:54:21,426 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'registrationprofile'  AND "django_content_type"."app_label" = 'registration' ); args=('registrationprofile', 'registration')
2012-08-01 12:54:21,466 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:21,514 [DEBUG] django.db.backends: (0.047) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('registration profile', 'registration', 'registrationprofile') RETURNING "django_content_type"."id"; args=(u'registration profile', 'registration', 'registrationprofile')
2012-08-01 12:54:21,642 [DEBUG] django.db.backends: (0.086) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (31) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(31,)
2012-08-01 12:54:21,684 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add registration profile', 31, 'add_registrationprofile'), ('Can change registration profile', 31, 'change_registrationprofile'), ('Can delete registration profile', 31, 'delete_registrationprofile'); args=(u'Can add registration profile', 31, u'add_registrationprofile', u'Can change registration profile', 31, u'change_registrationprofile', u'Can delete registration profile', 31, u'delete_registrationprofile')
2012-08-01 12:54:21,814 [DEBUG] django.db.backends: (0.085) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'registration'  ORDER BY "django_content_type"."name" ASC; args=('registration',)
2012-08-01 12:54:21,857 [DEBUG] django.db.backends: (0.041) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'query'  AND "django_content_type"."app_label" = 'queries' ); args=('query', 'queries')
2012-08-01 12:54:21,902 [DEBUG] django.db.backends: (0.044) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:21,944 [DEBUG] django.db.backends: (0.042) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('query', 'queries', 'query') RETURNING "django_content_type"."id"; args=(u'query', 'queries', 'query')
2012-08-01 12:54:22,072 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'querytag'  AND "django_content_type"."app_label" = 'queries' ); args=('querytag', 'queries')
2012-08-01 12:54:22,112 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:22,153 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('query tag', 'queries', 'querytag') RETURNING "django_content_type"."id"; args=(u'query tag', 'queries', 'querytag')
2012-08-01 12:54:22,278 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'userqueryrelation'  AND "django_content_type"."app_label" = 'queries' ); args=('userqueryrelation', 'queries')
2012-08-01 12:54:22,319 [DEBUG] django.db.backends: (0.040) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:22,360 [DEBUG] django.db.backends: (0.040) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('user query relation', 'queries', 'userqueryrelation') RETURNING "django_content_type"."id"; args=(u'user query relation', 'queries', 'userqueryrelation')
2012-08-01 12:54:22,488 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (32, 33, 34) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(32, 33, 34)
2012-08-01 12:54:22,535 [DEBUG] django.db.backends: (0.045) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add query', 32, 'add_query'), ('Can change query', 32, 'change_query'), ('Can delete query', 32, 'delete_query'), ('Can add query tag', 33, 'add_querytag'), ('Can change query tag', 33, 'change_querytag'), ('Can delete query tag', 33, 'delete_querytag'), ('Can add user query relation', 34, 'add_userqueryrelation'), ('Can change user query relation', 34, 'change_userqueryrelation'), ('Can delete user query relation', 34, 'delete_userqueryrelation'); args=(u'Can add query', 32, u'add_query', u'Can change query', 32, u'change_query', u'Can delete query', 32, u'delete_query', u'Can add query tag', 33, u'add_querytag', u'Can change query tag', 33, u'change_querytag', u'Can delete query tag', 33, u'delete_querytag', u'Can add user query relation', 34, u'add_userqueryrelation', u'Can change user query relation', 34, u'change_userqueryrelation', u'Can delete user query relation', 34, u'delete_userqueryrelation')
2012-08-01 12:54:22,661 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'queries'  ORDER BY "django_content_type"."name" ASC; args=('queries',)
2012-08-01 12:54:22,705 [DEBUG] django.db.backends: (0.042) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'page'  AND "django_content_type"."app_label" = 'wiki' ); args=('page', 'wiki')
2012-08-01 12:54:22,745 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:22,790 [DEBUG] django.db.backends: (0.044) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('page', 'wiki', 'page') RETURNING "django_content_type"."id"; args=(u'page', 'wiki', 'page')
2012-08-01 12:54:22,917 [DEBUG] django.db.backends: (0.084) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (35) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(35,)
2012-08-01 12:54:22,959 [DEBUG] django.db.backends: (0.041) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add page', 35, 'add_page'), ('Can change page', 35, 'change_page'), ('Can delete page', 35, 'delete_page'); args=(u'Can add page', 35, u'add_page', u'Can change page', 35, u'change_page', u'Can delete page', 35, u'delete_page')
2012-08-01 12:54:23,086 [DEBUG] django.db.backends: (0.082) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'wiki'  ORDER BY "django_content_type"."name" ASC; args=('wiki',)
2012-08-01 12:54:23,132 [DEBUG] django.db.backends: (0.043) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = 'logentry'  AND "django_content_type"."app_label" = 'admin' ); args=('logentry', 'admin')
2012-08-01 12:54:23,171 [DEBUG] django.db.backends: (0.039) SAVEPOINT s140735169679744_x1; args=()
2012-08-01 12:54:23,213 [DEBUG] django.db.backends: (0.041) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES ('log entry', 'admin', 'logentry') RETURNING "django_content_type"."id"; args=(u'log entry', 'admin', 'logentry')
2012-08-01 12:54:23,346 [DEBUG] django.db.backends: (0.082) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (36) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(36,)
2012-08-01 12:54:23,389 [DEBUG] django.db.backends: (0.042) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 36, 'add_logentry'), ('Can change log entry', 36, 'change_logentry'), ('Can delete log entry', 36, 'delete_logentry'); args=(u'Can add log entry', 36, u'add_logentry', u'Can change log entry', 36, u'change_logentry', u'Can delete log entry', 36, u'delete_logentry')
2012-08-01 12:54:23,514 [DEBUG] django.db.backends: (0.081) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'  ORDER BY "django_content_type"."name" ASC; args=('admin',)
2012-08-01 12:54:23,571 [DEBUG] django.db.backends: (0.051) CREATE INDEX "auth_permission_content_type_id" ON "auth_permission" ("content_type_id");; args=()
2012-08-01 12:54:23,707 [DEBUG] django.db.backends: (0.092) CREATE INDEX "auth_group_permissions_group_id" ON "auth_group_permissions" ("group_id");; args=()
2012-08-01 12:54:23,755 [DEBUG] django.db.backends: (0.048) CREATE INDEX "auth_group_permissions_permission_id" ON "auth_group_permissions" ("permission_id");; args=()
2012-08-01 12:54:23,891 [DEBUG] django.db.backends: (0.092) CREATE INDEX "auth_user_user_permissions_user_id" ON "auth_user_user_permissions" ("user_id");; args=()
2012-08-01 12:54:23,943 [DEBUG] django.db.backends: (0.052) CREATE INDEX "auth_user_user_permissions_permission_id" ON "auth_user_user_permissions" ("permission_id");; args=()
2012-08-01 12:54:24,083 [DEBUG] django.db.backends: (0.096) CREATE INDEX "auth_user_groups_user_id" ON "auth_user_groups" ("user_id");; args=()
2012-08-01 12:54:24,135 [DEBUG] django.db.backends: (0.052) CREATE INDEX "auth_user_groups_group_id" ON "auth_user_groups" ("group_id");; args=()
2012-08-01 12:54:24,276 [DEBUG] django.db.backends: (0.097) CREATE INDEX "django_session_expire_date" ON "django_session" ("expire_date");; args=()
2012-08-01 12:54:24,410 [DEBUG] django.db.backends: (0.090) SELECT AddGeometryColumn('api_business', 'geom', 4326, 'POINT', 2);; args=()
2012-08-01 12:54:24,450 [DEBUG] django.db.backends: (0.040) ALTER TABLE "api_business" ALTER "geom" SET NOT NULL;; args=()
2012-08-01 12:54:24,498 [DEBUG] django.db.backends: (0.048) CREATE INDEX "api_business_geom_id" ON "api_business" USING GIST ( "geom" GIST_GEOMETRY_OPS );; args=()
2012-08-01 12:54:24,635 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_photo_user_id" ON "api_photo" ("user_id");; args=()
2012-08-01 12:54:24,687 [DEBUG] django.db.backends: (0.051) CREATE INDEX "api_photo_business_id" ON "api_photo" ("business_id");; args=()
2012-08-01 12:54:24,823 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_tag_creator_id" ON "api_tag" ("creator_id");; args=()
2012-08-01 12:54:24,959 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_businesscategory_business_id" ON "api_businesscategory" ("business_id");; args=()
2012-08-01 12:54:25,011 [DEBUG] django.db.backends: (0.052) CREATE INDEX "api_businesscategory_tag_id" ON "api_businesscategory" ("tag_id");; args=()
2012-08-01 12:54:25,147 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_usersubscription_user_id" ON "api_usersubscription" ("user_id");; args=()
2012-08-01 12:54:25,199 [DEBUG] django.db.backends: (0.051) CREATE INDEX "api_usersubscription_tag_id" ON "api_usersubscription" ("tag_id");; args=()
2012-08-01 12:54:25,337 [DEBUG] django.db.backends: (0.093) CREATE INDEX "api_allsortzuser_device_id" ON "api_allsortzuser" ("device_id");; args=()
2012-08-01 12:54:25,471 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_offer_business_id" ON "api_offer" ("business_id");; args=()
2012-08-01 12:54:25,608 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_businessaction_reward_deal_id" ON "api_businessaction" ("reward_deal_id");; args=()
2012-08-01 12:54:25,743 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_asuserdeal_ASuser_id" ON "api_asuserdeal" ("ASuser_id");; args=()
2012-08-01 12:54:25,795 [DEBUG] django.db.backends: (0.052) CREATE INDEX "api_asuserdeal_businessdeal_id" ON "api_asuserdeal" ("businessdeal_id");; args=()
2012-08-01 12:54:25,931 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_asuseraction_ASuser_id" ON "api_asuseraction" ("ASuser_id");; args=()
2012-08-01 12:54:25,983 [DEBUG] django.db.backends: (0.052) CREATE INDEX "api_asuseraction_action_id" ON "api_asuseraction" ("action_id");; args=()
2012-08-01 12:54:26,026 [DEBUG] django.db.backends: (0.042) SELECT AddGeometryColumn('api_asuseraction', 'location', 4326, 'POINT', 2);; args=()
2012-08-01 12:54:26,066 [DEBUG] django.db.backends: (0.040) ALTER TABLE "api_asuseraction" ALTER "location" SET NOT NULL;; args=()
2012-08-01 12:54:26,107 [DEBUG] django.db.backends: (0.041) CREATE INDEX "api_asuseraction_location_id" ON "api_asuseraction" USING GIST ( "location" GIST_GEOMETRY_OPS );; args=()
2012-08-01 12:54:26,243 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_discussion_user_id" ON "api_discussion" ("user_id");; args=()
2012-08-01 12:54:26,295 [DEBUG] django.db.backends: (0.051) CREATE INDEX "api_discussion_reply_to_id" ON "api_discussion" ("reply_to_id");; args=()
2012-08-01 12:54:26,436 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_categorydiscussion_businesstag_id" ON "api_categorydiscussion" ("businesstag_id");; args=()
2012-08-01 12:54:26,575 [DEBUG] django.db.backends: (0.094) CREATE INDEX "api_businessdiscussion_business_id" ON "api_businessdiscussion" ("business_id");; args=()
2012-08-01 12:54:26,711 [DEBUG] django.db.backends: (0.091) CREATE INDEX "api_photodiscussion_photo_id" ON "api_photodiscussion" ("photo_id");; args=()
2012-08-01 12:54:26,847 [DEBUG] django.db.backends: (0.090) CREATE INDEX "api_rating_user_id" ON "api_rating" ("user_id");; args=()
2012-08-01 12:54:26,983 [DEBUG] django.db.backends: (0.092) CREATE INDEX "api_discussionrating_discussion_id" ON "api_discussionrating" ("discussion_id");; args=()
2012-08-01 12:54:27,140 [DEBUG] django.db.backends: (0.100) CREATE INDEX "api_photorating_photo_id" ON "api_photorating" ("photo_id");; args=()
2012-08-01 12:54:27,291 [DEBUG] django.db.backends: (0.093) CREATE INDEX "api_categoryrating_category_id" ON "api_categoryrating" ("category_id");; args=()
2012-08-01 12:54:27,427 [DEBUG] django.db.backends: (0.094) CREATE INDEX "api_businessrating_business_id" ON "api_businessrating" ("business_id");; args=()
2012-08-01 12:54:27,563 [DEBUG] django.db.backends: (0.091) CREATE INDEX "recommendation_recommendation_business_id" ON "recommendation_recommendation" ("business_id");; args=()
2012-08-01 12:54:27,619 [DEBUG] django.db.backends: (0.056) CREATE INDEX "recommendation_recommendation_username_id" ON "recommendation_recommendation" ("username_id");; args=()
2012-08-01 12:54:27,767 [DEBUG] django.db.backends: (0.101) CREATE INDEX "recommendation_businessfactor_business_id" ON "recommendation_businessfactor" ("business_id");; args=()
2012-08-01 12:54:28,208 [DEBUG] django.db.backends: (0.397) CREATE INDEX "recommendation_userfactor_user_id" ON "recommendation_userfactor" ("user_id");; args=()
2012-08-01 12:54:28,343 [DEBUG] django.db.backends: (0.091) CREATE INDEX "queries_query_creator_id" ON "queries_query" ("creator_id");; args=()
2012-08-01 12:54:28,479 [DEBUG] django.db.backends: (0.092) CREATE INDEX "queries_querytag_query_id" ON "queries_querytag" ("query_id");; args=()
2012-08-01 12:54:28,531 [DEBUG] django.db.backends: (0.051) CREATE INDEX "queries_querytag_tag_id" ON "queries_querytag" ("tag_id");; args=()
2012-08-01 12:54:28,676 [DEBUG] django.db.backends: (0.101) CREATE INDEX "queries_userqueryrelation_user_id" ON "queries_userqueryrelation" ("user_id");; args=()
2012-08-01 12:54:28,728 [DEBUG] django.db.backends: (0.051) CREATE INDEX "queries_userqueryrelation_query_id" ON "queries_userqueryrelation" ("query_id");; args=()
2012-08-01 12:54:28,868 [DEBUG] django.db.backends: (0.092) CREATE INDEX "wiki_page_category_id" ON "wiki_page" ("category_id");; args=()
2012-08-01 12:54:29,004 [DEBUG] django.db.backends: (0.091) CREATE INDEX "django_admin_log_user_id" ON "django_admin_log" ("user_id");; args=()
2012-08-01 12:54:29,055 [DEBUG] django.db.backends: (0.051) CREATE INDEX "django_admin_log_content_type_id" ON "django_admin_log" ("content_type_id");; args=()
2012-08-01 12:54:29,193 [DEBUG] django.db.backends: (0.080) SET CONSTRAINTS ALL IMMEDIATE; args=()
2012-08-01 12:54:29,233 [DEBUG] django.db.backends: (0.040) SET CONSTRAINTS ALL DEFERRED; args=()
2012-08-01 12:54:32,827 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:54:35,612 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:35,658 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:35,658 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:54:35,780 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:54:35,947 [DEBUG] django.db.backends: (0.044) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 12:54:36,003 [DEBUG] django.db.backends: (0.054) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f70f90>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f7c5d0>, 4828.032)
2012-08-01 12:54:46,110 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:46,111 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:54:46,274 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 12:54:46,876 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Hoagie Haven', '2012-08-01 16:54:46.821419+00:00', 40.352252,  -74.651894, ST_GeomFromEWKB('\x0101000020e61000005a9d9ca1b8a952c0adf9f197162d4440'::bytea), '242 Nassau St.', 'Princeton ', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Hoagie Haven', u'2012-08-01 16:54:46.821419+00:00', 40.352252, -74.651894, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f81490>, '242 Nassau St.', 'Princeton ', 'NJ', '', '08542')
2012-08-01 12:54:47,007 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:47,053 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:47,097 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:54:47.053547+00:00', 'The Bottom Line', '') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:54:47.053547+00:00', 'The Bottom Line', '')
2012-08-01 12:54:47,242 [DEBUG] django.db.backends: (0.086) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:47,287 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:54:47,343 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (1, 1) RETURNING "api_businesscategory"."id"; args=(1, 1)
2012-08-01 12:54:47,471 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:54:47,520 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 1) RETURNING "wiki_page"."id"; args=('The Bottom Line', '', '', 1)
2012-08-01 12:54:47,847 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 12:54:48,013 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('George''s', '2012-08-01 16:54:47.966841+00:00', 40.3522578,  -74.6517694, ST_GeomFromEWKB('\x0101000020e610000026620097b6a952c0656199c8162d4440'::bytea), '244 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=("George's", u'2012-08-01 16:54:47.966841+00:00', 40.3522578, -74.6517694, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f818d0>, '244 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:48,140 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:48,187 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:48,231 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 12:54:48,273 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (2, 1) RETURNING "api_businesscategory"."id"; args=(2, 1)
2012-08-01 12:54:48,405 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 12:54:48,449 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 2) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 2)
2012-08-01 12:54:49,284 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 12:54:49,535 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Tortuga''s', '2012-08-01 16:54:49.489801+00:00', 40.356428,  -74.66485, ST_GeomFromEWKB('\x0101000020e6100000b8af03e78caa52c079b0c56e9f2d4440'::bytea), '41 Leigh Avenue', 'Princeton', 'NJ', '', '08540') RETURNING "api_business"."id"; args=("Tortuga's", u'2012-08-01 16:54:49.489801+00:00', 40.356428, -74.66485, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f7ca90>, '41 Leigh Avenue', 'Princeton', 'NJ', '', '08540')
2012-08-01 12:54:49,663 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:49,709 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:49,753 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 12:54:49,795 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (3, 1) RETURNING "api_businesscategory"."id"; args=(3, 1)
2012-08-01 12:54:49,931 [DEBUG] django.db.backends: (0.087) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 12:54:49,973 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 3) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 3)
2012-08-01 12:54:50,381 [DEBUG] django.db.backends: (0.085) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 12:54:50,552 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Fruity Yogurt', '2012-08-01 16:54:50.506087+00:00', 40.350965,  -74.656608, ST_GeomFromEWKB('\x0101000020e6100000b0928fdd05aa52c03485ce6bec2c4440'::bytea), '166 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Fruity Yogurt', u'2012-08-01 16:54:50.506087+00:00', 40.350965, -74.656608, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f81690>, '166 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:50,685 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:50,733 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:50,779 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 12:54:50,821 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (4, 1) RETURNING "api_businesscategory"."id"; args=(4, 1)
2012-08-01 12:54:50,953 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 12:54:50,996 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 4) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 4)
2012-08-01 12:54:51,576 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 12:54:51,746 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Qdoba', '2012-08-01 16:54:51.700964+00:00', 40.3503172,  -74.6580672, ST_GeomFromEWKB('\x0101000020e610000080a4e3c51daa52c0f79caa31d72c4440'::bytea), '140 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Qdoba', u'2012-08-01 16:54:51.700964+00:00', 40.3503172, -74.6580672, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f7ca50>, '140 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:51,876 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:51,922 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:51,967 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 12:54:52,009 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (5, 1) RETURNING "api_businesscategory"."id"; args=(5, 1)
2012-08-01 12:54:52,135 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 12:54:52,177 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 5) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 5)
2012-08-01 12:54:52,652 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 12:54:52,831 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('The Bent Spoon', '2012-08-01 16:54:52.785020+00:00', 40.3499051,  -74.6617128, ST_GeomFromEWKB('\x0101000020e61000000ed6a48059aa52c0109ab8b0c92c4440'::bytea), '35 Palmer Square W', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('The Bent Spoon', u'2012-08-01 16:54:52.785020+00:00', 40.3499051, -74.6617128, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b890>, '35 Palmer Square W', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:52,965 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:53,020 [DEBUG] django.db.backends: (0.053) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:53,065 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 12:54:53,109 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (6, 1) RETURNING "api_businesscategory"."id"; args=(6, 1)
2012-08-01 12:54:53,246 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 12:54:53,295 [DEBUG] django.db.backends: (0.048) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 6) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 6)
2012-08-01 12:54:53,685 [DEBUG] django.db.backends: (0.091) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 12:54:53,856 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Naked Pizza', '2012-08-01 16:54:53.810583+00:00', 40.351052,  -74.655989, ST_GeomFromEWKB('\x0101000020e61000004a6249b9fba952c003999d45ef2c4440'::bytea), '180 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Naked Pizza', u'2012-08-01 16:54:53.810583+00:00', 40.351052, -74.655989, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b690>, '180 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:53,989 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:54,034 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:54,077 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 12:54:54,118 [DEBUG] django.db.backends: (0.040) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (7, 1) RETURNING "api_businesscategory"."id"; args=(7, 1)
2012-08-01 12:54:54,251 [DEBUG] django.db.backends: (0.083) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 12:54:54,294 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 7) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 7)
2012-08-01 12:54:54,868 [DEBUG] django.db.backends: (0.085) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 12:54:55,123 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Panera Bread', '2012-08-01 16:54:55.076762+00:00', 40.3502926,  -74.6583107, ST_GeomFromEWKB('\x0101000020e6100000d7c633c321aa52c0f2834e63d62c4440'::bytea), '136 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Panera Bread', u'2012-08-01 16:54:55.076762+00:00', 40.3502926, -74.6583107, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b790>, '136 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:55,254 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:55,300 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:55,344 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 12:54:55,386 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (8, 1) RETURNING "api_businesscategory"."id"; args=(8, 1)
2012-08-01 12:54:55,519 [DEBUG] django.db.backends: (0.083) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 12:54:55,562 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 8) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 8)
2012-08-01 12:54:56,354 [DEBUG] django.db.backends: (0.087) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 12:54:56,523 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Starbucks', '2012-08-01 16:54:56.477180+00:00', 40.350186,  -74.659545, ST_GeomFromEWKB('\x0101000020e6100000614f3bfc35aa52c02fc214e5d22c4440'::bytea), '100 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Starbucks', u'2012-08-01 16:54:56.477180+00:00', 40.350186, -74.659545, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8bc50>, '100 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:56,653 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:56,699 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:56,743 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 12:54:56,785 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (9, 1) RETURNING "api_businesscategory"."id"; args=(9, 1)
2012-08-01 12:54:56,918 [DEBUG] django.db.backends: (0.083) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 12:54:56,961 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 9) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 9)
2012-08-01 12:54:58,195 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 12:54:58,366 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Olives', '2012-08-01 16:54:58.320510+00:00', 40.3504702,  -74.6602182, ST_GeomFromEWKB('\x0101000020e6100000564ed60341aa52c07d9c1f35dc2c4440'::bytea), '22 Witherspoon St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Olives', u'2012-08-01 16:54:58.320510+00:00', 40.3504702, -74.6602182, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8be90>, '22 Witherspoon St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:54:58,499 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:54:58,547 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:54:58,591 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 12:54:58,632 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (10, 1) RETURNING "api_businesscategory"."id"; args=(10, 1)
2012-08-01 12:54:58,759 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 12:54:58,801 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 10) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 10)
2012-08-01 12:54:59,753 [DEBUG] django.db.backends: (0.106) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 12:54:59,931 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Small World Coffee', '2012-08-01 16:54:59.876563+00:00', 40.3502194,  -74.6599773, ST_GeomFromEWKB('\x0101000020e61000008de66d113daa52c05eb642fdd32c4440'::bytea), '14 Witherspoon St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Small World Coffee', u'2012-08-01 16:54:59.876563+00:00', 40.3502194, -74.6599773, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b710>, '14 Witherspoon St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:55:00,070 [DEBUG] django.db.backends: (0.089) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:00,116 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:00,160 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 12:55:00,203 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (11, 1) RETURNING "api_businesscategory"."id"; args=(11, 1)
2012-08-01 12:55:00,336 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 12:55:00,378 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 11) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 11)
2012-08-01 12:55:01,011 [DEBUG] django.db.backends: (0.139) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 12:55:01,190 [DEBUG] django.db.backends: (0.055) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Thomas Sweet', '2012-08-01 16:55:01.135095+00:00', 40.3507703,  -74.655716, ST_GeomFromEWKB('\x0101000020e6100000b1dd3d40f7a952c03d748b0ae62c4440'::bytea), '179 Nassau St.', 'Princeton', 'NJ', '', '08544') RETURNING "api_business"."id"; args=('Thomas Sweet', u'2012-08-01 16:55:01.135095+00:00', 40.3507703, -74.655716, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8bc90>, '179 Nassau St.', 'Princeton', 'NJ', '', '08544')
2012-08-01 12:55:01,386 [DEBUG] django.db.backends: (0.140) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:01,433 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:01,479 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 12:55:01,521 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (12, 1) RETURNING "api_businesscategory"."id"; args=(12, 1)
2012-08-01 12:55:01,657 [DEBUG] django.db.backends: (0.085) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 12:55:01,701 [DEBUG] django.db.backends: (0.043) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 12) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 12)
2012-08-01 12:55:01,913 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 12:55:02,453 [DEBUG] django.db.backends: (0.321) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Mehek', '2012-08-01 16:55:02.131628+00:00', 40.3507055,  -74.6565555, ST_GeomFromEWKB('\x0101000020e610000092205c0105aa52c07f83f6eae32c4440'::bytea), '164 Nassaus St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Mehek', u'2012-08-01 16:55:02.131628+00:00', 40.3507055, -74.6565555, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b7d0>, '164 Nassaus St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:55:02,588 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:02,635 [DEBUG] django.db.backends: (0.047) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:02,680 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 12:55:02,724 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (13, 1) RETURNING "api_businesscategory"."id"; args=(13, 1)
2012-08-01 12:55:02,898 [DEBUG] django.db.backends: (0.101) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 12:55:02,941 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 13) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 13)
2012-08-01 12:55:03,628 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 12:55:03,797 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Thai Village', '2012-08-01 16:55:03.750851+00:00', 40.3518948,  -74.6522527, ST_GeomFromEWKB('\x0101000020e610000093ce1b82bea952c0f4d088e30a2d4440'::bytea), '235 Nassau St.', 'Princeton', 'NJ', '', '08540') RETURNING "api_business"."id"; args=('Thai Village', u'2012-08-01 16:55:03.750851+00:00', 40.3518948, -74.6522527, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8ba90>, '235 Nassau St.', 'Princeton', 'NJ', '', '08540')
2012-08-01 12:55:03,924 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:03,971 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:04,015 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 12:55:04,057 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (14, 1) RETURNING "api_businesscategory"."id"; args=(14, 1)
2012-08-01 12:55:04,190 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 12:55:04,232 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 14) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 14)
2012-08-01 12:55:04,875 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 12:55:05,046 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Tomo Sushi', '2012-08-01 16:55:05.000501+00:00', 40.3520668,  -74.6524244, ST_GeomFromEWKB('\x0101000020e610000032474552c1a952c0f2006086102d4440'::bytea), '236 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Tomo Sushi', u'2012-08-01 16:55:05.000501+00:00', 40.3520668, -74.6524244, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b810>, '236 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:55:05,179 [DEBUG] django.db.backends: (0.084) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:05,226 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:05,271 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 12:55:05,315 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (15, 1) RETURNING "api_businesscategory"."id"; args=(15, 1)
2012-08-01 12:55:05,449 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 12:55:05,491 [DEBUG] django.db.backends: (0.041) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 15) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 15)
2012-08-01 12:55:05,844 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 12:55:07,664 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Subway', '2012-08-01 16:55:07.619359+00:00', 40.3503702,  -74.6601797, ST_GeomFromEWKB('\x0101000020e6100000eb3e5b6240aa52c01a3f43eed82c4440'::bytea), '18 Witherspoon St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Subway', u'2012-08-01 16:55:07.619359+00:00', 40.3503702, -74.6601797, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8b650>, '18 Witherspoon St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:55:07,798 [DEBUG] django.db.backends: (0.082) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:07,844 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:07,889 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 12:55:07,930 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (16, 1) RETURNING "api_businesscategory"."id"; args=(16, 1)
2012-08-01 12:55:08,060 [DEBUG] django.db.backends: (0.084) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 12:55:08,103 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 16) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 16)
2012-08-01 12:55:08,681 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 12:55:08,850 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Pjs Pancake House', '2012-08-01 16:55:08.804739+00:00', 40.3504652,  -74.6577561, ST_GeomFromEWKB('\x0101000020e6100000a68f0aad18aa52c06c312e0bdc2c4440'::bytea), '154 Nassau St.', 'Princeton', 'NJ', '', '08542') RETURNING "api_business"."id"; args=('Pjs Pancake House', u'2012-08-01 16:55:08.804739+00:00', 40.3504652, -74.6577561, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8bd50>, '154 Nassau St.', 'Princeton', 'NJ', '', '08542')
2012-08-01 12:55:08,993 [DEBUG] django.db.backends: (0.091) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:09,039 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:09,083 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 12:55:09,125 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (17, 1) RETURNING "api_businesscategory"."id"; args=(17, 1)
2012-08-01 12:55:09,258 [DEBUG] django.db.backends: (0.085) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 12:55:09,301 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 17) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 17)
2012-08-01 12:55:09,674 [DEBUG] django.db.backends: (0.085) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 12:55:09,893 [DEBUG] django.db.backends: (0.046) INSERT INTO "api_business" ("name", "date", "lat", "lon", "geom", "address", "city", "state", "phone", "zipcode") VALUES ('Osteria Procaccini', '2012-08-01 16:55:09.846708+00:00', 40.3756804,  -74.6132574, ST_GeomFromEWKB('\x0101000020e6100000eb41f79b3fa752c0c5df9b4b16304440'::bytea), '4428 Rt 27 N', 'Kingston', 'NJ', '', '08540') RETURNING "api_business"."id"; args=('Osteria Procaccini', u'2012-08-01 16:55:09.846708+00:00', 40.3756804, -74.6132574, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f8be10>, '4428 Rt 27 N', 'Kingston', 'NJ', '', '08540')
2012-08-01 12:55:10,023 [DEBUG] django.db.backends: (0.083) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 12:55:10,068 [DEBUG] django.db.backends: (0.043) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:10,112 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 12:55:10,154 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_businesscategory" ("business_id", "tag_id") VALUES (18, 1) RETURNING "api_businesscategory"."id"; args=(18, 1)
2012-08-01 12:55:10,287 [DEBUG] django.db.backends: (0.082) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 12:55:10,330 [DEBUG] django.db.backends: (0.042) INSERT INTO "wiki_page" ("name", "content", "rendered", "category_id") VALUES ('The Bottom Line', '', '', 18) RETURNING "wiki_page"."id"; args=(u'The Bottom Line', '', '', 18)
2012-08-01 12:55:10,677 [DEBUG] django.db.backends: (0.088) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 12:55:10,720 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:10.677701+00:00', 'Italian', 'italian.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:10.677701+00:00', 'Italian', 'italian.png')
2012-08-01 12:55:10,882 [DEBUG] django.db.backends: (0.112) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 12:55:10,924 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:10.883063+00:00', 'Mexican', 'mexican.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:10.883063+00:00', 'Mexican', 'mexican.png')
2012-08-01 12:55:11,050 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 12:55:11,091 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:11.050940+00:00', 'Local', 'local.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:11.050940+00:00', 'Local', 'local.png')
2012-08-01 12:55:11,217 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 12:55:11,259 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:11.218229+00:00', 'Authentic', 'authentic.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:11.218229+00:00', 'Authentic', 'authentic.png')
2012-08-01 12:55:11,384 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 12:55:11,427 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:11.385355+00:00', 'Buffet', 'buffet.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:11.385355+00:00', 'Buffet', 'buffet.png')
2012-08-01 12:55:11,553 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 12:55:11,595 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:11.554372+00:00', 'Value', 'value.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:11.554372+00:00', 'Value', 'value.png')
2012-08-01 12:55:11,723 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 12:55:11,766 [DEBUG] django.db.backends: (0.043) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:11.723993+00:00', 'Chinese', 'chinese.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:11.723993+00:00', 'Chinese', 'chinese.png')
2012-08-01 12:55:11,894 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 12:55:11,937 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:11.895523+00:00', 'Sushi', 'sushi.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:11.895523+00:00', 'Sushi', 'sushi.png')
2012-08-01 12:55:12,062 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 12:55:12,105 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:12.063437+00:00', 'Fast', 'fast.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:12.063437+00:00', 'Fast', 'fast.png')
2012-08-01 12:55:12,230 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 12:55:12,272 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:12.230627+00:00', 'Cocktails', 'cocktails.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:12.230627+00:00', 'Cocktails', 'cocktails.png')
2012-08-01 12:55:12,408 [DEBUG] django.db.backends: (0.091) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 12:55:12,450 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:12.408941+00:00', 'Dessert', 'dessert.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:12.408941+00:00', 'Dessert', 'dessert.png')
2012-08-01 12:55:12,576 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 12:55:12,959 [DEBUG] django.db.backends: (0.383) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:12.576893+00:00', 'Coffee', 'coffee.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:12.576893+00:00', 'Coffee', 'coffee.png')
2012-08-01 12:55:13,110 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 12:55:13,461 [DEBUG] django.db.backends: (0.350) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:13.111052+00:00', 'Sandwiches', 'sandwiches.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:13.111052+00:00', 'Sandwiches', 'sandwiches.png')
2012-08-01 12:55:13,589 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 12:55:13,961 [DEBUG] django.db.backends: (0.371) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:13.590047+00:00', 'Pizza', 'pizza.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:13.590047+00:00', 'Pizza', 'pizza.png')
2012-08-01 12:55:14,090 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 12:55:14,153 [DEBUG] django.db.backends: (0.062) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:14.091215+00:00', 'Seafood', 'seafood.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:14.091215+00:00', 'Seafood', 'seafood.png')
2012-08-01 12:55:14,285 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 12:55:14,331 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:14.285901+00:00', 'Classy', 'classy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:14.285901+00:00', 'Classy', 'classy.png')
2012-08-01 12:55:14,461 [DEBUG] django.db.backends: (0.086) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 12:55:14,505 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:14.462418+00:00', 'Vegetarian', 'vegetarian.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:14.462418+00:00', 'Vegetarian', 'vegetarian.png')
2012-08-01 12:55:14,630 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 12:55:14,673 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:14.631379+00:00', 'Party', 'party.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:14.631379+00:00', 'Party', 'party.png')
2012-08-01 12:55:14,813 [DEBUG] django.db.backends: (0.093) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 12:55:14,855 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:14.814135+00:00', 'Carnivore', 'steak.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:14.814135+00:00', 'Carnivore', 'steak.png')
2012-08-01 12:55:14,983 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 12:55:15,025 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:14.984368+00:00', 'Wine', 'wine.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:14.984368+00:00', 'Wine', 'wine.png')
2012-08-01 12:55:15,164 [DEBUG] django.db.backends: (0.091) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 12:55:15,209 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:15.165403+00:00', 'Healthy', 'healthy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:15.165403+00:00', 'Healthy', 'healthy.png')
2012-08-01 12:55:15,344 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 12:55:15,387 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:15.345625+00:00', 'American', 'american.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:15.345625+00:00', 'American', 'american.png')
2012-08-01 12:55:15,519 [DEBUG] django.db.backends: (0.087) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 12:55:15,561 [DEBUG] django.db.backends: (0.041) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:15.519888+00:00', 'Ice Cream', 'icecream.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:15.519888+00:00', 'Ice Cream', 'icecream.png')
2012-08-01 12:55:15,696 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 12:55:15,739 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:15.696791+00:00', 'Spicy', 'spicy.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:15.696791+00:00', 'Spicy', 'spicy.png')
2012-08-01 12:55:15,865 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 12:55:15,908 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:15.866321+00:00', 'Bakery', 'bakery.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:15.866321+00:00', 'Bakery', 'bakery.png')
2012-08-01 12:55:16,033 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 12:55:16,075 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:16.033593+00:00', 'Sweets', 'sweets.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:16.033593+00:00', 'Sweets', 'sweets.png')
2012-08-01 12:55:16,451 [DEBUG] django.db.backends: (0.331) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 12:55:16,493 [DEBUG] django.db.backends: (0.042) INSERT INTO "api_tag" ("creator_id", "date", "descr", "icon") VALUES (1, '2012-08-01 16:55:16.451893+00:00', 'WiFi', 'wifi.png') RETURNING "api_tag"."id"; args=(1, u'2012-08-01 16:55:16.451893+00:00', 'WiFi', 'wifi.png')
2012-08-01 12:55:17,074 [DEBUG] django.db.backends: (0.525) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:17,120 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 12:55:17,167 [DEBUG] django.db.backends: (0.046) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 16:55:17.121445+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 16:55:17.121445+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:17,293 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 16:55:17.209125+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 16:55:17.209125+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:17,424 [DEBUG] django.db.backends: (0.088) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 16:55:17.336141+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 16:55:17.336141+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:17,553 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 16:55:17.468332+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 16:55:17.468332+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:17,683 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 16:55:17.598510+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 16:55:17.598510+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:17,811 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 16:55:17.727989+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 16:55:17.727989+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:17,940 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 16:55:17.856207+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 16:55:17.856207+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,071 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 16:55:17.986091+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 16:55:17.986091+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,200 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 16:55:18.115842+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 16:55:18.115842+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,330 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 16:55:18.244780+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 16:55:18.244780+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,459 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 16:55:18.375774+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 16:55:18.375774+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,589 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 16:55:18.504028+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 16:55:18.504028+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,715 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 16:55:18.632073+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 16:55:18.632073+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,846 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 16:55:18.761833+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 16:55:18.761833+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:18,972 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 16:55:18.888429+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 16:55:18.888429+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,100 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 16:55:19.015366+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 16:55:19.015366+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,228 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 16:55:19.143764+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 16:55:19.143764+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,358 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 16:55:19.274257+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 16:55:19.274257+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,488 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 16:55:19.405137+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 16:55:19.405137+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,624 [DEBUG] django.db.backends: (0.092) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 16:55:19.532282+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 16:55:19.532282+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,751 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 16:55:19.668321+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 16:55:19.668321+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:19,882 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 16:55:19.797863+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 16:55:19.797863+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:20,007 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 16:55:19.924512+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 16:55:19.924512+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:20,136 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 16:55:20.051179+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 16:55:20.051179+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:20,264 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 16:55:20.180326+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 16:55:20.180326+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:20,446 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 16:55:20.362267+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 16:55:20.362267+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:20,577 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 16:55:20.493036+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 16:55:20.493036+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:20,724 [DEBUG] django.db.backends: (0.092) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 16:55:20.632027+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 16:55:20.632027+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 12:55:21,833 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:55:29,616 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 12:55:35,545 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:35,592 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 12:55:35,593 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:55:36,056 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 12:55:36,224 [DEBUG] django.db.backends: (0.043) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 12:55:36,285 [DEBUG] django.db.backends: (0.059) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f70b10>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103f7e590>, 4828.032)
2012-08-01 12:55:36,329 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 3 ); args=(True, 3)
2012-08-01 12:55:36,373 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:36,416 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:36,461 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:37,214 [DEBUG] django.db.backends: (0.751) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:37,260 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 12:55:37,303 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 3 ); args=(1, 3)
2012-08-01 12:55:37,346 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 3 ; args=(3,)
2012-08-01 12:55:37,715 [DEBUG] django.db.backends: (0.367) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:37,759 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 3  AND "api_rating"."rating" BETWEEN 1 and 5); args=(3, 1, 5)
2012-08-01 12:55:37,801 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:37,843 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 12:55:37,886 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:37,930 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 12:55:37,973 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 6 ); args=(True, 6)
2012-08-01 12:55:38,014 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:38,056 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:38,098 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:38,140 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:38,184 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 12:55:38,227 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 6 ); args=(1, 6)
2012-08-01 12:55:38,270 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 6 ; args=(6,)
2012-08-01 12:55:38,617 [DEBUG] django.db.backends: (0.346) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:38,661 [DEBUG] django.db.backends: (0.041) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 6  AND "api_rating"."rating" BETWEEN 1 and 5); args=(6, 1, 5)
2012-08-01 12:55:38,704 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:38,749 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 12:55:38,791 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:38,835 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 12:55:38,876 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 10 ); args=(True, 10)
2012-08-01 12:55:38,919 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:38,963 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:39,005 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:39,048 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:39,094 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 12:55:39,137 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 10 ); args=(1, 10)
2012-08-01 12:55:39,180 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 10 ; args=(10,)
2012-08-01 12:55:39,224 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:39,268 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 10  AND "api_rating"."rating" BETWEEN 1 and 5); args=(10, 1, 5)
2012-08-01 12:55:39,311 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:39,360 [DEBUG] django.db.backends: (0.047) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 12:55:39,403 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:39,447 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 12:55:39,491 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 16 ); args=(True, 16)
2012-08-01 12:55:39,534 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:39,578 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:39,621 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:39,664 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:39,710 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 12:55:39,755 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 16 ); args=(1, 16)
2012-08-01 12:55:39,798 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 16 ; args=(16,)
2012-08-01 12:55:39,840 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:39,884 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 16  AND "api_rating"."rating" BETWEEN 1 and 5); args=(16, 1, 5)
2012-08-01 12:55:39,927 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:39,970 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 12:55:40,012 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:40,056 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 12:55:40,099 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 11 ); args=(True, 11)
2012-08-01 12:55:40,143 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:40,186 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:40,234 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:40,287 [DEBUG] django.db.backends: (0.052) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:40,330 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 12:55:40,375 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 11 ); args=(1, 11)
2012-08-01 12:55:40,418 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 11 ; args=(11,)
2012-08-01 12:55:40,463 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:40,507 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 11  AND "api_rating"."rating" BETWEEN 1 and 5); args=(11, 1, 5)
2012-08-01 12:55:40,549 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:40,593 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 12:55:40,636 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:40,679 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 12:55:40,721 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 9 ); args=(True, 9)
2012-08-01 12:55:40,763 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:40,805 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:40,848 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:40,890 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:40,933 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 12:55:40,984 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 9 ); args=(1, 9)
2012-08-01 12:55:41,027 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 9 ; args=(9,)
2012-08-01 12:55:41,069 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:41,114 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 9  AND "api_rating"."rating" BETWEEN 1 and 5); args=(9, 1, 5)
2012-08-01 12:55:41,156 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:41,200 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 12:55:41,242 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:41,286 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 12:55:41,328 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 8 ); args=(True, 8)
2012-08-01 12:55:41,371 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:41,413 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:41,456 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:41,498 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:42,149 [DEBUG] django.db.backends: (0.649) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 12:55:42,193 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 8 ); args=(1, 8)
2012-08-01 12:55:42,236 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 8 ; args=(8,)
2012-08-01 12:55:42,283 [DEBUG] django.db.backends: (0.046) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:42,651 [DEBUG] django.db.backends: (0.366) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 8  AND "api_rating"."rating" BETWEEN 1 and 5); args=(8, 1, 5)
2012-08-01 12:55:42,694 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:42,738 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 12:55:42,782 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:43,152 [DEBUG] django.db.backends: (0.369) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 12:55:43,195 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 5 ); args=(True, 5)
2012-08-01 12:55:43,237 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:43,280 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:43,324 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:43,367 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:43,411 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 12:55:43,455 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 5 ); args=(1, 5)
2012-08-01 12:55:43,498 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 5 ; args=(5,)
2012-08-01 12:55:43,542 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:43,585 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 5  AND "api_rating"."rating" BETWEEN 1 and 5); args=(5, 1, 5)
2012-08-01 12:55:43,627 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:43,670 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 12:55:43,713 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:43,759 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 12:55:43,801 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 17 ); args=(True, 17)
2012-08-01 12:55:43,843 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:43,884 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:43,929 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:43,973 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:44,017 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 12:55:44,059 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 17 ); args=(1, 17)
2012-08-01 12:55:44,102 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 17 ; args=(17,)
2012-08-01 12:55:44,144 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:44,190 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 17  AND "api_rating"."rating" BETWEEN 1 and 5); args=(17, 1, 5)
2012-08-01 12:55:44,231 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:44,273 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 12:55:44,315 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:44,361 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 12:55:44,408 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 4 ); args=(True, 4)
2012-08-01 12:55:44,450 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:44,493 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:44,536 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:44,579 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:44,624 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 12:55:44,667 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 4 ); args=(1, 4)
2012-08-01 12:55:44,710 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 4 ; args=(4,)
2012-08-01 12:55:44,752 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:44,796 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 4  AND "api_rating"."rating" BETWEEN 1 and 5); args=(4, 1, 5)
2012-08-01 12:55:44,840 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:44,883 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 12:55:44,927 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:44,972 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 12:55:45,015 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 13 ); args=(True, 13)
2012-08-01 12:55:45,058 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:45,104 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:45,147 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:45,190 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:45,240 [DEBUG] django.db.backends: (0.048) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 12:55:45,284 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 13 ); args=(1, 13)
2012-08-01 12:55:45,327 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 13 ; args=(13,)
2012-08-01 12:55:45,371 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:45,416 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 13  AND "api_rating"."rating" BETWEEN 1 and 5); args=(13, 1, 5)
2012-08-01 12:55:45,457 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:45,501 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 12:55:45,546 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:45,590 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 12:55:45,634 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 7 ); args=(True, 7)
2012-08-01 12:55:45,678 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:45,722 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:45,765 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:45,809 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:45,856 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 12:55:45,899 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 7 ); args=(1, 7)
2012-08-01 12:55:45,943 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 7 ; args=(7,)
2012-08-01 12:55:45,987 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:46,031 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 7  AND "api_rating"."rating" BETWEEN 1 and 5); args=(7, 1, 5)
2012-08-01 12:55:46,074 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:46,119 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 12:55:46,162 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:46,207 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 12:55:46,249 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 12 ); args=(True, 12)
2012-08-01 12:55:46,309 [DEBUG] django.db.backends: (0.059) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:46,352 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:46,395 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:46,442 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:46,488 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 12:55:46,532 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 12 ); args=(1, 12)
2012-08-01 12:55:46,574 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 12 ; args=(12,)
2012-08-01 12:55:46,617 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:46,664 [DEBUG] django.db.backends: (0.045) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 12  AND "api_rating"."rating" BETWEEN 1 and 5); args=(12, 1, 5)
2012-08-01 12:55:46,707 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:46,751 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 12:55:46,795 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:46,839 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 12:55:46,882 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 15 ); args=(True, 15)
2012-08-01 12:55:46,924 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:46,966 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:47,009 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:47,053 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:47,099 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 12:55:47,142 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 15 ); args=(1, 15)
2012-08-01 12:55:47,192 [DEBUG] django.db.backends: (0.048) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 15 ; args=(15,)
2012-08-01 12:55:47,237 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:47,283 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 15  AND "api_rating"."rating" BETWEEN 1 and 5); args=(15, 1, 5)
2012-08-01 12:55:47,326 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:47,369 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 12:55:47,413 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:47,458 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 12:55:47,502 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 14 ); args=(True, 14)
2012-08-01 12:55:47,545 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:47,587 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:47,629 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:47,674 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:47,719 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 12:55:47,764 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 14 ); args=(1, 14)
2012-08-01 12:55:47,807 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 14 ; args=(14,)
2012-08-01 12:55:47,850 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:47,895 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 14  AND "api_rating"."rating" BETWEEN 1 and 5); args=(14, 1, 5)
2012-08-01 12:55:47,939 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:47,984 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 12:55:48,029 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:48,075 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 12:55:48,118 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 1 ); args=(True, 1)
2012-08-01 12:55:48,161 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:48,204 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:48,251 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:48,293 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:48,338 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 12:55:48,384 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 1 ); args=(1, 1)
2012-08-01 12:55:48,427 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 1 ; args=(1,)
2012-08-01 12:55:48,470 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:48,513 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 1  AND "api_rating"."rating" BETWEEN 1 and 5); args=(1, 1, 5)
2012-08-01 12:55:48,555 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:48,598 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 12:55:48,640 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:48,684 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 12:55:48,726 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 2 ); args=(True, 2)
2012-08-01 12:55:48,768 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:48,810 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 12:55:48,853 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 12:55:48,897 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 12:55:48,941 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 12:55:48,985 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 2 ); args=(1, 2)
2012-08-01 12:55:49,030 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 2 ; args=(2,)
2012-08-01 12:55:49,075 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 12:55:49,120 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 2  AND "api_rating"."rating" BETWEEN 1 and 5); args=(2, 1, 5)
2012-08-01 12:55:49,164 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 12:55:49,209 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 12:55:49,254 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 12:55:49,298 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 15:07:59,861 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 15:08:02,170 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:05:08,157 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:05:26,422 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:05:26,469 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:05:26,470 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:05:26,710 [DEBUG] django.db.backends: (0.044) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo"; args=()
2012-08-01 16:05:34,976 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:05:34,977 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:05:35,093 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:05:35,258 [DEBUG] django.db.backends: (0.044) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 16:05:35,395 [DEBUG] django.db.backends: (0.060) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fc57d0>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103fc5d90>, 4828.032)
2012-08-01 16:05:35,439 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 3 ); args=(True, 3)
2012-08-01 16:05:35,484 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:35,528 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:35,571 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:35,614 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:35,658 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 16:05:35,703 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:05:35,747 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 3 ; args=(3,)
2012-08-01 16:05:35,791 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:35,839 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 3  AND "api_rating"."rating" BETWEEN 1 and 5); args=(3, 1, 5)
2012-08-01 16:05:35,884 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:35,929 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:05:35,974 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:36,020 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 16:05:36,065 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 6 ); args=(True, 6)
2012-08-01 16:05:36,108 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:36,153 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:36,197 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:36,240 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:36,284 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 16:05:36,329 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:05:36,374 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 6 ; args=(6,)
2012-08-01 16:05:36,418 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:36,463 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 6  AND "api_rating"."rating" BETWEEN 1 and 5); args=(6, 1, 5)
2012-08-01 16:05:36,508 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:36,553 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:05:36,598 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:36,644 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 16:05:36,690 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 10 ); args=(True, 10)
2012-08-01 16:05:36,732 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:36,778 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:36,825 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:36,869 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:36,915 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 16:05:36,961 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:05:37,004 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 10 ; args=(10,)
2012-08-01 16:05:37,047 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:37,093 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 10  AND "api_rating"."rating" BETWEEN 1 and 5); args=(10, 1, 5)
2012-08-01 16:05:37,137 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:37,182 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:05:37,225 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:37,270 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 16:05:37,313 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 16 ); args=(True, 16)
2012-08-01 16:05:37,356 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:37,400 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:37,443 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:37,485 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:37,531 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 16:05:37,575 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:05:37,619 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 16 ; args=(16,)
2012-08-01 16:05:37,663 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:37,708 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 16  AND "api_rating"."rating" BETWEEN 1 and 5); args=(16, 1, 5)
2012-08-01 16:05:37,755 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:37,826 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:05:37,869 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:37,914 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 16:05:37,958 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 11 ); args=(True, 11)
2012-08-01 16:05:38,001 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:38,045 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:38,087 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:38,130 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:38,175 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 16:05:38,219 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:05:38,262 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 11 ; args=(11,)
2012-08-01 16:05:38,306 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:38,352 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 11  AND "api_rating"."rating" BETWEEN 1 and 5); args=(11, 1, 5)
2012-08-01 16:05:38,396 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:38,440 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:05:38,484 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:38,531 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 16:05:38,574 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 9 ); args=(True, 9)
2012-08-01 16:05:38,617 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:38,661 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:38,704 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:38,748 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:38,794 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 16:05:38,839 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:05:38,882 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 9 ; args=(9,)
2012-08-01 16:05:38,933 [DEBUG] django.db.backends: (0.049) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:38,977 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 9  AND "api_rating"."rating" BETWEEN 1 and 5); args=(9, 1, 5)
2012-08-01 16:05:39,021 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:39,065 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:05:39,109 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:39,166 [DEBUG] django.db.backends: (0.056) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 16:05:39,208 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 8 ); args=(True, 8)
2012-08-01 16:05:39,253 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:39,307 [DEBUG] django.db.backends: (0.053) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:39,350 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:39,394 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:39,441 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 16:05:39,502 [DEBUG] django.db.backends: (0.059) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:05:39,546 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 8 ; args=(8,)
2012-08-01 16:05:39,589 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:39,633 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 8  AND "api_rating"."rating" BETWEEN 1 and 5); args=(8, 1, 5)
2012-08-01 16:05:39,676 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:39,719 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:05:39,762 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:39,809 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 16:05:39,853 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 5 ); args=(True, 5)
2012-08-01 16:05:39,896 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:39,939 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:39,983 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:40,028 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:40,074 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 16:05:40,118 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:05:40,162 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 5 ; args=(5,)
2012-08-01 16:05:40,206 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:40,249 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 5  AND "api_rating"."rating" BETWEEN 1 and 5); args=(5, 1, 5)
2012-08-01 16:05:40,293 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:40,338 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:05:40,382 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:40,427 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 16:05:40,469 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 17 ); args=(True, 17)
2012-08-01 16:05:40,513 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:40,555 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:40,597 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:40,640 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:40,684 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 16:05:40,728 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:05:40,772 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 17 ; args=(17,)
2012-08-01 16:05:40,815 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:40,862 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 17  AND "api_rating"."rating" BETWEEN 1 and 5); args=(17, 1, 5)
2012-08-01 16:05:40,905 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:40,950 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:05:40,993 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:41,039 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 16:05:41,083 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 4 ); args=(True, 4)
2012-08-01 16:05:41,125 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:41,168 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:41,213 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:41,255 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:41,301 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 16:05:41,345 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:05:41,389 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 4 ; args=(4,)
2012-08-01 16:05:41,437 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:41,481 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 4  AND "api_rating"."rating" BETWEEN 1 and 5); args=(4, 1, 5)
2012-08-01 16:05:41,525 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:41,568 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:05:41,611 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:41,656 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 16:05:41,698 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 13 ); args=(True, 13)
2012-08-01 16:05:41,744 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:41,787 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:41,832 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:41,877 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:41,923 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 16:05:41,966 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:05:42,013 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 13 ; args=(13,)
2012-08-01 16:05:42,057 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:42,101 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 13  AND "api_rating"."rating" BETWEEN 1 and 5); args=(13, 1, 5)
2012-08-01 16:05:42,147 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:42,191 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:05:42,240 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:42,285 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 16:05:42,327 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 7 ); args=(True, 7)
2012-08-01 16:05:42,370 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:42,413 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:42,456 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:42,499 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:42,544 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 16:05:42,589 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:05:42,633 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 7 ; args=(7,)
2012-08-01 16:05:42,677 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:42,721 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 7  AND "api_rating"."rating" BETWEEN 1 and 5); args=(7, 1, 5)
2012-08-01 16:05:42,765 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:42,810 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:05:42,853 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:42,898 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 16:05:43,007 [DEBUG] django.db.backends: (0.108) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 12 ); args=(True, 12)
2012-08-01 16:05:43,052 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:43,095 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:43,139 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:43,182 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:43,227 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 16:05:43,271 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:05:43,314 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 12 ; args=(12,)
2012-08-01 16:05:43,358 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:43,402 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 12  AND "api_rating"."rating" BETWEEN 1 and 5); args=(12, 1, 5)
2012-08-01 16:05:43,444 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:43,491 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:05:43,536 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:43,582 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 16:05:43,627 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 15 ); args=(True, 15)
2012-08-01 16:05:43,669 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:43,713 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:43,758 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:43,800 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:43,847 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 16:05:43,891 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:05:43,934 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 15 ; args=(15,)
2012-08-01 16:05:43,977 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:44,023 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 15  AND "api_rating"."rating" BETWEEN 1 and 5); args=(15, 1, 5)
2012-08-01 16:05:44,067 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:44,111 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:05:44,154 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:44,199 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 16:05:44,242 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 14 ); args=(True, 14)
2012-08-01 16:05:44,283 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:44,326 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:44,369 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:44,412 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:44,458 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 16:05:44,503 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:05:44,547 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 14 ; args=(14,)
2012-08-01 16:05:44,591 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:44,637 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 14  AND "api_rating"."rating" BETWEEN 1 and 5); args=(14, 1, 5)
2012-08-01 16:05:44,680 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:44,724 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:05:44,768 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:44,814 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 16:05:44,856 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 1 ); args=(True, 1)
2012-08-01 16:05:44,899 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:44,943 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:44,986 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:45,030 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:45,076 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 16:05:45,120 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:05:45,168 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 1 ; args=(1,)
2012-08-01 16:05:45,449 [DEBUG] django.db.backends: (0.279) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:45,495 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 1  AND "api_rating"."rating" BETWEEN 1 and 5); args=(1, 1, 5)
2012-08-01 16:05:45,545 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:45,590 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:05:45,632 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:45,677 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 16:05:45,720 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE ("api_photo"."is_default" = true  AND "api_photo"."business_id" = 2 ); args=(True, 2)
2012-08-01 16:05:45,769 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:45,812 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:05:45,855 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:05:45,923 [DEBUG] django.db.backends: (0.067) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:05:45,973 [DEBUG] django.db.backends: (0.048) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 16:05:46,017 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:05:46,061 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 2 ; args=(2,)
2012-08-01 16:05:46,106 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:05:46,150 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 2  AND "api_rating"."rating" BETWEEN 1 and 5); args=(2, 1, 5)
2012-08-01 16:05:46,204 [DEBUG] django.db.backends: (0.054) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:05:46,249 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:05:46,338 [DEBUG] django.db.backends: (0.087) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:05:46,387 [DEBUG] django.db.backends: (0.047) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 16:06:35,555 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:06:44,651 [DEBUG] django.db.backends: (0.094) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:06:44,724 [DEBUG] django.db.backends: (0.070) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:06:44,725 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:06:45,264 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:06:45,532 [DEBUG] django.db.backends: (0.098) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 16:06:45,594 [DEBUG] django.db.backends: (0.059) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103ef6a90>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x103ef6fd0>, 4828.032)
2012-08-01 16:06:45,666 [DEBUG] django.db.backends: (0.067) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 3 ; args=(3,)
2012-08-01 16:06:45,708 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:45,781 [DEBUG] django.db.backends: (0.072) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:45,824 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:45,867 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:45,926 [DEBUG] django.db.backends: (0.059) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 16:06:45,971 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:06:46,015 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 3 ; args=(3,)
2012-08-01 16:06:46,058 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:46,104 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 3  AND "api_rating"."rating" BETWEEN 1 and 5); args=(3, 1, 5)
2012-08-01 16:06:46,147 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:46,192 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:06:46,237 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:46,281 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 16:06:46,323 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 6 ; args=(6,)
2012-08-01 16:06:46,367 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:46,411 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:46,456 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:46,500 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:46,546 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 16:06:46,591 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:06:46,635 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 6 ; args=(6,)
2012-08-01 16:06:46,679 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:46,724 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 6  AND "api_rating"."rating" BETWEEN 1 and 5); args=(6, 1, 5)
2012-08-01 16:06:46,768 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:46,812 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:06:46,858 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:46,905 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 16:06:46,949 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 10 ; args=(10,)
2012-08-01 16:06:46,992 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:47,036 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:47,079 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:47,123 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:47,168 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 16:06:47,213 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:06:47,257 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 10 ; args=(10,)
2012-08-01 16:06:47,300 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:47,347 [DEBUG] django.db.backends: (0.045) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 10  AND "api_rating"."rating" BETWEEN 1 and 5); args=(10, 1, 5)
2012-08-01 16:06:47,393 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:47,435 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:06:47,480 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:47,525 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 16:06:47,568 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 16 ; args=(16,)
2012-08-01 16:06:47,612 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:47,655 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:47,699 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:47,742 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:47,787 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 16:06:47,830 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:06:47,874 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 16 ; args=(16,)
2012-08-01 16:06:47,919 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:47,964 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 16  AND "api_rating"."rating" BETWEEN 1 and 5); args=(16, 1, 5)
2012-08-01 16:06:48,008 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:48,579 [DEBUG] django.db.backends: (0.569) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:06:48,623 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:48,668 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 16:06:48,710 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 11 ; args=(11,)
2012-08-01 16:06:48,755 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:48,799 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:48,842 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:48,887 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:48,932 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 16:06:48,979 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:06:49,022 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 11 ; args=(11,)
2012-08-01 16:06:49,066 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:49,112 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 11  AND "api_rating"."rating" BETWEEN 1 and 5); args=(11, 1, 5)
2012-08-01 16:06:49,157 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:49,200 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:06:49,243 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:49,288 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 16:06:49,332 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 9 ; args=(9,)
2012-08-01 16:06:49,375 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:49,419 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:49,462 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:49,506 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:49,554 [DEBUG] django.db.backends: (0.047) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 16:06:49,602 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:06:49,646 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 9 ; args=(9,)
2012-08-01 16:06:49,689 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:49,735 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 9  AND "api_rating"."rating" BETWEEN 1 and 5); args=(9, 1, 5)
2012-08-01 16:06:49,777 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:49,823 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:06:49,868 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:49,915 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 16:06:49,959 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 8 ; args=(8,)
2012-08-01 16:06:50,005 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:50,050 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:50,093 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:50,136 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:50,181 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 16:06:50,226 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:06:50,270 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 8 ; args=(8,)
2012-08-01 16:06:50,315 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:50,362 [DEBUG] django.db.backends: (0.046) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 8  AND "api_rating"."rating" BETWEEN 1 and 5); args=(8, 1, 5)
2012-08-01 16:06:50,405 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:50,450 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:06:50,494 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:50,540 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 16:06:50,584 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 5 ; args=(5,)
2012-08-01 16:06:50,634 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:50,677 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:50,720 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:50,765 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:50,810 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 16:06:50,855 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:06:50,899 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 5 ; args=(5,)
2012-08-01 16:06:50,944 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:50,989 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 5  AND "api_rating"."rating" BETWEEN 1 and 5); args=(5, 1, 5)
2012-08-01 16:06:51,032 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:51,077 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:06:51,121 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:51,167 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 16:06:51,212 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 17 ; args=(17,)
2012-08-01 16:06:51,255 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:51,298 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:51,341 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:51,384 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:51,432 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 16:06:51,477 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:06:51,521 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 17 ; args=(17,)
2012-08-01 16:06:51,565 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:51,612 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 17  AND "api_rating"."rating" BETWEEN 1 and 5); args=(17, 1, 5)
2012-08-01 16:06:51,655 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:51,699 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:06:51,742 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:51,789 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 16:06:51,833 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 4 ; args=(4,)
2012-08-01 16:06:51,876 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:51,919 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:51,962 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:52,005 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:52,051 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 16:06:52,096 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:06:52,141 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 4 ; args=(4,)
2012-08-01 16:06:52,187 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:52,233 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 4  AND "api_rating"."rating" BETWEEN 1 and 5); args=(4, 1, 5)
2012-08-01 16:06:52,276 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:52,321 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:06:52,365 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:52,411 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 16:06:52,453 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 13 ; args=(13,)
2012-08-01 16:06:52,496 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:52,540 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:52,583 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:52,626 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:52,673 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 16:06:52,716 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:06:52,759 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 13 ; args=(13,)
2012-08-01 16:06:52,803 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:52,847 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 13  AND "api_rating"."rating" BETWEEN 1 and 5); args=(13, 1, 5)
2012-08-01 16:06:52,890 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:52,937 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:06:52,983 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:53,028 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 16:06:53,071 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 7 ; args=(7,)
2012-08-01 16:06:53,114 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:53,157 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:53,200 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:53,245 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:53,290 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 16:06:53,333 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:06:53,377 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 7 ; args=(7,)
2012-08-01 16:06:53,420 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:53,465 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 7  AND "api_rating"."rating" BETWEEN 1 and 5); args=(7, 1, 5)
2012-08-01 16:06:53,515 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:53,559 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:06:53,603 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:53,648 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 16:06:53,691 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 12 ; args=(12,)
2012-08-01 16:06:53,739 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:53,783 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:53,857 [DEBUG] django.db.backends: (0.072) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:53,899 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:53,947 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 16:06:53,991 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:06:54,034 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 12 ; args=(12,)
2012-08-01 16:06:54,079 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:54,126 [DEBUG] django.db.backends: (0.045) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 12  AND "api_rating"."rating" BETWEEN 1 and 5); args=(12, 1, 5)
2012-08-01 16:06:54,169 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:54,220 [DEBUG] django.db.backends: (0.049) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:06:54,263 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:54,308 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 16:06:54,352 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 15 ; args=(15,)
2012-08-01 16:06:54,394 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:54,441 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:54,486 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:54,528 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:54,575 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 16:06:54,620 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:06:54,663 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 15 ; args=(15,)
2012-08-01 16:06:54,708 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:54,753 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 15  AND "api_rating"."rating" BETWEEN 1 and 5); args=(15, 1, 5)
2012-08-01 16:06:54,795 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:54,842 [DEBUG] django.db.backends: (0.046) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:06:54,885 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:54,932 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 16:06:54,976 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 14 ; args=(14,)
2012-08-01 16:06:55,018 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:55,063 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:55,105 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:55,148 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:55,192 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 16:06:55,234 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:06:55,278 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 14 ; args=(14,)
2012-08-01 16:06:55,320 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:55,376 [DEBUG] django.db.backends: (0.054) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 14  AND "api_rating"."rating" BETWEEN 1 and 5); args=(14, 1, 5)
2012-08-01 16:06:55,419 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:55,466 [DEBUG] django.db.backends: (0.045) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:06:55,509 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:55,554 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 16:06:55,610 [DEBUG] django.db.backends: (0.053) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 1 ; args=(1,)
2012-08-01 16:06:55,655 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:55,703 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:55,746 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:55,790 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:55,843 [DEBUG] django.db.backends: (0.052) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 16:06:55,936 [DEBUG] django.db.backends: (0.092) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:06:56,046 [DEBUG] django.db.backends: (0.109) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 1 ; args=(1,)
2012-08-01 16:06:56,167 [DEBUG] django.db.backends: (0.120) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:56,246 [DEBUG] django.db.backends: (0.078) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 1  AND "api_rating"."rating" BETWEEN 1 and 5); args=(1, 1, 5)
2012-08-01 16:06:56,326 [DEBUG] django.db.backends: (0.078) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:56,369 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:06:56,450 [DEBUG] django.db.backends: (0.079) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:56,495 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 16:06:56,536 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 2 ; args=(2,)
2012-08-01 16:06:56,591 [DEBUG] django.db.backends: (0.053) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:56,634 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:06:56,689 [DEBUG] django.db.backends: (0.054) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:06:56,732 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:06:56,783 [DEBUG] django.db.backends: (0.050) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 16:06:56,826 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:06:56,879 [DEBUG] django.db.backends: (0.052) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 2 ; args=(2,)
2012-08-01 16:06:56,922 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:06:56,976 [DEBUG] django.db.backends: (0.052) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 2  AND "api_rating"."rating" BETWEEN 1 and 5); args=(2, 1, 5)
2012-08-01 16:06:57,019 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:06:57,073 [DEBUG] django.db.backends: (0.054) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:06:57,117 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:06:57,169 [DEBUG] django.db.backends: (0.050) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 16:07:25,872 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:08:15,468 [DEBUG] django.db.backends: (0.087) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:15,515 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:15,516 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:08:15,740 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:08:15,783 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:08:15,838 [DEBUG] django.db.backends: (0.053) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:08:15,882 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:15,928 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:15,975 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:08:16,026 [DEBUG] django.db.backends: (0.046) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:08:16,644 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:08:16,687 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:08:16,735 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:08:16,779 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:16,825 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:16,870 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:08:16,913 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:08:17,705 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:08:17,749 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:08:17,795 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ) LIMIT 1; args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:08:17,838 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:17,884 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:17,980 [DEBUG] django.db.backends: (0.094) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:08:18,024 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:08:18,872 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:08:18,916 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:08:18,962 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:08:19,005 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:19,051 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:19,094 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:08:19,138 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:08:19,630 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:08:19,673 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:08:19,720 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:08:19,763 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:19,808 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:19,855 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:08:19,899 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:08:20,188 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:08:20,232 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:08:20,279 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 1; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:08:20,323 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:20,371 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:20,415 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:08:20,460 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:08:20,839 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:08:20,883 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:08:20,932 [DEBUG] django.db.backends: (0.047) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:08:20,975 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:21,020 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:21,067 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:08:21,112 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:08:21,620 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:08:21,662 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:08:21,709 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:08:21,752 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:21,798 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:21,844 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:08:21,887 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:08:22,381 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:08:22,425 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:08:22,472 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:08:22,516 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:22,562 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:22,608 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:08:22,653 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:08:23,314 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:08:23,358 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:08:23,405 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:08:23,449 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:23,494 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:23,540 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:08:23,584 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:08:24,429 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:08:24,474 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:08:24,520 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:08:24,564 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:24,609 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:24,653 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:08:24,697 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:08:25,200 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:08:25,243 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:08:25,290 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:08:25,335 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:25,381 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:25,426 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:08:25,469 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:08:25,643 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:08:25,688 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:08:25,734 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:08:25,779 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:25,825 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:25,870 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:08:25,913 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:08:26,674 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:08:26,719 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:08:26,767 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:08:26,810 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:26,855 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:26,900 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:08:26,948 [DEBUG] django.db.backends: (0.047) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:08:27,571 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:08:27,626 [DEBUG] django.db.backends: (0.054) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:08:27,699 [DEBUG] django.db.backends: (0.072) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:08:27,826 [DEBUG] django.db.backends: (0.126) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:27,907 [DEBUG] django.db.backends: (0.079) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:27,994 [DEBUG] django.db.backends: (0.086) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:08:28,092 [DEBUG] django.db.backends: (0.097) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:08:28,533 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:08:28,586 [DEBUG] django.db.backends: (0.052) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:08:28,633 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:08:28,676 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:28,720 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:28,778 [DEBUG] django.db.backends: (0.056) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:08:28,821 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:08:29,331 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:08:29,374 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:08:29,428 [DEBUG] django.db.backends: (0.053) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:08:29,471 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:29,529 [DEBUG] django.db.backends: (0.056) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:29,574 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:08:29,632 [DEBUG] django.db.backends: (0.057) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:08:30,143 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:08:30,185 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:08:30,232 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ) LIMIT 1; args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:08:30,276 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:30,321 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:30,366 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 16:08:30,410 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 16:08:30,610 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 16:08:30,651 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 16:08:30,693 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 16:08:30,735 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 16:08:30,777 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 16:08:30,818 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 16:08:30,860 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 16:08:30,903 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 16:08:30,944 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 16:08:30,986 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 16:08:31,028 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 16:08:31,068 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 16:08:31,110 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 16:08:31,151 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 16:08:31,194 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 16:08:31,235 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 16:08:31,276 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 16:08:31,319 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 16:08:31,361 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 16:08:31,403 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 16:08:31,444 [DEBUG] django.db.backends: (0.039) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 16:08:31,485 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 16:08:31,526 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 16:08:31,569 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 16:08:31,610 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 16:08:31,651 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 16:08:31,694 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 16:08:31,741 [DEBUG] django.db.backends: (0.047) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:31,785 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 16:08:31,842 [DEBUG] django.db.backends: (0.055) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 20:08:31.786963+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 20:08:31.786963+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:31,973 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 20:08:31.887415+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 20:08:31.887415+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,096 [DEBUG] django.db.backends: (0.082) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 20:08:32.014525+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 20:08:32.014525+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,222 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 20:08:32.138833+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 20:08:32.138833+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,353 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 20:08:32.266922+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 20:08:32.266922+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,479 [DEBUG] django.db.backends: (0.082) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 20:08:32.397244+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 20:08:32.397244+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,604 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 20:08:32.521049+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 20:08:32.521049+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,729 [DEBUG] django.db.backends: (0.082) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 20:08:32.646728+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 20:08:32.646728+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,854 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 20:08:32.770538+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 20:08:32.770538+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:32,978 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 20:08:32.896142+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 20:08:32.896142+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,106 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 20:08:33.022553+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 20:08:33.022553+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,232 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 20:08:33.147599+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 20:08:33.147599+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,358 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 20:08:33.275301+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 20:08:33.275301+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,484 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 20:08:33.400805+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 20:08:33.400805+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,610 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 20:08:33.525966+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 20:08:33.525966+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,736 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 20:08:33.652931+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 20:08:33.652931+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,865 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 20:08:33.780438+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 20:08:33.780438+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:33,989 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 20:08:33.906625+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 20:08:33.906625+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,116 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 20:08:34.032244+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 20:08:34.032244+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,240 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 20:08:34.157629+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 20:08:34.157629+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,366 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 20:08:34.283339+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 20:08:34.283339+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,492 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 20:08:34.408009+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 20:08:34.408009+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,618 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 20:08:34.534324+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 20:08:34.534324+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,744 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 20:08:34.660301+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 20:08:34.660301+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,872 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 20:08:34.787467+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 20:08:34.787467+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:34,997 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 20:08:34.913800+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 20:08:34.913800+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:35,124 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 20:08:35.039602+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 20:08:35.039602+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:35,275 [DEBUG] django.db.backends: (0.109) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 20:08:35.166006+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 20:08:35.166006+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:08:55,482 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:08:56,910 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:56,957 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:56,958 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:08:57,136 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:08:57,179 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:08:57,232 [DEBUG] django.db.backends: (0.052) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:08:57,276 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:57,322 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:57,367 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:08:57,411 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:08:57,922 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:08:57,966 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:08:58,014 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:08:58,058 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:58,105 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:58,149 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:08:58,192 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:08:58,702 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:08:58,747 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:08:58,795 [DEBUG] django.db.backends: (0.047) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ) LIMIT 1; args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:08:58,839 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:58,885 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:58,929 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:08:58,982 [DEBUG] django.db.backends: (0.052) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:08:59,229 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:08:59,272 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:08:59,334 [DEBUG] django.db.backends: (0.060) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:08:59,378 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:08:59,423 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:08:59,470 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:08:59,514 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:09:00,023 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:09:00,066 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:09:00,115 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:09:00,158 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:00,205 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:00,249 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:09:00,292 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:09:00,477 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:09:00,520 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:09:00,571 [DEBUG] django.db.backends: (0.049) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 1; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:09:00,614 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:00,661 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:00,706 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:09:00,751 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:09:01,035 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:09:01,079 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:09:01,126 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:09:01,170 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:01,247 [DEBUG] django.db.backends: (0.075) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:01,292 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:09:01,335 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:09:01,825 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:09:01,869 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:09:01,915 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:09:01,958 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:02,003 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:02,047 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:09:02,091 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:09:02,578 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:09:02,622 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:09:02,671 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:09:02,714 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:02,761 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:02,807 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:09:02,851 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:09:03,250 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:09:03,295 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:09:03,342 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:09:03,386 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:03,432 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:03,477 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:09:03,520 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:09:05,025 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:09:05,069 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:09:05,116 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:09:05,160 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:05,206 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:05,250 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:09:05,293 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:09:05,829 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:09:05,872 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:09:05,928 [DEBUG] django.db.backends: (0.055) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:09:05,972 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:06,019 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:06,063 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:09:06,107 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:09:06,223 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:09:06,269 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:09:06,315 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:09:06,358 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:06,404 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:06,450 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:09:06,494 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:09:06,699 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:09:06,742 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:09:06,788 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:09:06,832 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:06,877 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:06,921 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:09:06,965 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:09:07,599 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:09:07,641 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:09:07,689 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:09:07,732 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:07,779 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:07,826 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:09:07,869 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:09:08,137 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:09:08,181 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:09:08,228 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:09:08,273 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:08,318 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:08,364 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:09:08,407 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:09:08,529 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:09:08,573 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:09:08,622 [DEBUG] django.db.backends: (0.047) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:09:08,667 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:08,713 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:08,758 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:09:08,803 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:09:09,306 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:09:09,350 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:09:09,398 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ) LIMIT 1; args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:09:09,441 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:09,488 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:09,532 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 16:09:09,575 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 16:09:09,692 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 16:09:09,734 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 16:09:09,775 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 16:09:09,816 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 16:09:09,858 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 16:09:09,900 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 16:09:09,943 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 16:09:09,985 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 16:09:10,026 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 16:09:10,068 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 16:09:10,110 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 16:09:10,151 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 16:09:10,194 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 16:09:10,239 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 16:09:10,282 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 16:09:10,324 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 16:09:10,367 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 16:09:10,407 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 16:09:10,449 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 16:09:10,491 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 16:09:10,535 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 16:09:10,577 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 16:09:10,619 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 16:09:10,662 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 16:09:10,705 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 16:09:10,751 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 16:09:10,794 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 16:09:10,839 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:10,885 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 16:09:10,930 [DEBUG] django.db.backends: (0.044) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 20:09:10.886120+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 20:09:10.886120+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,057 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 20:09:10.973819+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 20:09:10.973819+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,190 [DEBUG] django.db.backends: (0.089) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 20:09:11.101340+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 20:09:11.101340+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,322 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 20:09:11.238891+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 20:09:11.238891+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,447 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 20:09:11.363864+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 20:09:11.363864+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,574 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 20:09:11.489662+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 20:09:11.489662+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,726 [DEBUG] django.db.backends: (0.111) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 20:09:11.615775+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 20:09:11.615775+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,869 [DEBUG] django.db.backends: (0.089) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 20:09:11.780028+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 20:09:11.780028+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:11,993 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 20:09:11.910096+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 20:09:11.910096+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,121 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 20:09:12.035035+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 20:09:12.035035+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,252 [DEBUG] django.db.backends: (0.089) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 20:09:12.163081+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 20:09:12.163081+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,378 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 20:09:12.295496+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 20:09:12.295496+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,508 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 20:09:12.421980+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 20:09:12.421980+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,636 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 20:09:12.549403+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 20:09:12.549403+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,766 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 20:09:12.681149+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 20:09:12.681149+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:12,899 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 20:09:12.813742+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 20:09:12.813742+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:13,270 [DEBUG] django.db.backends: (0.328) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 20:09:12.942424+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 20:09:12.942424+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:13,403 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 20:09:13.316007+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 20:09:13.316007+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:13,529 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 20:09:13.445771+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 20:09:13.445771+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:13,659 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 20:09:13.575263+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 20:09:13.575263+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:13,788 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 20:09:13.702801+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 20:09:13.702801+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:13,914 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 20:09:13.830571+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 20:09:13.830571+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:14,042 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 20:09:13.957885+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 20:09:13.957885+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:14,172 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 20:09:14.085554+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 20:09:14.085554+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:14,302 [DEBUG] django.db.backends: (0.088) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 20:09:14.214512+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 20:09:14.214512+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:14,429 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 20:09:14.344097+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 20:09:14.344097+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:14,567 [DEBUG] django.db.backends: (0.092) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 20:09:14.474950+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 20:09:14.474950+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:14,694 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 20:09:14.611115+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 20:09:14.611115+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:40,370 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:09:41,990 [DEBUG] django.db.backends: (0.088) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:42,056 [DEBUG] django.db.backends: (0.063) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:42,057 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:09:42,249 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:09:42,292 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:09:42,346 [DEBUG] django.db.backends: (0.053) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:09:42,390 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:42,437 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:42,481 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:09:42,525 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:09:42,783 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:09:42,829 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:09:42,876 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:09:42,920 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:42,966 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:43,011 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:09:43,056 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:09:43,263 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:09:43,305 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:09:43,360 [DEBUG] django.db.backends: (0.054) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ) LIMIT 1; args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:09:43,406 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:43,452 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:43,498 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:09:43,545 [DEBUG] django.db.backends: (0.045) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:09:43,909 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:09:43,951 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:09:43,999 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:09:44,043 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:44,092 [DEBUG] django.db.backends: (0.047) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:44,136 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:09:44,180 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:09:44,351 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:09:44,394 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:09:44,441 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:09:44,486 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:44,532 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:44,579 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:09:44,622 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:09:44,801 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:09:44,846 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:09:44,895 [DEBUG] django.db.backends: (0.048) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 1; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:09:44,939 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:44,985 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:45,029 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:09:45,074 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:09:45,362 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:09:45,408 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:09:45,456 [DEBUG] django.db.backends: (0.047) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:09:45,498 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:45,544 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:45,589 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:09:45,633 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:09:45,787 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:09:45,831 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:09:45,880 [DEBUG] django.db.backends: (0.047) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:09:45,924 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:45,969 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:46,013 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:09:46,057 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:09:46,213 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:09:46,256 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:09:46,303 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:09:46,348 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:46,393 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:46,438 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:09:46,482 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:09:47,109 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:09:47,153 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:09:47,200 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:09:47,245 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:47,290 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:47,334 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:09:47,377 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:09:48,031 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:09:48,075 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:09:48,122 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:09:48,165 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:48,211 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:48,256 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:09:48,299 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:09:48,809 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:09:48,852 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:09:48,900 [DEBUG] django.db.backends: (0.047) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:09:48,943 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:48,989 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:49,034 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:09:49,077 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:09:49,200 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:09:49,244 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:09:49,343 [DEBUG] django.db.backends: (0.098) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:09:49,386 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:49,432 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:49,475 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:09:49,520 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:09:50,068 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:09:50,113 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:09:50,160 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:09:50,204 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:50,250 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:50,296 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:09:50,346 [DEBUG] django.db.backends: (0.050) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:09:50,534 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:09:50,577 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:09:50,624 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:09:50,668 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:50,714 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:50,759 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:09:50,802 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:09:51,070 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:09:51,112 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:09:51,159 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:09:51,202 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:51,247 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:51,291 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:09:51,335 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:09:51,790 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:09:51,833 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:09:51,880 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:09:51,924 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:51,975 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:52,021 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:09:52,075 [DEBUG] django.db.backends: (0.053) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:09:52,245 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:09:52,292 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:09:52,339 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ) LIMIT 1; args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:09:52,382 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:09:52,439 [DEBUG] django.db.backends: (0.056) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:52,483 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 16:09:52,538 [DEBUG] django.db.backends: (0.054) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 16:09:52,656 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 16:09:52,698 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 16:09:52,741 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 16:09:52,783 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 16:09:52,825 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 16:09:52,867 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 16:09:52,910 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 16:09:52,953 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 16:09:52,996 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 16:09:53,039 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 16:09:53,081 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 16:09:53,123 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 16:09:53,167 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 16:09:53,208 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 16:09:53,250 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 16:09:53,292 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 16:09:53,334 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 16:09:53,375 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 16:09:53,416 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 16:09:53,457 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 16:09:53,500 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 16:09:53,542 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 16:09:53,584 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 16:09:53,627 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 16:09:53,669 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 16:09:53,711 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 16:09:53,753 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 16:09:53,798 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:09:53,865 [DEBUG] django.db.backends: (0.066) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 16:09:53,911 [DEBUG] django.db.backends: (0.044) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 20:09:53.867455+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 20:09:53.867455+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,041 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 20:09:53.955981+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 20:09:53.955981+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,173 [DEBUG] django.db.backends: (0.089) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 20:09:54.083945+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 20:09:54.083945+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,304 [DEBUG] django.db.backends: (0.088) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 20:09:54.215535+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 20:09:54.215535+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,435 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 20:09:54.347862+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 20:09:54.347862+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,562 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 20:09:54.476935+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 20:09:54.476935+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,687 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 20:09:54.604011+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 20:09:54.604011+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,813 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 20:09:54.729333+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 20:09:54.729333+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:54,939 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 20:09:54.855561+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 20:09:54.855561+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,069 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 20:09:54.983097+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 20:09:54.983097+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,195 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 20:09:55.111883+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 20:09:55.111883+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,321 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 20:09:55.238342+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 20:09:55.238342+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,460 [DEBUG] django.db.backends: (0.097) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 20:09:55.363425+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 20:09:55.363425+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,586 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 20:09:55.502738+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 20:09:55.502738+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,711 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 20:09:55.627721+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 20:09:55.627721+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,839 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 20:09:55.754001+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 20:09:55.754001+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:55,984 [DEBUG] django.db.backends: (0.103) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 20:09:55.881524+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 20:09:55.881524+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,113 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 20:09:56.029028+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 20:09:56.029028+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,240 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 20:09:56.156323+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 20:09:56.156323+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,366 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 20:09:56.282252+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 20:09:56.282252+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,493 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 20:09:56.408529+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 20:09:56.408529+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,620 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 20:09:56.535722+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 20:09:56.535722+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,753 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 20:09:56.669104+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 20:09:56.669104+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:56,885 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 20:09:56.802463+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 20:09:56.802463+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:57,013 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 20:09:56.928780+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 20:09:56.928780+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:57,151 [DEBUG] django.db.backends: (0.095) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 20:09:57.056393+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 20:09:57.056393+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:57,280 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 20:09:57.193929+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 20:09:57.193929+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:09:57,408 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 20:09:57.325582+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 20:09:57.325582+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:10:27,589 [WARNING] geopy: BeautifulSoup was not found. The SemanticMediaWiki geocoder will not work.
2012-08-01 16:10:29,182 [DEBUG] django.db.backends: (0.087) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:29,230 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:29,230 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:10:29,775 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:10:29,817 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ); args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:10:29,870 [DEBUG] django.db.backends: (0.051) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton '  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Hoagie Haven'  AND "api_business"."address" = '242 Nassau St.' ) LIMIT 1; args=('Princeton ', 'NJ', 'Hoagie Haven', '242 Nassau St.')
2012-08-01 16:10:29,913 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:29,960 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:30,006 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:10:30,051 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:10:31,461 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:31,461 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:31,461 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:31,461 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:31,461 [DEBUG] boto: Data: 
2012-08-01 16:10:31,461 [DEBUG] boto: Headers: {}
2012-08-01 16:10:31,461 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:31,461 [DEBUG] boto: establishing HTTPS connection: host=allsortz.s3.amazonaws.com, kwargs={}
2012-08-01 16:10:31,461 [DEBUG] boto: Token: None
2012-08-01 16:10:31,462 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:31 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:32,092 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:32,092 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:32,092 [DEBUG] boto: Method: PUT
2012-08-01 16:10:32,092 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:32,092 [DEBUG] boto: Data: 
2012-08-01 16:10:32,093 [DEBUG] boto: Headers: {'Content-MD5': 'H5+sdDREUg13E0Y410dktQ==', 'Content-Length': '4585', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:32,093 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:32,093 [DEBUG] boto: Token: None
2012-08-01 16:10:32,093 [DEBUG] boto: StringToSign:
PUT
H5+sdDREUg13E0Y410dktQ==
application/octet-stream
Wed, 01 Aug 2012 20:10:32 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/1_Princeton%20_NJ
2012-08-01 16:10:32,222 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,222 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,222 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:32,223 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,223 [DEBUG] boto: Data: 
2012-08-01 16:10:32,223 [DEBUG] boto: Headers: {}
2012-08-01 16:10:32,223 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:32,223 [DEBUG] boto: Token: None
2012-08-01 16:10:32,223 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:32 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,283 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,283 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,283 [DEBUG] boto: Method: PUT
2012-08-01 16:10:32,283 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:32,283 [DEBUG] boto: Data: 
2012-08-01 16:10:32,283 [DEBUG] boto: Headers: {'Content-MD5': 'aDoOC+ND9oW3auIVaNWsjg==', 'Content-Length': '77061', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:32,283 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:32,283 [DEBUG] boto: Token: None
2012-08-01 16:10:32,283 [DEBUG] boto: StringToSign:
PUT
aDoOC+ND9oW3auIVaNWsjg==
application/octet-stream
Wed, 01 Aug 2012 20:10:32 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton%20_NJ
2012-08-01 16:10:33,204 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,204 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,205 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:33,205 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,205 [DEBUG] boto: Data: 
2012-08-01 16:10:33,205 [DEBUG] boto: Headers: {}
2012-08-01 16:10:33,205 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:33,205 [DEBUG] boto: Token: None
2012-08-01 16:10:33,205 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:33 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,264 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,264 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,264 [DEBUG] boto: Method: PUT
2012-08-01 16:10:33,264 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,264 [DEBUG] boto: Data: 
2012-08-01 16:10:33,264 [DEBUG] boto: Headers: {'Content-MD5': 'rBQGuIw8+jmoYM5au9V/tA==', 'Content-Length': '25620', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:33,264 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:33,264 [DEBUG] boto: Token: None
2012-08-01 16:10:33,265 [DEBUG] boto: StringToSign:
PUT
rBQGuIw8+jmoYM5au9V/tA==
application/octet-stream
Wed, 01 Aug 2012 20:10:33 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/1_Princeton%20_NJ
2012-08-01 16:10:33,657 [DEBUG] django.db.backends: (0.048) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 1, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton _NJ', 'user_uploads/matt/2012-8-1.16.10/medium/1_Princeton _NJ', 'user_uploads/matt/2012-8-1.16.10/web/1_Princeton _NJ', '2012-08-01 20:10:33.609884+00:00', 'Hoagie Haven', 'Caption defaulted to name: Hoagie Haven') RETURNING "api_photo"."id"; args=(1, 1, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/1_Princeton _NJ', u'user_uploads/matt/2012-8-1.16.10/medium/1_Princeton _NJ', u'user_uploads/matt/2012-8-1.16.10/web/1_Princeton _NJ', u'2012-08-01 20:10:33.609884+00:00', 'Hoagie Haven', 'Caption defaulted to name: Hoagie Haven')
2012-08-01 16:10:33,797 [DEBUG] django.db.backends: (0.081) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:10:33,839 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ); args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:10:33,885 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'George''s'  AND "api_business"."address" = '244 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', "George's", '244 Nassau St.')
2012-08-01 16:10:33,928 [DEBUG] django.db.backends: (0.040) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:33,973 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:34,016 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:10:34,073 [DEBUG] django.db.backends: (0.055) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:10:34,702 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,702 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,702 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:34,702 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,702 [DEBUG] boto: Data: 
2012-08-01 16:10:34,702 [DEBUG] boto: Headers: {}
2012-08-01 16:10:34,702 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:34,703 [DEBUG] boto: Token: None
2012-08-01 16:10:34,703 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:34 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,766 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,766 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,766 [DEBUG] boto: Method: PUT
2012-08-01 16:10:34,766 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,766 [DEBUG] boto: Data: 
2012-08-01 16:10:34,767 [DEBUG] boto: Headers: {'Content-MD5': '/7y/mrlWGICzFmp4F4q5HQ==', 'Content-Length': '2950', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:34,767 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:34,767 [DEBUG] boto: Token: None
2012-08-01 16:10:34,767 [DEBUG] boto: StringToSign:
PUT
/7y/mrlWGICzFmp4F4q5HQ==
application/octet-stream
Wed, 01 Aug 2012 20:10:34 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ
2012-08-01 16:10:34,942 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,942 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,942 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:34,942 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,942 [DEBUG] boto: Data: 
2012-08-01 16:10:34,942 [DEBUG] boto: Headers: {}
2012-08-01 16:10:34,942 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:34,942 [DEBUG] boto: Token: None
2012-08-01 16:10:34,943 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:34 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,997 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,997 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,997 [DEBUG] boto: Method: PUT
2012-08-01 16:10:34,997 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:34,998 [DEBUG] boto: Data: 
2012-08-01 16:10:34,998 [DEBUG] boto: Headers: {'Content-MD5': 'TZNoGf32ZKnzVGZTWxkfKQ==', 'Content-Length': '41500', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:34,998 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:34,998 [DEBUG] boto: Token: None
2012-08-01 16:10:34,998 [DEBUG] boto: StringToSign:
PUT
TZNoGf32ZKnzVGZTWxkfKQ==
application/octet-stream
Wed, 01 Aug 2012 20:10:34 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ
2012-08-01 16:10:35,550 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,550 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,550 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:35,550 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,550 [DEBUG] boto: Data: 
2012-08-01 16:10:35,550 [DEBUG] boto: Headers: {}
2012-08-01 16:10:35,550 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:35,550 [DEBUG] boto: Token: None
2012-08-01 16:10:35,550 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:35 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,609 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,610 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,610 [DEBUG] boto: Method: PUT
2012-08-01 16:10:35,610 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,610 [DEBUG] boto: Data: 
2012-08-01 16:10:35,610 [DEBUG] boto: Headers: {'Content-MD5': 'STOZA5GFYl/ywn2bDu+kxA==', 'Content-Length': '14406', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:35,610 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:35,610 [DEBUG] boto: Token: None
2012-08-01 16:10:35,610 [DEBUG] boto: StringToSign:
PUT
STOZA5GFYl/ywn2bDu+kxA==
application/octet-stream
Wed, 01 Aug 2012 20:10:35 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ
2012-08-01 16:10:35,873 [DEBUG] django.db.backends: (0.044) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 2, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ', '2012-08-01 20:10:35.828570+00:00', 'George''s', 'Caption defaulted to name: George''s') RETURNING "api_photo"."id"; args=(1, 2, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/2_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/2_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/2_Princeton_NJ', u'2012-08-01 20:10:35.828570+00:00', "George's", "Caption defaulted to name: George's")
2012-08-01 16:10:35,996 [DEBUG] django.db.backends: (0.080) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:10:36,039 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ); args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:10:36,086 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tortuga''s'  AND "api_business"."address" = '41 Leigh Avenue' ) LIMIT 1; args=('Princeton', 'NJ', "Tortuga's", '41 Leigh Avenue')
2012-08-01 16:10:36,128 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:36,173 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:36,216 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:10:36,258 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:10:36,844 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,844 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,844 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:36,844 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,844 [DEBUG] boto: Data: 
2012-08-01 16:10:36,844 [DEBUG] boto: Headers: {}
2012-08-01 16:10:36,844 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:36,844 [DEBUG] boto: Token: None
2012-08-01 16:10:36,844 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:36 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,910 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,911 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,911 [DEBUG] boto: Method: PUT
2012-08-01 16:10:36,911 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:36,911 [DEBUG] boto: Data: 
2012-08-01 16:10:36,911 [DEBUG] boto: Headers: {'Content-MD5': 'UmUuglbuU/6oY+TAe+OimA==', 'Content-Length': '4128', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:36,912 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:36,912 [DEBUG] boto: Token: None
2012-08-01 16:10:36,912 [DEBUG] boto: StringToSign:
PUT
UmUuglbuU/6oY+TAe+OimA==
application/octet-stream
Wed, 01 Aug 2012 20:10:36 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ
2012-08-01 16:10:37,152 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,152 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,152 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:37,152 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,152 [DEBUG] boto: Data: 
2012-08-01 16:10:37,152 [DEBUG] boto: Headers: {}
2012-08-01 16:10:37,152 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:37,153 [DEBUG] boto: Token: None
2012-08-01 16:10:37,153 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:37 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,213 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,213 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,213 [DEBUG] boto: Method: PUT
2012-08-01 16:10:37,213 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:37,213 [DEBUG] boto: Data: 
2012-08-01 16:10:37,213 [DEBUG] boto: Headers: {'Content-MD5': 'g6siGooLiatyGh1LXg5n2w==', 'Content-Length': '63147', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:37,213 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:37,213 [DEBUG] boto: Token: None
2012-08-01 16:10:37,213 [DEBUG] boto: StringToSign:
PUT
g6siGooLiatyGh1LXg5n2w==
application/octet-stream
Wed, 01 Aug 2012 20:10:37 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ
2012-08-01 16:10:38,031 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,031 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,031 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:38,031 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,031 [DEBUG] boto: Data: 
2012-08-01 16:10:38,031 [DEBUG] boto: Headers: {}
2012-08-01 16:10:38,032 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:38,032 [DEBUG] boto: Token: None
2012-08-01 16:10:38,032 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:38 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,094 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,094 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,094 [DEBUG] boto: Method: PUT
2012-08-01 16:10:38,094 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,095 [DEBUG] boto: Data: 
2012-08-01 16:10:38,095 [DEBUG] boto: Headers: {'Content-MD5': 'Oa8LH6sM13mmOJEKctxwVw==', 'Content-Length': '21708', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:38,095 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:38,095 [DEBUG] boto: Token: None
2012-08-01 16:10:38,095 [DEBUG] boto: StringToSign:
PUT
Oa8LH6sM13mmOJEKctxwVw==
application/octet-stream
Wed, 01 Aug 2012 20:10:38 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ
2012-08-01 16:10:38,438 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 3, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ', '2012-08-01 20:10:38.393993+00:00', 'Tortuga''s', 'Caption defaulted to name: Tortuga''s') RETURNING "api_photo"."id"; args=(1, 3, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/3_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/3_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/3_Princeton_NJ', u'2012-08-01 20:10:38.393993+00:00', "Tortuga's", "Caption defaulted to name: Tortuga's")
2012-08-01 16:10:38,567 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:10:38,609 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ); args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:10:38,656 [DEBUG] django.db.backends: (0.044) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Fruity Yogurt'  AND "api_business"."address" = '166 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Fruity Yogurt', '166 Nassau St.')
2012-08-01 16:10:38,699 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:38,749 [DEBUG] django.db.backends: (0.049) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:38,794 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:10:38,846 [DEBUG] django.db.backends: (0.049) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:10:39,074 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,074 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,074 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:39,074 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,074 [DEBUG] boto: Data: 
2012-08-01 16:10:39,074 [DEBUG] boto: Headers: {}
2012-08-01 16:10:39,074 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:39,074 [DEBUG] boto: Token: None
2012-08-01 16:10:39,074 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:39 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,135 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,135 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,136 [DEBUG] boto: Method: PUT
2012-08-01 16:10:39,136 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,136 [DEBUG] boto: Data: 
2012-08-01 16:10:39,136 [DEBUG] boto: Headers: {'Content-MD5': 'il4PkphbNv/zq8UIJKpvvg==', 'Content-Length': '6805', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:39,136 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:39,136 [DEBUG] boto: Token: None
2012-08-01 16:10:39,136 [DEBUG] boto: StringToSign:
PUT
il4PkphbNv/zq8UIJKpvvg==
application/octet-stream
Wed, 01 Aug 2012 20:10:39 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ
2012-08-01 16:10:39,279 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,280 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,280 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:39,280 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,280 [DEBUG] boto: Data: 
2012-08-01 16:10:39,280 [DEBUG] boto: Headers: {}
2012-08-01 16:10:39,280 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:39,280 [DEBUG] boto: Token: None
2012-08-01 16:10:39,280 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:39 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,334 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,335 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,335 [DEBUG] boto: Method: PUT
2012-08-01 16:10:39,335 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:39,335 [DEBUG] boto: Data: 
2012-08-01 16:10:39,335 [DEBUG] boto: Headers: {'Content-MD5': 'YvY64GTllIpjeSGH8IuPog==', 'Content-Length': '49192', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:39,336 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:39,336 [DEBUG] boto: Token: None
2012-08-01 16:10:39,336 [DEBUG] boto: StringToSign:
PUT
YvY64GTllIpjeSGH8IuPog==
application/octet-stream
Wed, 01 Aug 2012 20:10:39 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ
2012-08-01 16:10:40,002 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,002 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,002 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:40,002 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,002 [DEBUG] boto: Data: 
2012-08-01 16:10:40,002 [DEBUG] boto: Headers: {}
2012-08-01 16:10:40,003 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:40,003 [DEBUG] boto: Token: None
2012-08-01 16:10:40,003 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:40 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,069 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,069 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,070 [DEBUG] boto: Method: PUT
2012-08-01 16:10:40,070 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,070 [DEBUG] boto: Data: 
2012-08-01 16:10:40,070 [DEBUG] boto: Headers: {'Content-MD5': 'cKgCyvoU1M7G8Q3SpZOTdQ==', 'Content-Length': '23278', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:40,070 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:40,070 [DEBUG] boto: Token: None
2012-08-01 16:10:40,070 [DEBUG] boto: StringToSign:
PUT
cKgCyvoU1M7G8Q3SpZOTdQ==
application/octet-stream
Wed, 01 Aug 2012 20:10:40 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ
2012-08-01 16:10:40,482 [DEBUG] django.db.backends: (0.071) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 4, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ', '2012-08-01 20:10:40.411031+00:00', 'Fruity Yogurt', 'Caption defaulted to name: Fruity Yogurt') RETURNING "api_photo"."id"; args=(1, 4, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/4_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/4_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/4_Princeton_NJ', u'2012-08-01 20:10:40.411031+00:00', 'Fruity Yogurt', 'Caption defaulted to name: Fruity Yogurt')
2012-08-01 16:10:40,662 [DEBUG] django.db.backends: (0.120) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:10:40,707 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ); args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:10:40,794 [DEBUG] django.db.backends: (0.084) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Qdoba'  AND "api_business"."address" = '140 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Qdoba', '140 Nassau St.')
2012-08-01 16:10:40,851 [DEBUG] django.db.backends: (0.056) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:40,913 [DEBUG] django.db.backends: (0.062) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:41,032 [DEBUG] django.db.backends: (0.117) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:10:41,096 [DEBUG] django.db.backends: (0.062) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:10:41,562 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,562 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,562 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:41,562 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,563 [DEBUG] boto: Data: 
2012-08-01 16:10:41,563 [DEBUG] boto: Headers: {}
2012-08-01 16:10:41,563 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:41,563 [DEBUG] boto: Token: None
2012-08-01 16:10:41,563 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:41 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,620 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,620 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,620 [DEBUG] boto: Method: PUT
2012-08-01 16:10:41,621 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,621 [DEBUG] boto: Data: 
2012-08-01 16:10:41,621 [DEBUG] boto: Headers: {'Content-MD5': 'eV+DpTLTlOm/OWNPST/6rA==', 'Content-Length': '2456', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:41,621 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:41,621 [DEBUG] boto: Token: None
2012-08-01 16:10:41,622 [DEBUG] boto: StringToSign:
PUT
eV+DpTLTlOm/OWNPST/6rA==
application/octet-stream
Wed, 01 Aug 2012 20:10:41 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ
2012-08-01 16:10:41,719 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,719 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,719 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:41,719 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,720 [DEBUG] boto: Data: 
2012-08-01 16:10:41,720 [DEBUG] boto: Headers: {}
2012-08-01 16:10:41,720 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:41,720 [DEBUG] boto: Token: None
2012-08-01 16:10:41,720 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:41 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,807 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,807 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,807 [DEBUG] boto: Method: PUT
2012-08-01 16:10:41,807 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:41,807 [DEBUG] boto: Data: 
2012-08-01 16:10:41,807 [DEBUG] boto: Headers: {'Content-MD5': 'zqw4dDw5fwT32QpXMzCIlA==', 'Content-Length': '26242', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:41,807 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:41,807 [DEBUG] boto: Token: None
2012-08-01 16:10:41,808 [DEBUG] boto: StringToSign:
PUT
zqw4dDw5fwT32QpXMzCIlA==
application/octet-stream
Wed, 01 Aug 2012 20:10:41 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ
2012-08-01 16:10:42,171 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,172 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,172 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:42,172 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,172 [DEBUG] boto: Data: 
2012-08-01 16:10:42,172 [DEBUG] boto: Headers: {}
2012-08-01 16:10:42,172 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:42,172 [DEBUG] boto: Token: None
2012-08-01 16:10:42,172 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:42 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,225 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,225 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,225 [DEBUG] boto: Method: PUT
2012-08-01 16:10:42,225 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,225 [DEBUG] boto: Data: 
2012-08-01 16:10:42,226 [DEBUG] boto: Headers: {'Content-MD5': 'pPX6ybJd8p27wQgI3XPWnw==', 'Content-Length': '10598', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:42,226 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:42,226 [DEBUG] boto: Token: None
2012-08-01 16:10:42,226 [DEBUG] boto: StringToSign:
PUT
pPX6ybJd8p27wQgI3XPWnw==
application/octet-stream
Wed, 01 Aug 2012 20:10:42 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ
2012-08-01 16:10:42,460 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 5, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ', '2012-08-01 20:10:42.415164+00:00', 'Qdoba', 'Caption defaulted to name: Qdoba') RETURNING "api_photo"."id"; args=(1, 5, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/5_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/5_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/5_Princeton_NJ', u'2012-08-01 20:10:42.415164+00:00', 'Qdoba', 'Caption defaulted to name: Qdoba')
2012-08-01 16:10:42,588 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:10:42,633 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ); args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:10:42,679 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'The Bent Spoon'  AND "api_business"."address" = '35 Palmer Square W' ) LIMIT 1; args=('Princeton', 'NJ', 'The Bent Spoon', '35 Palmer Square W')
2012-08-01 16:10:42,750 [DEBUG] django.db.backends: (0.069) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:42,802 [DEBUG] django.db.backends: (0.050) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:42,851 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:10:42,895 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:10:43,432 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,432 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,433 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:43,433 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,433 [DEBUG] boto: Data: 
2012-08-01 16:10:43,433 [DEBUG] boto: Headers: {}
2012-08-01 16:10:43,433 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:43,433 [DEBUG] boto: Token: None
2012-08-01 16:10:43,433 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:43 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,486 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,486 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,486 [DEBUG] boto: Method: PUT
2012-08-01 16:10:43,486 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,486 [DEBUG] boto: Data: 
2012-08-01 16:10:43,486 [DEBUG] boto: Headers: {'Content-MD5': '/B9JpYaDcfAdj1/9ASBwLA==', 'Content-Length': '1147', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:43,486 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:43,486 [DEBUG] boto: Token: None
2012-08-01 16:10:43,487 [DEBUG] boto: StringToSign:
PUT
/B9JpYaDcfAdj1/9ASBwLA==
application/octet-stream
Wed, 01 Aug 2012 20:10:43 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ
2012-08-01 16:10:43,621 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,622 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,622 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:43,622 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,622 [DEBUG] boto: Data: 
2012-08-01 16:10:43,622 [DEBUG] boto: Headers: {}
2012-08-01 16:10:43,622 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:43,622 [DEBUG] boto: Token: None
2012-08-01 16:10:43,622 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:43 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,688 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,688 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,689 [DEBUG] boto: Method: PUT
2012-08-01 16:10:43,689 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,689 [DEBUG] boto: Data: 
2012-08-01 16:10:43,689 [DEBUG] boto: Headers: {'Content-MD5': 'XHqu1RBC9EfTC5Va8kWZqA==', 'Content-Length': '15414', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:43,689 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:43,690 [DEBUG] boto: Token: None
2012-08-01 16:10:43,690 [DEBUG] boto: StringToSign:
PUT
XHqu1RBC9EfTC5Va8kWZqA==
application/octet-stream
Wed, 01 Aug 2012 20:10:43 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ
2012-08-01 16:10:43,934 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,934 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,935 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:43,935 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,935 [DEBUG] boto: Data: 
2012-08-01 16:10:43,935 [DEBUG] boto: Headers: {}
2012-08-01 16:10:43,935 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:43,935 [DEBUG] boto: Token: None
2012-08-01 16:10:43,936 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:43 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,991 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,992 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,992 [DEBUG] boto: Method: PUT
2012-08-01 16:10:43,992 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:43,992 [DEBUG] boto: Data: 
2012-08-01 16:10:43,992 [DEBUG] boto: Headers: {'Content-MD5': 'vvxjuuPCdzX+oVRx7Rzruw==', 'Content-Length': '5665', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:43,992 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:43,992 [DEBUG] boto: Token: None
2012-08-01 16:10:43,993 [DEBUG] boto: StringToSign:
PUT
vvxjuuPCdzX+oVRx7Rzruw==
application/octet-stream
Wed, 01 Aug 2012 20:10:43 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ
2012-08-01 16:10:44,160 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 6, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ', '2012-08-01 20:10:44.115089+00:00', 'The Bent Spoon', 'Caption defaulted to name: The Bent Spoon') RETURNING "api_photo"."id"; args=(1, 6, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/6_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/6_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/6_Princeton_NJ', u'2012-08-01 20:10:44.115089+00:00', 'The Bent Spoon', 'Caption defaulted to name: The Bent Spoon')
2012-08-01 16:10:44,288 [DEBUG] django.db.backends: (0.085) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:10:44,331 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ); args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:10:44,380 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Naked Pizza'  AND "api_business"."address" = '180 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Naked Pizza', '180 Nassau St.')
2012-08-01 16:10:44,425 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:44,471 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:44,515 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:10:44,558 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:10:45,046 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,046 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,046 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:45,046 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,046 [DEBUG] boto: Data: 
2012-08-01 16:10:45,046 [DEBUG] boto: Headers: {}
2012-08-01 16:10:45,047 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:45,047 [DEBUG] boto: Token: None
2012-08-01 16:10:45,047 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:45 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,112 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,113 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,113 [DEBUG] boto: Method: PUT
2012-08-01 16:10:45,113 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,113 [DEBUG] boto: Data: 
2012-08-01 16:10:45,113 [DEBUG] boto: Headers: {'Content-MD5': 'FlJscV6mxEF6qSsSMhaztA==', 'Content-Length': '6759', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:45,113 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:45,113 [DEBUG] boto: Token: None
2012-08-01 16:10:45,113 [DEBUG] boto: StringToSign:
PUT
FlJscV6mxEF6qSsSMhaztA==
application/octet-stream
Wed, 01 Aug 2012 20:10:45 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ
2012-08-01 16:10:45,276 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,276 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,276 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:45,276 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,276 [DEBUG] boto: Data: 
2012-08-01 16:10:45,276 [DEBUG] boto: Headers: {}
2012-08-01 16:10:45,276 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:45,277 [DEBUG] boto: Token: None
2012-08-01 16:10:45,277 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:45 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,328 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,328 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,328 [DEBUG] boto: Method: PUT
2012-08-01 16:10:45,328 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,328 [DEBUG] boto: Data: 
2012-08-01 16:10:45,328 [DEBUG] boto: Headers: {'Content-MD5': 'Qgu6DmuZVuxLlyq0R99obA==', 'Content-Length': '42202', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:45,329 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:45,329 [DEBUG] boto: Token: None
2012-08-01 16:10:45,329 [DEBUG] boto: StringToSign:
PUT
Qgu6DmuZVuxLlyq0R99obA==
application/octet-stream
Wed, 01 Aug 2012 20:10:45 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ
2012-08-01 16:10:45,897 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,897 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,897 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:45,897 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,897 [DEBUG] boto: Data: 
2012-08-01 16:10:45,897 [DEBUG] boto: Headers: {}
2012-08-01 16:10:45,897 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:45,897 [DEBUG] boto: Token: None
2012-08-01 16:10:45,897 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:45 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,953 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,953 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,953 [DEBUG] boto: Method: PUT
2012-08-01 16:10:45,953 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:45,953 [DEBUG] boto: Data: 
2012-08-01 16:10:45,953 [DEBUG] boto: Headers: {'Content-MD5': 'E+JX+YsHgTz0iRflrKjUYA==', 'Content-Length': '21154', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:45,953 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:45,953 [DEBUG] boto: Token: None
2012-08-01 16:10:45,953 [DEBUG] boto: StringToSign:
PUT
E+JX+YsHgTz0iRflrKjUYA==
application/octet-stream
Wed, 01 Aug 2012 20:10:45 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ
2012-08-01 16:10:46,297 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 7, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ', '2012-08-01 20:10:46.250829+00:00', 'Naked Pizza', 'Caption defaulted to name: Naked Pizza') RETURNING "api_photo"."id"; args=(1, 7, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/7_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/7_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/7_Princeton_NJ', u'2012-08-01 20:10:46.250829+00:00', 'Naked Pizza', 'Caption defaulted to name: Naked Pizza')
2012-08-01 16:10:46,424 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:10:46,466 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ); args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:10:46,513 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Panera Bread'  AND "api_business"."address" = '136 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Panera Bread', '136 Nassau St.')
2012-08-01 16:10:46,559 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:46,606 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:46,649 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:10:46,692 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:10:46,914 [DEBUG] django.db.backends: (0.090) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:46,914 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:10:47,158 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,158 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,158 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:47,158 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,158 [DEBUG] boto: Data: 
2012-08-01 16:10:47,158 [DEBUG] boto: Headers: {}
2012-08-01 16:10:47,158 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:47,159 [DEBUG] boto: Token: None
2012-08-01 16:10:47,159 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:47 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,212 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,212 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,212 [DEBUG] boto: Method: PUT
2012-08-01 16:10:47,212 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,212 [DEBUG] boto: Data: 
2012-08-01 16:10:47,212 [DEBUG] boto: Headers: {'Content-MD5': 'jAa7zn4XYfkeTseQ8cg6KA==', 'Content-Length': '4427', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:47,213 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:47,213 [DEBUG] boto: Token: None
2012-08-01 16:10:47,213 [DEBUG] boto: StringToSign:
PUT
jAa7zn4XYfkeTseQ8cg6KA==
application/octet-stream
Wed, 01 Aug 2012 20:10:47 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ
2012-08-01 16:10:47,239 [DEBUG] django.db.backends: (0.049) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo"; args=()
2012-08-01 16:10:47,297 [DEBUG] django.db.backends: (0.056) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:47,328 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,328 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,328 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:47,328 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,329 [DEBUG] boto: Data: 
2012-08-01 16:10:47,329 [DEBUG] boto: Headers: {}
2012-08-01 16:10:47,329 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:47,329 [DEBUG] boto: Token: None
2012-08-01 16:10:47,329 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:47 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,346 [DEBUG] django.db.backends: (0.047) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 1  AND "api_rating"."rating" BETWEEN 1 and 5); args=(1, 1, 5)
2012-08-01 16:10:47,391 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,391 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,391 [DEBUG] boto: Method: PUT
2012-08-01 16:10:47,391 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,391 [DEBUG] boto: Data: 
2012-08-01 16:10:47,391 [DEBUG] boto: Headers: {'Content-MD5': 'KJFEXbAvLgxbIHOBJ+stiQ==', 'Content-Length': '5889', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:47,391 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:47,391 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:47,393 [DEBUG] boto: Token: None
2012-08-01 16:10:47,393 [DEBUG] boto: StringToSign:
PUT
KJFEXbAvLgxbIHOBJ+stiQ==
application/octet-stream
Wed, 01 Aug 2012 20:10:47 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ
2012-08-01 16:10:47,438 [DEBUG] django.db.backends: (0.045) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 1  AND "api_rating"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:10:47,516 [DEBUG] django.db.backends: (0.076) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:47,525 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,525 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,525 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:47,525 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,525 [DEBUG] boto: Data: 
2012-08-01 16:10:47,525 [DEBUG] boto: Headers: {}
2012-08-01 16:10:47,525 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:47,525 [DEBUG] boto: Token: None
2012-08-01 16:10:47,525 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:47 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,606 [DEBUG] django.db.backends: (0.089) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 2  AND "api_rating"."rating" BETWEEN 1 and 5); args=(2, 1, 5)
2012-08-01 16:10:47,609 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,609 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,609 [DEBUG] boto: Method: PUT
2012-08-01 16:10:47,609 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,609 [DEBUG] boto: Data: 
2012-08-01 16:10:47,609 [DEBUG] boto: Headers: {'Content-MD5': 'KJFEXbAvLgxbIHOBJ+stiQ==', 'Content-Length': '5889', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:47,609 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:47,609 [DEBUG] boto: Token: None
2012-08-01 16:10:47,609 [DEBUG] boto: StringToSign:
PUT
KJFEXbAvLgxbIHOBJ+stiQ==
application/octet-stream
Wed, 01 Aug 2012 20:10:47 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ
2012-08-01 16:10:47,660 [DEBUG] django.db.backends: (0.053) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:47,748 [DEBUG] django.db.backends: (0.086) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 2  AND "api_rating"."user_id" = 1 ); args=(2, 1)
2012-08-01 16:10:47,795 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:47,801 [DEBUG] django.db.backends: (0.050) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 8, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ', '2012-08-01 20:10:47.750885+00:00', 'Panera Bread', 'Caption defaulted to name: Panera Bread') RETURNING "api_photo"."id"; args=(1, 8, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/8_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/8_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/8_Princeton_NJ', u'2012-08-01 20:10:47.750885+00:00', 'Panera Bread', 'Caption defaulted to name: Panera Bread')
2012-08-01 16:10:47,854 [DEBUG] django.db.backends: (0.058) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 3  AND "api_rating"."rating" BETWEEN 1 and 5); args=(3, 1, 5)
2012-08-01 16:10:47,900 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:47,948 [DEBUG] django.db.backends: (0.047) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 3  AND "api_rating"."user_id" = 1 ); args=(3, 1)
2012-08-01 16:10:47,967 [DEBUG] django.db.backends: (0.110) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:10:48,006 [DEBUG] django.db.backends: (0.056) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:48,016 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ); args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:10:48,051 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 4  AND "api_rating"."rating" BETWEEN 1 and 5); args=(4, 1, 5)
2012-08-01 16:10:48,062 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Starbucks'  AND "api_business"."address" = '100 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Starbucks', '100 Nassau St.')
2012-08-01 16:10:48,094 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:48,105 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:48,141 [DEBUG] django.db.backends: (0.045) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 4  AND "api_rating"."user_id" = 1 ); args=(4, 1)
2012-08-01 16:10:48,152 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:48,187 [DEBUG] django.db.backends: (0.045) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:48,242 [DEBUG] django.db.backends: (0.088) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:10:48,243 [DEBUG] django.db.backends: (0.054) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 5  AND "api_rating"."rating" BETWEEN 1 and 5); args=(5, 1, 5)
2012-08-01 16:10:48,293 [DEBUG] django.db.backends: (0.049) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:10:48,296 [DEBUG] django.db.backends: (0.052) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:48,342 [DEBUG] django.db.backends: (0.044) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 5  AND "api_rating"."user_id" = 1 ); args=(5, 1)
2012-08-01 16:10:48,389 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:48,434 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 6  AND "api_rating"."rating" BETWEEN 1 and 5); args=(6, 1, 5)
2012-08-01 16:10:48,483 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:48,529 [DEBUG] django.db.backends: (0.045) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 6  AND "api_rating"."user_id" = 1 ); args=(6, 1)
2012-08-01 16:10:48,576 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 ; args=(1,)
2012-08-01 16:10:48,625 [DEBUG] django.db.backends: (0.046) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_photorating" LEFT OUTER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 7  AND "api_rating"."rating" BETWEEN 1 and 5); args=(7, 1, 5)
2012-08-01 16:10:48,655 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,655 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,655 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:48,656 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,656 [DEBUG] boto: Data: 
2012-08-01 16:10:48,656 [DEBUG] boto: Headers: {}
2012-08-01 16:10:48,656 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:48,656 [DEBUG] boto: Token: None
2012-08-01 16:10:48,656 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:48 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,669 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:10:48,710 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,710 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,710 [DEBUG] boto: Method: PUT
2012-08-01 16:10:48,710 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,710 [DEBUG] boto: Data: 
2012-08-01 16:10:48,710 [DEBUG] boto: Headers: {'Content-MD5': '2uBUOzFna49nk+4ULjS6Yw==', 'Content-Length': '5709', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:48,710 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:48,711 [DEBUG] boto: Token: None
2012-08-01 16:10:48,711 [DEBUG] boto: StringToSign:
PUT
2uBUOzFna49nk+4ULjS6Yw==
application/octet-stream
Wed, 01 Aug 2012 20:10:48 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ
2012-08-01 16:10:48,715 [DEBUG] django.db.backends: (0.044) SELECT "api_rating"."id", "api_rating"."user_id", "api_rating"."rating", "api_photorating"."rating_ptr_id", "api_photorating"."photo_id" FROM "api_photorating" INNER JOIN "api_rating" ON ("api_photorating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_photorating"."photo_id" = 7  AND "api_rating"."user_id" = 1 ); args=(7, 1)
2012-08-01 16:10:48,848 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,848 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,848 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:48,849 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,849 [DEBUG] boto: Data: 
2012-08-01 16:10:48,849 [DEBUG] boto: Headers: {}
2012-08-01 16:10:48,849 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:48,849 [DEBUG] boto: Token: None
2012-08-01 16:10:48,849 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:48 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,904 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,904 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,905 [DEBUG] boto: Method: PUT
2012-08-01 16:10:48,905 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:48,905 [DEBUG] boto: Data: 
2012-08-01 16:10:48,905 [DEBUG] boto: Headers: {'Content-MD5': '8TZzCF49EUNxFQoYtmycPA==', 'Content-Length': '5377', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:48,905 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:48,905 [DEBUG] boto: Token: None
2012-08-01 16:10:48,906 [DEBUG] boto: StringToSign:
PUT
8TZzCF49EUNxFQoYtmycPA==
application/octet-stream
Wed, 01 Aug 2012 20:10:48 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ
2012-08-01 16:10:49,033 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,033 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,033 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:49,033 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,033 [DEBUG] boto: Data: 
2012-08-01 16:10:49,033 [DEBUG] boto: Headers: {}
2012-08-01 16:10:49,034 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:49,034 [DEBUG] boto: Token: None
2012-08-01 16:10:49,034 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:49 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,088 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,089 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,089 [DEBUG] boto: Method: PUT
2012-08-01 16:10:49,089 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,089 [DEBUG] boto: Data: 
2012-08-01 16:10:49,089 [DEBUG] boto: Headers: {'Content-MD5': '8TZzCF49EUNxFQoYtmycPA==', 'Content-Length': '5377', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:49,089 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:49,090 [DEBUG] boto: Token: None
2012-08-01 16:10:49,090 [DEBUG] boto: StringToSign:
PUT
8TZzCF49EUNxFQoYtmycPA==
application/octet-stream
Wed, 01 Aug 2012 20:10:49 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ
2012-08-01 16:10:49,258 [DEBUG] django.db.backends: (0.048) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 9, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ', '2012-08-01 20:10:49.210178+00:00', 'Starbucks', 'Caption defaulted to name: Starbucks') RETURNING "api_photo"."id"; args=(1, 9, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/9_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/medium/9_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/9_Princeton_NJ', u'2012-08-01 20:10:49.210178+00:00', 'Starbucks', 'Caption defaulted to name: Starbucks')
2012-08-01 16:10:49,384 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:10:49,427 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ); args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:10:49,473 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Olives'  AND "api_business"."address" = '22 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Olives', '22 Witherspoon St.')
2012-08-01 16:10:49,517 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:10:49,568 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:10:49,611 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:10:49,654 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:10:52,050 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,050 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,050 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:52,050 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,050 [DEBUG] boto: Data: 
2012-08-01 16:10:52,050 [DEBUG] boto: Headers: {}
2012-08-01 16:10:52,050 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:52,051 [DEBUG] boto: Token: None
2012-08-01 16:10:52,051 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:52 GMT
/allsortz/user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,106 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,106 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,106 [DEBUG] boto: Method: PUT
2012-08-01 16:10:52,107 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:52,107 [DEBUG] boto: Data: 
2012-08-01 16:10:52,107 [DEBUG] boto: Headers: {'Content-MD5': 'cSbGISuSzrG7jOO4myP9pA==', 'Content-Length': '389232', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:52,107 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:52,107 [DEBUG] boto: Token: None
2012-08-01 16:10:52,107 [DEBUG] boto: StringToSign:
PUT
cSbGISuSzrG7jOO4myP9pA==
application/octet-stream
Wed, 01 Aug 2012 20:10:52 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ
2012-08-01 16:10:56,588 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,588 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,588 [DEBUG] boto: Method: HEAD
2012-08-01 16:10:56,588 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,588 [DEBUG] boto: Data: 
2012-08-01 16:10:56,588 [DEBUG] boto: Headers: {}
2012-08-01 16:10:56,588 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:56,589 [DEBUG] boto: Token: None
2012-08-01 16:10:56,589 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:10:56 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,666 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,666 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,666 [DEBUG] boto: Method: PUT
2012-08-01 16:10:56,666 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:10:56,667 [DEBUG] boto: Data: 
2012-08-01 16:10:56,667 [DEBUG] boto: Headers: {'Content-MD5': 'gJOycl5k7i8Qx0F0cNeR6g==', 'Content-Length': '441938', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:10:56,667 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:10:56,667 [DEBUG] boto: Token: None
2012-08-01 16:10:56,667 [DEBUG] boto: StringToSign:
PUT
gJOycl5k7i8Qx0F0cNeR6g==
application/octet-stream
Wed, 01 Aug 2012 20:10:56 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ
2012-08-01 16:11:03,180 [DEBUG] django.db.backends: (0.120) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:03,180 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:11:03,317 [DEBUG] geopy: Fetching http://maps.google.com/maps/geo?q=Princeton%2C+NJ&output=xml...
2012-08-01 16:11:03,541 [DEBUG] django.db.backends: (0.062) SELECT "spatial_ref_sys"."srid", "spatial_ref_sys"."auth_name", "spatial_ref_sys"."auth_srid", "spatial_ref_sys"."srtext", "spatial_ref_sys"."proj4text" FROM "spatial_ref_sys" WHERE "spatial_ref_sys"."srid" = 4326 ; args=(4326,)
2012-08-01 16:11:03,611 [DEBUG] django.db.backends: (0.069) SELECT (ST_distance_sphere("api_business"."geom",ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea))) AS "distance", "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ST_distance_sphere("api_business"."geom", ST_GeomFromEWKB('\x0101000020e6100000bc896bc6b3aa52c03b7881edbb2d4440'::bytea)) <= 4828.032; args=(<django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x107a59090>, <django.contrib.gis.db.backends.postgis.adapter.PostGISAdapter object at 0x107a56790>, 4828.032)
2012-08-01 16:11:03,688 [DEBUG] django.db.backends: (0.075) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 3 ; args=(3,)
2012-08-01 16:11:03,738 [DEBUG] django.db.backends: (0.049) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 3  LIMIT 1; args=(3,)
2012-08-01 16:11:03,781 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:03,826 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:03,873 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:03,923 [DEBUG] django.db.backends: (0.050) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:03,985 [DEBUG] django.db.backends: (0.061) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 16:11:04,029 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 3 ); args=(1, 3)
2012-08-01 16:11:04,082 [DEBUG] django.db.backends: (0.053) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 3 ; args=(3,)
2012-08-01 16:11:04,125 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:04,173 [DEBUG] django.db.backends: (0.046) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 3  AND "api_rating"."rating" BETWEEN 1 and 5); args=(3, 1, 5)
2012-08-01 16:11:04,215 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:04,259 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 3 ; args=(3,)
2012-08-01 16:11:04,302 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:04,347 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 3 ; args=(3,)
2012-08-01 16:11:04,389 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 6 ; args=(6,)
2012-08-01 16:11:04,474 [DEBUG] django.db.backends: (0.083) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 6  LIMIT 1; args=(6,)
2012-08-01 16:11:04,517 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:04,561 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:04,604 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:04,646 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:04,691 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 16:11:04,733 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 6 ); args=(1, 6)
2012-08-01 16:11:04,777 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 6 ; args=(6,)
2012-08-01 16:11:04,819 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:04,862 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 6  AND "api_rating"."rating" BETWEEN 1 and 5); args=(6, 1, 5)
2012-08-01 16:11:04,904 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:04,948 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 6 ; args=(6,)
2012-08-01 16:11:04,991 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:05,036 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 6 ; args=(6,)
2012-08-01 16:11:05,077 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 10 ; args=(10,)
2012-08-01 16:11:05,124 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:05,166 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:05,209 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:05,252 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:05,296 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 16:11:05,342 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 10 ); args=(1, 10)
2012-08-01 16:11:05,385 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 10 ; args=(10,)
2012-08-01 16:11:05,429 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:05,475 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 10  AND "api_rating"."rating" BETWEEN 1 and 5); args=(10, 1, 5)
2012-08-01 16:11:05,517 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:05,562 [DEBUG] django.db.backends: (0.044) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 10 ; args=(10,)
2012-08-01 16:11:05,605 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:05,652 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 10 ; args=(10,)
2012-08-01 16:11:05,695 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 16 ; args=(16,)
2012-08-01 16:11:05,739 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:05,782 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:05,825 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:05,867 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:05,911 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 16:11:05,955 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:11:05,998 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 16 ; args=(16,)
2012-08-01 16:11:06,041 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:06,086 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 16  AND "api_rating"."rating" BETWEEN 1 and 5); args=(16, 1, 5)
2012-08-01 16:11:06,134 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:06,178 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:11:06,221 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:06,266 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 16 ; args=(16,)
2012-08-01 16:11:06,317 [DEBUG] django.db.backends: (0.050) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 11 ; args=(11,)
2012-08-01 16:11:06,361 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:06,404 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:06,446 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:06,488 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:06,532 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 16:11:06,574 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:11:06,618 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 11 ; args=(11,)
2012-08-01 16:11:06,661 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:06,704 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 11  AND "api_rating"."rating" BETWEEN 1 and 5); args=(11, 1, 5)
2012-08-01 16:11:06,747 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:06,791 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:11:06,841 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:06,885 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 11 ; args=(11,)
2012-08-01 16:11:06,927 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 9 ; args=(9,)
2012-08-01 16:11:06,974 [DEBUG] django.db.backends: (0.046) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 9  LIMIT 1; args=(9,)
2012-08-01 16:11:07,019 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:07,061 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:07,104 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:07,147 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:07,194 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 16:11:07,237 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 9 ); args=(1, 9)
2012-08-01 16:11:07,280 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 9 ; args=(9,)
2012-08-01 16:11:07,323 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:07,367 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 9  AND "api_rating"."rating" BETWEEN 1 and 5); args=(9, 1, 5)
2012-08-01 16:11:07,409 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:07,453 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 9 ; args=(9,)
2012-08-01 16:11:07,494 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:07,544 [DEBUG] django.db.backends: (0.048) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 9 ; args=(9,)
2012-08-01 16:11:07,586 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 8 ; args=(8,)
2012-08-01 16:11:07,632 [DEBUG] django.db.backends: (0.045) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 8  LIMIT 1; args=(8,)
2012-08-01 16:11:07,676 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:07,719 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:07,804 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:07,846 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:07,890 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 16:11:07,936 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 8 ); args=(1, 8)
2012-08-01 16:11:07,981 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 8 ; args=(8,)
2012-08-01 16:11:08,024 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:08,068 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 8  AND "api_rating"."rating" BETWEEN 1 and 5); args=(8, 1, 5)
2012-08-01 16:11:08,111 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:08,154 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 8 ; args=(8,)
2012-08-01 16:11:08,197 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:08,240 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 8 ; args=(8,)
2012-08-01 16:11:08,282 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 5 ; args=(5,)
2012-08-01 16:11:08,327 [DEBUG] django.db.backends: (0.044) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 5  LIMIT 1; args=(5,)
2012-08-01 16:11:08,370 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:08,412 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:08,454 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:08,496 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:08,541 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 16:11:08,583 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 5 ); args=(1, 5)
2012-08-01 16:11:08,626 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 5 ; args=(5,)
2012-08-01 16:11:08,671 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:08,716 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 5  AND "api_rating"."rating" BETWEEN 1 and 5); args=(5, 1, 5)
2012-08-01 16:11:08,757 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:08,800 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 5 ; args=(5,)
2012-08-01 16:11:08,843 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:08,897 [DEBUG] django.db.backends: (0.052) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 5 ; args=(5,)
2012-08-01 16:11:08,947 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 17 ; args=(17,)
2012-08-01 16:11:08,990 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:09,032 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:09,075 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:09,117 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:09,160 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 16:11:09,205 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:11:09,250 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 17 ; args=(17,)
2012-08-01 16:11:09,300 [DEBUG] django.db.backends: (0.049) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:09,348 [DEBUG] django.db.backends: (0.046) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 17  AND "api_rating"."rating" BETWEEN 1 and 5); args=(17, 1, 5)
2012-08-01 16:11:09,415 [DEBUG] django.db.backends: (0.066) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:09,462 [DEBUG] django.db.backends: (0.046) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:11:09,505 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:09,548 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 17 ; args=(17,)
2012-08-01 16:11:09,590 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 4 ; args=(4,)
2012-08-01 16:11:09,639 [DEBUG] django.db.backends: (0.048) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 4  LIMIT 1; args=(4,)
2012-08-01 16:11:09,683 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:09,727 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:09,770 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:09,813 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:09,863 [DEBUG] django.db.backends: (0.048) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 16:11:09,910 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 4 ); args=(1, 4)
2012-08-01 16:11:09,952 [DEBUG] django.db.backends: (0.041) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 4 ; args=(4,)
2012-08-01 16:11:09,998 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:10,042 [DEBUG] django.db.backends: (0.042) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 4  AND "api_rating"."rating" BETWEEN 1 and 5); args=(4, 1, 5)
2012-08-01 16:11:10,085 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:10,128 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 4 ; args=(4,)
2012-08-01 16:11:10,171 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:10,220 [DEBUG] django.db.backends: (0.047) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 4 ; args=(4,)
2012-08-01 16:11:10,264 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 13 ; args=(13,)
2012-08-01 16:11:10,309 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:10,358 [DEBUG] django.db.backends: (0.048) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:10,400 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:10,448 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:10,495 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 16:11:10,538 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:11:10,584 [DEBUG] django.db.backends: (0.045) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 13 ; args=(13,)
2012-08-01 16:11:10,629 [DEBUG] django.db.backends: (0.044) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:10,673 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 13  AND "api_rating"."rating" BETWEEN 1 and 5); args=(13, 1, 5)
2012-08-01 16:11:10,715 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:10,759 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:11:10,803 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:10,848 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 13 ; args=(13,)
2012-08-01 16:11:10,890 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 7 ; args=(7,)
2012-08-01 16:11:10,939 [DEBUG] django.db.backends: (0.047) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 7  LIMIT 1; args=(7,)
2012-08-01 16:11:10,983 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:11,027 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:11,072 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:11,695 [DEBUG] django.db.backends: (0.622) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:11,739 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 16:11:11,783 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 7 ); args=(1, 7)
2012-08-01 16:11:11,827 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 7 ; args=(7,)
2012-08-01 16:11:11,871 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:11,915 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 7  AND "api_rating"."rating" BETWEEN 1 and 5); args=(7, 1, 5)
2012-08-01 16:11:11,956 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:11,999 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 7 ; args=(7,)
2012-08-01 16:11:12,049 [DEBUG] django.db.backends: (0.049) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:12,095 [DEBUG] django.db.backends: (0.045) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 7 ; args=(7,)
2012-08-01 16:11:12,139 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 12 ; args=(12,)
2012-08-01 16:11:12,182 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:12,226 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:12,271 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:12,318 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:12,365 [DEBUG] django.db.backends: (0.046) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 16:11:12,408 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:11:12,460 [DEBUG] django.db.backends: (0.050) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 12 ; args=(12,)
2012-08-01 16:11:12,505 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:12,552 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 12  AND "api_rating"."rating" BETWEEN 1 and 5); args=(12, 1, 5)
2012-08-01 16:11:12,595 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:12,637 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:11:12,680 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:12,724 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 12 ; args=(12,)
2012-08-01 16:11:12,767 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 15 ; args=(15,)
2012-08-01 16:11:12,811 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:12,859 [DEBUG] django.db.backends: (0.047) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:12,907 [DEBUG] django.db.backends: (0.046) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:12,950 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:12,996 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 16:11:13,040 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:11:13,115 [DEBUG] django.db.backends: (0.074) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 15 ; args=(15,)
2012-08-01 16:11:13,164 [DEBUG] django.db.backends: (0.048) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:13,210 [DEBUG] django.db.backends: (0.044) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 15  AND "api_rating"."rating" BETWEEN 1 and 5); args=(15, 1, 5)
2012-08-01 16:11:13,252 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:13,604 [DEBUG] django.db.backends: (0.351) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:11:13,645 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:13,688 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 15 ; args=(15,)
2012-08-01 16:11:13,732 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 14 ; args=(14,)
2012-08-01 16:11:13,775 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:13,833 [DEBUG] django.db.backends: (0.056) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:13,877 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:13,919 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:13,964 [DEBUG] django.db.backends: (0.042) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 16:11:14,008 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:11:14,052 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 14 ; args=(14,)
2012-08-01 16:11:14,096 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:14,141 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 14  AND "api_rating"."rating" BETWEEN 1 and 5); args=(14, 1, 5)
2012-08-01 16:11:14,183 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:14,226 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:11:14,269 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:14,320 [DEBUG] django.db.backends: (0.049) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 14 ; args=(14,)
2012-08-01 16:11:14,361 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 1 ; args=(1,)
2012-08-01 16:11:14,407 [DEBUG] django.db.backends: (0.045) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 1  LIMIT 1; args=(1,)
2012-08-01 16:11:14,451 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:14,494 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:14,538 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:14,581 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:14,627 [DEBUG] django.db.backends: (0.044) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 16:11:14,671 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 1 ); args=(1, 1)
2012-08-01 16:11:14,714 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 1 ; args=(1,)
2012-08-01 16:11:14,759 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:14,869 [DEBUG] django.db.backends: (0.108) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 1  AND "api_rating"."rating" BETWEEN 1 and 5); args=(1, 1, 5)
2012-08-01 16:11:14,933 [DEBUG] django.db.backends: (0.063) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:14,987 [DEBUG] django.db.backends: (0.052) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 1 ; args=(1,)
2012-08-01 16:11:15,043 [DEBUG] django.db.backends: (0.054) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:15,094 [DEBUG] django.db.backends: (0.049) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 1 ; args=(1,)
2012-08-01 16:11:15,135 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_photo" WHERE "api_photo"."business_id" = 2 ; args=(2,)
2012-08-01 16:11:15,199 [DEBUG] django.db.backends: (0.064) SELECT "api_photo"."id", "api_photo"."user_id", "api_photo"."business_id", "api_photo"."is_default", "api_photo"."image", "api_photo"."image_medium", "api_photo"."image_thumb", "api_photo"."date", "api_photo"."title", "api_photo"."caption" FROM "api_photo" WHERE "api_photo"."business_id" = 2  LIMIT 1; args=(2,)
2012-08-01 16:11:15,260 [DEBUG] django.db.backends: (0.059) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:15,317 [DEBUG] django.db.backends: (0.055) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 1 ; args=(1,)
2012-08-01 16:11:15,363 [DEBUG] django.db.backends: (0.045) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 2 ; args=(2,)
2012-08-01 16:11:15,406 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 3 ; args=(3,)
2012-08-01 16:11:15,449 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 16:11:15,493 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_businessrating" INNER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_rating"."user_id" = 1  AND "api_businessrating"."business_id" = 2 ); args=(1, 2)
2012-08-01 16:11:15,536 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE "api_businesscategory"."business_id" = 2 ; args=(2,)
2012-08-01 16:11:15,580 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."id" = 1 ; args=(1,)
2012-08-01 16:11:15,624 [DEBUG] django.db.backends: (0.043) SELECT COUNT("api_rating"."rating") AS "rating__count" FROM "api_categoryrating" LEFT OUTER JOIN "api_rating" ON ("api_categoryrating"."rating_ptr_id" = "api_rating"."id") WHERE ("api_categoryrating"."category_id" = 2  AND "api_rating"."rating" BETWEEN 1 and 5); args=(2, 1, 5)
2012-08-01 16:11:15,668 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_discussionrating" INNER JOIN "api_rating" ON ("api_discussionrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_rating"."rating" = 0 ; args=(0,)
2012-08-01 16:11:15,712 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 2 ; args=(2,)
2012-08-01 16:11:15,754 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_usersubscription" WHERE ("api_usersubscription"."tag_id" = 1  AND "api_usersubscription"."user_id" = 1 ); args=(1, 1)
2012-08-01 16:11:15,799 [DEBUG] django.db.backends: (0.043) SELECT SUM("api_rating"."rating") AS "rating__sum", COUNT("api_rating"."rating") AS "rating__count" FROM "api_businessrating" LEFT OUTER JOIN "api_rating" ON ("api_businessrating"."rating_ptr_id" = "api_rating"."id") WHERE "api_businessrating"."business_id" = 2 ; args=(2,)
2012-08-01 16:11:24,245 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,245 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,245 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:24,246 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,246 [DEBUG] boto: Data: 
2012-08-01 16:11:24,246 [DEBUG] boto: Headers: {}
2012-08-01 16:11:24,246 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:24,246 [DEBUG] boto: Token: None
2012-08-01 16:11:24,246 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:24 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,298 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,298 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,299 [DEBUG] boto: Method: PUT
2012-08-01 16:11:24,299 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:24,299 [DEBUG] boto: Data: 
2012-08-01 16:11:24,299 [DEBUG] boto: Headers: {'Content-MD5': 'iRaL57ScD6R0hgcjlEh3ag==', 'Content-Length': '408362', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:24,299 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:24,299 [DEBUG] boto: Token: None
2012-08-01 16:11:24,299 [DEBUG] boto: StringToSign:
PUT
iRaL57ScD6R0hgcjlEh3ag==
application/octet-stream
Wed, 01 Aug 2012 20:11:24 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ
2012-08-01 16:11:29,064 [DEBUG] django.db.backends: (0.082) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 10, true, 'user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ', '2012-08-01 20:11:28.981751+00:00', 'Olives', 'Caption defaulted to name: Olives') RETURNING "api_photo"."id"; args=(1, 10, True, u'user_uploads/profilepics/matt/2012-8-1.16.10/profile/10_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/10_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.10/web/10_Princeton_NJ', u'2012-08-01 20:11:28.981751+00:00', 'Olives', 'Caption defaulted to name: Olives')
2012-08-01 16:11:29,228 [DEBUG] django.db.backends: (0.098) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:11:29,302 [DEBUG] django.db.backends: (0.073) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ); args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:11:29,363 [DEBUG] django.db.backends: (0.060) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Small World Coffee'  AND "api_business"."address" = '14 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Small World Coffee', '14 Witherspoon St.')
2012-08-01 16:11:29,416 [DEBUG] django.db.backends: (0.052) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:29,465 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:29,540 [DEBUG] django.db.backends: (0.074) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 11 ); args=(1, 11)
2012-08-01 16:11:29,594 [DEBUG] django.db.backends: (0.052) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 11 ; args=(11,)
2012-08-01 16:11:30,101 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,101 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,101 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:30,101 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,101 [DEBUG] boto: Data: 
2012-08-01 16:11:30,101 [DEBUG] boto: Headers: {}
2012-08-01 16:11:30,101 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:30,102 [DEBUG] boto: Token: None
2012-08-01 16:11:30,102 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:30 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,155 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,156 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,156 [DEBUG] boto: Method: PUT
2012-08-01 16:11:30,156 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,156 [DEBUG] boto: Data: 
2012-08-01 16:11:30,156 [DEBUG] boto: Headers: {'Content-MD5': 'EDdnhE4g8SEnhT6IXzyg1A==', 'Content-Length': '3663', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:30,156 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:30,156 [DEBUG] boto: Token: None
2012-08-01 16:11:30,156 [DEBUG] boto: StringToSign:
PUT
EDdnhE4g8SEnhT6IXzyg1A==
application/octet-stream
Wed, 01 Aug 2012 20:11:30 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ
2012-08-01 16:11:30,254 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,255 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,255 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:30,255 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,255 [DEBUG] boto: Data: 
2012-08-01 16:11:30,255 [DEBUG] boto: Headers: {}
2012-08-01 16:11:30,255 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:30,255 [DEBUG] boto: Token: None
2012-08-01 16:11:30,255 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:30 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,318 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,318 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,318 [DEBUG] boto: Method: PUT
2012-08-01 16:11:30,318 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,318 [DEBUG] boto: Data: 
2012-08-01 16:11:30,318 [DEBUG] boto: Headers: {'Content-MD5': 'qiT2Lsw5n56n4o5Zf2f9vQ==', 'Content-Length': '6437', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:30,318 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:30,319 [DEBUG] boto: Token: None
2012-08-01 16:11:30,319 [DEBUG] boto: StringToSign:
PUT
qiT2Lsw5n56n4o5Zf2f9vQ==
application/octet-stream
Wed, 01 Aug 2012 20:11:30 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ
2012-08-01 16:11:30,475 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,476 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,476 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:30,476 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,476 [DEBUG] boto: Data: 
2012-08-01 16:11:30,476 [DEBUG] boto: Headers: {}
2012-08-01 16:11:30,476 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:30,476 [DEBUG] boto: Token: None
2012-08-01 16:11:30,476 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:30 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,529 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,530 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,530 [DEBUG] boto: Method: PUT
2012-08-01 16:11:30,530 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,530 [DEBUG] boto: Data: 
2012-08-01 16:11:30,530 [DEBUG] boto: Headers: {'Content-MD5': 'qiT2Lsw5n56n4o5Zf2f9vQ==', 'Content-Length': '6437', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:30,530 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:30,530 [DEBUG] boto: Token: None
2012-08-01 16:11:30,530 [DEBUG] boto: StringToSign:
PUT
qiT2Lsw5n56n4o5Zf2f9vQ==
application/octet-stream
Wed, 01 Aug 2012 20:11:30 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ
2012-08-01 16:11:30,707 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 11, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ', '2012-08-01 20:11:30.662464+00:00', 'Small World Coffee', 'Caption defaulted to name: Small World Coffee') RETURNING "api_photo"."id"; args=(1, 11, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/11_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/11_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/11_Princeton_NJ', u'2012-08-01 20:11:30.662464+00:00', 'Small World Coffee', 'Caption defaulted to name: Small World Coffee')
2012-08-01 16:11:30,836 [DEBUG] django.db.backends: (0.084) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:11:30,881 [DEBUG] django.db.backends: (0.044) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ); args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:11:30,929 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thomas Sweet'  AND "api_business"."address" = '179 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thomas Sweet', '179 Nassau St.')
2012-08-01 16:11:30,972 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:31,017 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:31,062 [DEBUG] django.db.backends: (0.043) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 12 ); args=(1, 12)
2012-08-01 16:11:31,105 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 12 ; args=(12,)
2012-08-01 16:11:31,279 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,279 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,279 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:31,279 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,280 [DEBUG] boto: Data: 
2012-08-01 16:11:31,280 [DEBUG] boto: Headers: {}
2012-08-01 16:11:31,280 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:31,280 [DEBUG] boto: Token: None
2012-08-01 16:11:31,280 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:31 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,341 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,341 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,341 [DEBUG] boto: Method: PUT
2012-08-01 16:11:31,341 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,341 [DEBUG] boto: Data: 
2012-08-01 16:11:31,341 [DEBUG] boto: Headers: {'Content-MD5': '6WJcyT2M2o2Iwt/CMrVS7w==', 'Content-Length': '2087', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:31,341 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:31,342 [DEBUG] boto: Token: None
2012-08-01 16:11:31,342 [DEBUG] boto: StringToSign:
PUT
6WJcyT2M2o2Iwt/CMrVS7w==
application/octet-stream
Wed, 01 Aug 2012 20:11:31 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ
2012-08-01 16:11:31,459 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,459 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,459 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:31,459 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,459 [DEBUG] boto: Data: 
2012-08-01 16:11:31,460 [DEBUG] boto: Headers: {}
2012-08-01 16:11:31,460 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:31,460 [DEBUG] boto: Token: None
2012-08-01 16:11:31,460 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:31 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,525 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,525 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,526 [DEBUG] boto: Method: PUT
2012-08-01 16:11:31,526 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,526 [DEBUG] boto: Data: 
2012-08-01 16:11:31,526 [DEBUG] boto: Headers: {'Content-MD5': 'PeKacx+NNWUeiVDgi8bAng==', 'Content-Length': '25405', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:31,526 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:31,526 [DEBUG] boto: Token: None
2012-08-01 16:11:31,526 [DEBUG] boto: StringToSign:
PUT
PeKacx+NNWUeiVDgi8bAng==
application/octet-stream
Wed, 01 Aug 2012 20:11:31 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ
2012-08-01 16:11:31,871 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,871 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,871 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:31,871 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,871 [DEBUG] boto: Data: 
2012-08-01 16:11:31,871 [DEBUG] boto: Headers: {}
2012-08-01 16:11:31,871 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:31,871 [DEBUG] boto: Token: None
2012-08-01 16:11:31,872 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:31 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,936 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,936 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,936 [DEBUG] boto: Method: PUT
2012-08-01 16:11:31,936 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:31,936 [DEBUG] boto: Data: 
2012-08-01 16:11:31,936 [DEBUG] boto: Headers: {'Content-MD5': 'cEyn3Lnhz5GezHtX6njRXA==', 'Content-Length': '10806', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:31,936 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:31,937 [DEBUG] boto: Token: None
2012-08-01 16:11:31,937 [DEBUG] boto: StringToSign:
PUT
cEyn3Lnhz5GezHtX6njRXA==
application/octet-stream
Wed, 01 Aug 2012 20:11:31 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ
2012-08-01 16:11:32,176 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 12, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ', '2012-08-01 20:11:32.130708+00:00', 'Thomas Sweet', 'Caption defaulted to name: Thomas Sweet') RETURNING "api_photo"."id"; args=(1, 12, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/12_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/12_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/12_Princeton_NJ', u'2012-08-01 20:11:32.130708+00:00', 'Thomas Sweet', 'Caption defaulted to name: Thomas Sweet')
2012-08-01 16:11:32,302 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:11:32,345 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ); args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:11:32,395 [DEBUG] django.db.backends: (0.049) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Mehek'  AND "api_business"."address" = '164 Nassaus St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Mehek', '164 Nassaus St.')
2012-08-01 16:11:32,438 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:32,487 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:32,531 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 13 ); args=(1, 13)
2012-08-01 16:11:32,576 [DEBUG] django.db.backends: (0.043) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 13 ; args=(13,)
2012-08-01 16:11:33,105 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,105 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,105 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:33,105 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,105 [DEBUG] boto: Data: 
2012-08-01 16:11:33,105 [DEBUG] boto: Headers: {}
2012-08-01 16:11:33,105 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:33,105 [DEBUG] boto: Token: None
2012-08-01 16:11:33,105 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:33 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,966 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,966 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,966 [DEBUG] boto: Method: PUT
2012-08-01 16:11:33,966 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:33,966 [DEBUG] boto: Data: 
2012-08-01 16:11:33,966 [DEBUG] boto: Headers: {'Content-MD5': 'pN72WHn+PVYYE5x8E0SJdg==', 'Content-Length': '4278', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:33,967 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:33,967 [DEBUG] boto: Token: None
2012-08-01 16:11:33,967 [DEBUG] boto: StringToSign:
PUT
pN72WHn+PVYYE5x8E0SJdg==
application/octet-stream
Wed, 01 Aug 2012 20:11:33 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ
2012-08-01 16:11:34,093 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,093 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,093 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:34,094 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,094 [DEBUG] boto: Data: 
2012-08-01 16:11:34,094 [DEBUG] boto: Headers: {}
2012-08-01 16:11:34,094 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:34,094 [DEBUG] boto: Token: None
2012-08-01 16:11:34,094 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:34 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,155 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,155 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,156 [DEBUG] boto: Method: PUT
2012-08-01 16:11:34,156 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,156 [DEBUG] boto: Data: 
2012-08-01 16:11:34,156 [DEBUG] boto: Headers: {'Content-MD5': 'Gduz2KJF2O8PL7yTZdFLxw==', 'Content-Length': '29123', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:34,156 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:34,156 [DEBUG] boto: Token: None
2012-08-01 16:11:34,156 [DEBUG] boto: StringToSign:
PUT
Gduz2KJF2O8PL7yTZdFLxw==
application/octet-stream
Wed, 01 Aug 2012 20:11:34 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ
2012-08-01 16:11:34,563 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,563 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,563 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:34,563 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,563 [DEBUG] boto: Data: 
2012-08-01 16:11:34,563 [DEBUG] boto: Headers: {}
2012-08-01 16:11:34,563 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:34,563 [DEBUG] boto: Token: None
2012-08-01 16:11:34,563 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:34 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,618 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,618 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,618 [DEBUG] boto: Method: PUT
2012-08-01 16:11:34,618 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,618 [DEBUG] boto: Data: 
2012-08-01 16:11:34,618 [DEBUG] boto: Headers: {'Content-MD5': 'H62Fr6YRKtjJnXbjMFHdhQ==', 'Content-Length': '22763', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:34,618 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:34,619 [DEBUG] boto: Token: None
2012-08-01 16:11:34,619 [DEBUG] boto: StringToSign:
PUT
H62Fr6YRKtjJnXbjMFHdhQ==
application/octet-stream
Wed, 01 Aug 2012 20:11:34 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ
2012-08-01 16:11:34,978 [DEBUG] django.db.backends: (0.049) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 13, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ', '2012-08-01 20:11:34.929454+00:00', 'Mehek', 'Caption defaulted to name: Mehek') RETURNING "api_photo"."id"; args=(1, 13, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/13_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/13_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/13_Princeton_NJ', u'2012-08-01 20:11:34.929454+00:00', 'Mehek', 'Caption defaulted to name: Mehek')
2012-08-01 16:11:35,105 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:11:35,148 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ); args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:11:35,195 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Thai Village'  AND "api_business"."address" = '235 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Thai Village', '235 Nassau St.')
2012-08-01 16:11:35,237 [DEBUG] django.db.backends: (0.041) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:35,284 [DEBUG] django.db.backends: (0.046) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:35,329 [DEBUG] django.db.backends: (0.044) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 14 ); args=(1, 14)
2012-08-01 16:11:35,377 [DEBUG] django.db.backends: (0.047) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 14 ; args=(14,)
2012-08-01 16:11:35,660 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,660 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,660 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:35,660 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,660 [DEBUG] boto: Data: 
2012-08-01 16:11:35,660 [DEBUG] boto: Headers: {}
2012-08-01 16:11:35,660 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:35,660 [DEBUG] boto: Token: None
2012-08-01 16:11:35,661 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:35 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,734 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,734 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,734 [DEBUG] boto: Method: PUT
2012-08-01 16:11:35,734 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,734 [DEBUG] boto: Data: 
2012-08-01 16:11:35,734 [DEBUG] boto: Headers: {'Content-MD5': 'X59zJWI7r6KTCx8BTyzXeA==', 'Content-Length': '3948', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:35,734 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:35,734 [DEBUG] boto: Token: None
2012-08-01 16:11:35,735 [DEBUG] boto: StringToSign:
PUT
X59zJWI7r6KTCx8BTyzXeA==
application/octet-stream
Wed, 01 Aug 2012 20:11:35 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ
2012-08-01 16:11:35,898 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,898 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,898 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:35,898 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,898 [DEBUG] boto: Data: 
2012-08-01 16:11:35,898 [DEBUG] boto: Headers: {}
2012-08-01 16:11:35,898 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:35,898 [DEBUG] boto: Token: None
2012-08-01 16:11:35,898 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:35 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,993 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,993 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,994 [DEBUG] boto: Method: PUT
2012-08-01 16:11:35,994 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:35,994 [DEBUG] boto: Data: 
2012-08-01 16:11:35,994 [DEBUG] boto: Headers: {'Content-MD5': 'UF2MXgP1VnEKmhvFL+sVlw==', 'Content-Length': '59645', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:35,994 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:35,994 [DEBUG] boto: Token: None
2012-08-01 16:11:35,994 [DEBUG] boto: StringToSign:
PUT
UF2MXgP1VnEKmhvFL+sVlw==
application/octet-stream
Wed, 01 Aug 2012 20:11:35 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ
2012-08-01 16:11:36,810 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,810 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,810 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:36,810 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,810 [DEBUG] boto: Data: 
2012-08-01 16:11:36,811 [DEBUG] boto: Headers: {}
2012-08-01 16:11:36,811 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:36,811 [DEBUG] boto: Token: None
2012-08-01 16:11:36,811 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:36 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,876 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,876 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,876 [DEBUG] boto: Method: PUT
2012-08-01 16:11:36,876 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:36,876 [DEBUG] boto: Data: 
2012-08-01 16:11:36,877 [DEBUG] boto: Headers: {'Content-MD5': 'ebBBQwZSR8KKyxQZkeXJsg==', 'Content-Length': '20832', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:36,877 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:36,877 [DEBUG] boto: Token: None
2012-08-01 16:11:36,877 [DEBUG] boto: StringToSign:
PUT
ebBBQwZSR8KKyxQZkeXJsg==
application/octet-stream
Wed, 01 Aug 2012 20:11:36 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ
2012-08-01 16:11:37,223 [DEBUG] django.db.backends: (0.047) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 14, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ', '2012-08-01 20:11:37.176775+00:00', 'Thai Village', 'Caption defaulted to name: Thai Village') RETURNING "api_photo"."id"; args=(1, 14, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/14_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/14_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/14_Princeton_NJ', u'2012-08-01 20:11:37.176775+00:00', 'Thai Village', 'Caption defaulted to name: Thai Village')
2012-08-01 16:11:37,354 [DEBUG] django.db.backends: (0.083) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:11:37,396 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ); args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:11:37,451 [DEBUG] django.db.backends: (0.053) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Tomo Sushi'  AND "api_business"."address" = '236 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Tomo Sushi', '236 Nassau St.')
2012-08-01 16:11:37,494 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:37,539 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:37,627 [DEBUG] django.db.backends: (0.085) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 15 ); args=(1, 15)
2012-08-01 16:11:37,671 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 15 ; args=(15,)
2012-08-01 16:11:39,958 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:39,958 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:39,958 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:39,958 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:39,958 [DEBUG] boto: Data: 
2012-08-01 16:11:39,958 [DEBUG] boto: Headers: {}
2012-08-01 16:11:39,958 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:39,959 [DEBUG] boto: Token: None
2012-08-01 16:11:39,959 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:39 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:40,012 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:40,012 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:40,012 [DEBUG] boto: Method: PUT
2012-08-01 16:11:40,012 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:40,012 [DEBUG] boto: Data: 
2012-08-01 16:11:40,012 [DEBUG] boto: Headers: {'Content-MD5': 'cu4oCKjJtRTGhqBsCgVqnw==', 'Content-Length': '7377', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:40,024 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:40,024 [DEBUG] boto: Token: None
2012-08-01 16:11:40,024 [DEBUG] boto: StringToSign:
PUT
cu4oCKjJtRTGhqBsCgVqnw==
application/octet-stream
Wed, 01 Aug 2012 20:11:40 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ
2012-08-01 16:11:40,200 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,200 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,200 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:40,200 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,200 [DEBUG] boto: Data: 
2012-08-01 16:11:40,200 [DEBUG] boto: Headers: {}
2012-08-01 16:11:40,201 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:40,201 [DEBUG] boto: Token: None
2012-08-01 16:11:40,201 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:40 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,273 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,273 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,273 [DEBUG] boto: Method: PUT
2012-08-01 16:11:40,273 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:40,274 [DEBUG] boto: Data: 
2012-08-01 16:11:40,274 [DEBUG] boto: Headers: {'Content-MD5': 'omvcsUUHCVJj+MIZPQqmXA==', 'Content-Length': '83643', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:40,274 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:40,274 [DEBUG] boto: Token: None
2012-08-01 16:11:40,274 [DEBUG] boto: StringToSign:
PUT
omvcsUUHCVJj+MIZPQqmXA==
application/octet-stream
Wed, 01 Aug 2012 20:11:40 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ
2012-08-01 16:11:41,291 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,291 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,291 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:41,291 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,292 [DEBUG] boto: Data: 
2012-08-01 16:11:41,292 [DEBUG] boto: Headers: {}
2012-08-01 16:11:41,292 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:41,292 [DEBUG] boto: Token: None
2012-08-01 16:11:41,292 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:41 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,345 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,345 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,345 [DEBUG] boto: Method: PUT
2012-08-01 16:11:41,345 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,346 [DEBUG] boto: Data: 
2012-08-01 16:11:41,346 [DEBUG] boto: Headers: {'Content-MD5': 'dWTL7l7gaU6Sy5BGBD82+A==', 'Content-Length': '29741', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:41,346 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:41,346 [DEBUG] boto: Token: None
2012-08-01 16:11:41,346 [DEBUG] boto: StringToSign:
PUT
dWTL7l7gaU6Sy5BGBD82+A==
application/octet-stream
Wed, 01 Aug 2012 20:11:41 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ
2012-08-01 16:11:41,786 [DEBUG] django.db.backends: (0.054) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 15, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ', '2012-08-01 20:11:41.733323+00:00', 'Tomo Sushi', 'Caption defaulted to name: Tomo Sushi') RETURNING "api_photo"."id"; args=(1, 15, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/15_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/15_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/15_Princeton_NJ', u'2012-08-01 20:11:41.733323+00:00', 'Tomo Sushi', 'Caption defaulted to name: Tomo Sushi')
2012-08-01 16:11:42,116 [DEBUG] django.db.backends: (0.194) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:11:42,159 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ); args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:11:42,205 [DEBUG] django.db.backends: (0.045) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Subway'  AND "api_business"."address" = '18 Witherspoon St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Subway', '18 Witherspoon St.')
2012-08-01 16:11:42,248 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:42,295 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:42,356 [DEBUG] django.db.backends: (0.060) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 16 ); args=(1, 16)
2012-08-01 16:11:42,399 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 16 ; args=(16,)
2012-08-01 16:11:43,260 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,260 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,260 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:43,260 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,261 [DEBUG] boto: Data: 
2012-08-01 16:11:43,261 [DEBUG] boto: Headers: {}
2012-08-01 16:11:43,261 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:43,261 [DEBUG] boto: Token: None
2012-08-01 16:11:43,261 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:43 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,315 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,315 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,315 [DEBUG] boto: Method: PUT
2012-08-01 16:11:43,316 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,316 [DEBUG] boto: Data: 
2012-08-01 16:11:43,316 [DEBUG] boto: Headers: {'Content-MD5': 'ZOL/5cMW2ZslxDwIvZOTxw==', 'Content-Length': '1770', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:43,316 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:43,316 [DEBUG] boto: Token: None
2012-08-01 16:11:43,316 [DEBUG] boto: StringToSign:
PUT
ZOL/5cMW2ZslxDwIvZOTxw==
application/octet-stream
Wed, 01 Aug 2012 20:11:43 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ
2012-08-01 16:11:43,410 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,410 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,410 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:43,410 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,410 [DEBUG] boto: Data: 
2012-08-01 16:11:43,410 [DEBUG] boto: Headers: {}
2012-08-01 16:11:43,410 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:43,411 [DEBUG] boto: Token: None
2012-08-01 16:11:43,411 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:43 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,478 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,478 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,478 [DEBUG] boto: Method: PUT
2012-08-01 16:11:43,478 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,478 [DEBUG] boto: Data: 
2012-08-01 16:11:43,478 [DEBUG] boto: Headers: {'Content-MD5': '4gsy9FVdqaZrMBzozgLjuQ==', 'Content-Length': '22164', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:43,478 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:43,478 [DEBUG] boto: Token: None
2012-08-01 16:11:43,479 [DEBUG] boto: StringToSign:
PUT
4gsy9FVdqaZrMBzozgLjuQ==
application/octet-stream
Wed, 01 Aug 2012 20:11:43 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ
2012-08-01 16:11:43,796 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,796 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,797 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:43,797 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,797 [DEBUG] boto: Data: 
2012-08-01 16:11:43,797 [DEBUG] boto: Headers: {}
2012-08-01 16:11:43,797 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:43,797 [DEBUG] boto: Token: None
2012-08-01 16:11:43,797 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:43 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,853 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,853 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,853 [DEBUG] boto: Method: PUT
2012-08-01 16:11:43,854 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:43,854 [DEBUG] boto: Data: 
2012-08-01 16:11:43,854 [DEBUG] boto: Headers: {'Content-MD5': '+otOUVSjyPQ9ls2VCZTZlA==', 'Content-Length': '7829', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:43,892 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:43,892 [DEBUG] boto: Token: None
2012-08-01 16:11:43,893 [DEBUG] boto: StringToSign:
PUT
+otOUVSjyPQ9ls2VCZTZlA==
application/octet-stream
Wed, 01 Aug 2012 20:11:43 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ
2012-08-01 16:11:44,088 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 16, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ', '2012-08-01 20:11:44.043302+00:00', 'Subway', 'Caption defaulted to name: Subway') RETURNING "api_photo"."id"; args=(1, 16, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/16_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/16_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/16_Princeton_NJ', u'2012-08-01 20:11:44.043302+00:00', 'Subway', 'Caption defaulted to name: Subway')
2012-08-01 16:11:44,214 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:11:44,257 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ); args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:11:44,304 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Princeton'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Pjs Pancake House'  AND "api_business"."address" = '154 Nassau St.' ) LIMIT 1; args=('Princeton', 'NJ', 'Pjs Pancake House', '154 Nassau St.')
2012-08-01 16:11:44,348 [DEBUG] django.db.backends: (0.043) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:44,396 [DEBUG] django.db.backends: (0.048) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:44,441 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 17 ); args=(1, 17)
2012-08-01 16:11:44,483 [DEBUG] django.db.backends: (0.041) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 17 ; args=(17,)
2012-08-01 16:11:45,114 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,114 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,115 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:45,115 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,115 [DEBUG] boto: Data: 
2012-08-01 16:11:45,115 [DEBUG] boto: Headers: {}
2012-08-01 16:11:45,115 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:45,115 [DEBUG] boto: Token: None
2012-08-01 16:11:45,115 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:45 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,180 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,181 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,181 [DEBUG] boto: Method: PUT
2012-08-01 16:11:45,181 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,181 [DEBUG] boto: Data: 
2012-08-01 16:11:45,181 [DEBUG] boto: Headers: {'Content-MD5': 'afYGEOK2yAqT5cu09J9NKQ==', 'Content-Length': '3952', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:45,181 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:45,181 [DEBUG] boto: Token: None
2012-08-01 16:11:45,181 [DEBUG] boto: StringToSign:
PUT
afYGEOK2yAqT5cu09J9NKQ==
application/octet-stream
Wed, 01 Aug 2012 20:11:45 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ
2012-08-01 16:11:45,319 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,319 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,319 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:45,319 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,319 [DEBUG] boto: Data: 
2012-08-01 16:11:45,319 [DEBUG] boto: Headers: {}
2012-08-01 16:11:45,319 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:45,319 [DEBUG] boto: Token: None
2012-08-01 16:11:45,320 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:45 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,401 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,401 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,401 [DEBUG] boto: Method: PUT
2012-08-01 16:11:45,401 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:45,401 [DEBUG] boto: Data: 
2012-08-01 16:11:45,401 [DEBUG] boto: Headers: {'Content-MD5': 'wHd31a/sRHa7tQQ4wdrrlA==', 'Content-Length': '67816', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:45,401 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:45,401 [DEBUG] boto: Token: None
2012-08-01 16:11:45,402 [DEBUG] boto: StringToSign:
PUT
wHd31a/sRHa7tQQ4wdrrlA==
application/octet-stream
Wed, 01 Aug 2012 20:11:45 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ
2012-08-01 16:11:46,240 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,240 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,240 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:46,240 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,240 [DEBUG] boto: Data: 
2012-08-01 16:11:46,240 [DEBUG] boto: Headers: {}
2012-08-01 16:11:46,240 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:46,240 [DEBUG] boto: Token: None
2012-08-01 16:11:46,240 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:46 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,294 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,294 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,295 [DEBUG] boto: Method: PUT
2012-08-01 16:11:46,295 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,295 [DEBUG] boto: Data: 
2012-08-01 16:11:46,295 [DEBUG] boto: Headers: {'Content-MD5': 'XYHCICGjRXyxfZvcO9CgvA==', 'Content-Length': '21886', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:46,295 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:46,295 [DEBUG] boto: Token: None
2012-08-01 16:11:46,295 [DEBUG] boto: StringToSign:
PUT
XYHCICGjRXyxfZvcO9CgvA==
application/octet-stream
Wed, 01 Aug 2012 20:11:46 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ
2012-08-01 16:11:46,648 [DEBUG] django.db.backends: (0.045) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 17, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ', 'user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ', '2012-08-01 20:11:46.603704+00:00', 'Pjs Pancake House', 'Caption defaulted to name: Pjs Pancake House') RETURNING "api_photo"."id"; args=(1, 17, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/17_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/17_Princeton_NJ', u'user_uploads/matt/2012-8-1.16.11/web/17_Princeton_NJ', u'2012-08-01 20:11:46.603704+00:00', 'Pjs Pancake House', 'Caption defaulted to name: Pjs Pancake House')
2012-08-01 16:11:46,773 [DEBUG] django.db.backends: (0.082) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:11:46,815 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ); args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:11:46,862 [DEBUG] django.db.backends: (0.046) SELECT "api_business"."id", "api_business"."name", "api_business"."date", "api_business"."lat", "api_business"."lon", "api_business"."geom", "api_business"."address", "api_business"."city", "api_business"."state", "api_business"."phone", "api_business"."zipcode" FROM "api_business" WHERE ("api_business"."city" = 'Kingston'  AND "api_business"."state" = 'NJ'  AND "api_business"."name" = 'Osteria Procaccini'  AND "api_business"."address" = '4428 Rt 27 N' ) LIMIT 1; args=('Kingston', 'NJ', 'Osteria Procaccini', '4428 Rt 27 N')
2012-08-01 16:11:46,906 [DEBUG] django.db.backends: (0.042) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag" WHERE "api_tag"."descr" = 'The Bottom Line' ; args=('The Bottom Line',)
2012-08-01 16:11:46,951 [DEBUG] django.db.backends: (0.044) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:46,994 [DEBUG] django.db.backends: (0.042) SELECT "api_businesscategory"."id", "api_businesscategory"."business_id", "api_businesscategory"."tag_id" FROM "api_businesscategory" WHERE ("api_businesscategory"."tag_id" = 1  AND "api_businesscategory"."business_id" = 18 ); args=(1, 18)
2012-08-01 16:11:47,037 [DEBUG] django.db.backends: (0.042) SELECT "wiki_page"."id", "wiki_page"."name", "wiki_page"."content", "wiki_page"."rendered", "wiki_page"."category_id" FROM "wiki_page" WHERE "wiki_page"."category_id" = 18 ; args=(18,)
2012-08-01 16:11:47,310 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,310 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,310 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:47,310 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,310 [DEBUG] boto: Data: 
2012-08-01 16:11:47,311 [DEBUG] boto: Headers: {}
2012-08-01 16:11:47,311 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:47,311 [DEBUG] boto: Token: None
2012-08-01 16:11:47,311 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:47 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,374 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,374 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,374 [DEBUG] boto: Method: PUT
2012-08-01 16:11:47,374 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,374 [DEBUG] boto: Data: 
2012-08-01 16:11:47,374 [DEBUG] boto: Headers: {'Content-MD5': '7wi1Ys3R1rFUBTnlksLa4A==', 'Content-Length': '4823', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:47,374 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:47,375 [DEBUG] boto: Token: None
2012-08-01 16:11:47,375 [DEBUG] boto: StringToSign:
PUT
7wi1Ys3R1rFUBTnlksLa4A==
application/octet-stream
Wed, 01 Aug 2012 20:11:47 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ
2012-08-01 16:11:47,517 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,517 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,517 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:47,517 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,517 [DEBUG] boto: Data: 
2012-08-01 16:11:47,517 [DEBUG] boto: Headers: {}
2012-08-01 16:11:47,517 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:47,517 [DEBUG] boto: Token: None
2012-08-01 16:11:47,517 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:47 GMT
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,575 [DEBUG] boto: path=/user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,576 [DEBUG] boto: auth_path=/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,576 [DEBUG] boto: Method: PUT
2012-08-01 16:11:47,576 [DEBUG] boto: Path: /user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:47,576 [DEBUG] boto: Data: 
2012-08-01 16:11:47,576 [DEBUG] boto: Headers: {'Content-MD5': 'jOrv/lzdZB578RnNV+Qzdg==', 'Content-Length': '82050', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:47,576 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:47,576 [DEBUG] boto: Token: None
2012-08-01 16:11:47,576 [DEBUG] boto: StringToSign:
PUT
jOrv/lzdZB578RnNV+Qzdg==
application/octet-stream
Wed, 01 Aug 2012 20:11:47 GMT
x-amz-acl:public-read
/allsortz/user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ
2012-08-01 16:11:48,589 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,589 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,589 [DEBUG] boto: Method: HEAD
2012-08-01 16:11:48,589 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,589 [DEBUG] boto: Data: 
2012-08-01 16:11:48,589 [DEBUG] boto: Headers: {}
2012-08-01 16:11:48,589 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:48,589 [DEBUG] boto: Token: None
2012-08-01 16:11:48,590 [DEBUG] boto: StringToSign:
HEAD


Wed, 01 Aug 2012 20:11:48 GMT
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,657 [DEBUG] boto: path=/user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,658 [DEBUG] boto: auth_path=/allsortz/user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,658 [DEBUG] boto: Method: PUT
2012-08-01 16:11:48,658 [DEBUG] boto: Path: /user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:48,658 [DEBUG] boto: Data: 
2012-08-01 16:11:48,658 [DEBUG] boto: Headers: {'Content-MD5': '3Ye+jcURuZjkknUAI/kc/g==', 'Content-Length': '27178', 'Expect': '100-Continue', 'User-Agent': 'Boto/2.5.2 (darwin)', 'Content-Type': 'application/octet-stream', 'x-amz-acl': 'public-read'}
2012-08-01 16:11:48,658 [DEBUG] boto: Host: allsortz.s3.amazonaws.com
2012-08-01 16:11:48,658 [DEBUG] boto: Token: None
2012-08-01 16:11:48,658 [DEBUG] boto: StringToSign:
PUT
3Ye+jcURuZjkknUAI/kc/g==
application/octet-stream
Wed, 01 Aug 2012 20:11:48 GMT
x-amz-acl:public-read
/allsortz/user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ
2012-08-01 16:11:49,083 [DEBUG] django.db.backends: (0.048) INSERT INTO "api_photo" ("user_id", "business_id", "is_default", "image", "image_medium", "image_thumb", "date", "title", "caption") VALUES (1, 18, true, 'user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ', 'user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ', 'user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ', '2012-08-01 20:11:49.035208+00:00', 'Osteria Procaccini', 'Caption defaulted to name: Osteria Procaccini') RETURNING "api_photo"."id"; args=(1, 18, True, u'user_uploads/profilepics/matt/2012-8-1.16.11/profile/18_Kingston_NJ', u'user_uploads/matt/2012-8-1.16.11/medium/18_Kingston_NJ', u'user_uploads/matt/2012-8-1.16.11/web/18_Kingston_NJ', u'2012-08-01 20:11:49.035208+00:00', 'Osteria Procaccini', 'Caption defaulted to name: Osteria Procaccini')
2012-08-01 16:11:49,248 [DEBUG] django.db.backends: (0.101) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Italian' ; args=('Italian',)
2012-08-01 16:11:49,289 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Mexican' ; args=('Mexican',)
2012-08-01 16:11:49,331 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Local' ; args=('Local',)
2012-08-01 16:11:49,372 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Authentic' ; args=('Authentic',)
2012-08-01 16:11:49,423 [DEBUG] django.db.backends: (0.050) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Buffet' ; args=('Buffet',)
2012-08-01 16:11:49,465 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Value' ; args=('Value',)
2012-08-01 16:11:49,506 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Chinese' ; args=('Chinese',)
2012-08-01 16:11:49,547 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sushi' ; args=('Sushi',)
2012-08-01 16:11:49,589 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Fast' ; args=('Fast',)
2012-08-01 16:11:49,631 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Cocktails' ; args=('Cocktails',)
2012-08-01 16:11:49,673 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Dessert' ; args=('Dessert',)
2012-08-01 16:11:49,715 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Coffee' ; args=('Coffee',)
2012-08-01 16:11:49,760 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sandwiches' ; args=('Sandwiches',)
2012-08-01 16:11:49,800 [DEBUG] django.db.backends: (0.039) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Pizza' ; args=('Pizza',)
2012-08-01 16:11:49,841 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Seafood' ; args=('Seafood',)
2012-08-01 16:11:49,882 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Classy' ; args=('Classy',)
2012-08-01 16:11:49,923 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Vegetarian' ; args=('Vegetarian',)
2012-08-01 16:11:49,967 [DEBUG] django.db.backends: (0.043) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Party' ; args=('Party',)
2012-08-01 16:11:50,010 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Carnivore' ; args=('Carnivore',)
2012-08-01 16:11:50,051 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Wine' ; args=('Wine',)
2012-08-01 16:11:50,092 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Healthy' ; args=('Healthy',)
2012-08-01 16:11:50,133 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'American' ; args=('American',)
2012-08-01 16:11:50,174 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Ice Cream' ; args=('Ice Cream',)
2012-08-01 16:11:50,215 [DEBUG] django.db.backends: (0.040) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Spicy' ; args=('Spicy',)
2012-08-01 16:11:50,259 [DEBUG] django.db.backends: (0.042) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Bakery' ; args=('Bakery',)
2012-08-01 16:11:50,299 [DEBUG] django.db.backends: (0.039) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'Sweets' ; args=('Sweets',)
2012-08-01 16:11:50,340 [DEBUG] django.db.backends: (0.041) SELECT COUNT(*) FROM "api_tag" WHERE "api_tag"."descr" = 'WiFi' ; args=('WiFi',)
2012-08-01 16:11:50,393 [DEBUG] django.db.backends: (0.051) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'matt' ; args=('matt',)
2012-08-01 16:11:50,439 [DEBUG] django.db.backends: (0.045) SELECT "api_tag"."id", "api_tag"."creator_id", "api_tag"."date", "api_tag"."descr", "api_tag"."icon" FROM "api_tag"; args=()
2012-08-01 16:11:50,486 [DEBUG] django.db.backends: (0.045) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('The Bottom Line', '2012-08-01 20:11:50.440345+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'The Bottom Line', u'2012-08-01 20:11:50.440345+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:50,612 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Italian', '2012-08-01 20:11:50.528974+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Italian', u'2012-08-01 20:11:50.528974+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:50,743 [DEBUG] django.db.backends: (0.088) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Mexican', '2012-08-01 20:11:50.655583+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Mexican', u'2012-08-01 20:11:50.655583+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:50,868 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Local', '2012-08-01 20:11:50.785906+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Local', u'2012-08-01 20:11:50.785906+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:50,995 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Authentic', '2012-08-01 20:11:50.910251+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Authentic', u'2012-08-01 20:11:50.910251+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,118 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Buffet', '2012-08-01 20:11:51.035982+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Buffet', u'2012-08-01 20:11:51.035982+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,250 [DEBUG] django.db.backends: (0.087) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Value', '2012-08-01 20:11:51.163372+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Value', u'2012-08-01 20:11:51.163372+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,379 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Chinese', '2012-08-01 20:11:51.295258+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Chinese', u'2012-08-01 20:11:51.295258+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,504 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sushi', '2012-08-01 20:11:51.421061+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sushi', u'2012-08-01 20:11:51.421061+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,628 [DEBUG] django.db.backends: (0.082) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Fast', '2012-08-01 20:11:51.546416+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Fast', u'2012-08-01 20:11:51.546416+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,757 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Cocktails', '2012-08-01 20:11:51.672281+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Cocktails', u'2012-08-01 20:11:51.672281+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:51,884 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Dessert', '2012-08-01 20:11:51.799982+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Dessert', u'2012-08-01 20:11:51.799982+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,009 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Coffee', '2012-08-01 20:11:51.925810+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Coffee', u'2012-08-01 20:11:51.925810+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,135 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sandwiches', '2012-08-01 20:11:52.051569+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sandwiches', u'2012-08-01 20:11:52.051569+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,264 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Pizza', '2012-08-01 20:11:52.181196+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Pizza', u'2012-08-01 20:11:52.181196+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,391 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Seafood', '2012-08-01 20:11:52.305847+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Seafood', u'2012-08-01 20:11:52.305847+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,527 [DEBUG] django.db.backends: (0.093) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Classy', '2012-08-01 20:11:52.434950+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Classy', u'2012-08-01 20:11:52.434950+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,656 [DEBUG] django.db.backends: (0.086) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Vegetarian', '2012-08-01 20:11:52.570512+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Vegetarian', u'2012-08-01 20:11:52.570512+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,780 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Party', '2012-08-01 20:11:52.698116+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Party', u'2012-08-01 20:11:52.698116+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:52,908 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Carnivore', '2012-08-01 20:11:52.823592+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Carnivore', u'2012-08-01 20:11:52.823592+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,033 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Wine', '2012-08-01 20:11:52.950340+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Wine', u'2012-08-01 20:11:52.950340+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,159 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Healthy', '2012-08-01 20:11:53.075818+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Healthy', u'2012-08-01 20:11:53.075818+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,286 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('American', '2012-08-01 20:11:53.202674+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'American', u'2012-08-01 20:11:53.202674+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,416 [DEBUG] django.db.backends: (0.089) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Ice Cream', '2012-08-01 20:11:53.327436+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Ice Cream', u'2012-08-01 20:11:53.327436+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,541 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Spicy', '2012-08-01 20:11:53.458339+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Spicy', u'2012-08-01 20:11:53.458339+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,666 [DEBUG] django.db.backends: (0.083) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Bakery', '2012-08-01 20:11:53.582942+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Bakery', u'2012-08-01 20:11:53.582942+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,791 [DEBUG] django.db.backends: (0.084) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('Sweets', '2012-08-01 20:11:53.707492+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'Sweets', u'2012-08-01 20:11:53.707492+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
2012-08-01 16:11:53,935 [DEBUG] django.db.backends: (0.085) INSERT INTO "queries_query" ("name", "date", "creator_id", "is_default", "proximity", "score", "price", "value", "networked", "deal", "visited", "unvisited", "text") VALUES ('WiFi', '2012-08-01 20:11:53.850421+00:00', 1, true, 5, 5, 5, 5, false, false, false, false, '') RETURNING "queries_query"."id"; args=(u'WiFi', u'2012-08-01 20:11:53.850421+00:00', 1, True, 5, 5, 5, 5, False, False, False, False, '')
